var Main = (function () {
    'use strict';

    function noop() { }
    const identity = x => x;
    function assign(tar, src) {
        // @ts-ignore
        for (const k in src)
            tar[k] = src[k];
        return tar;
    }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    let src_url_equal_anchor;
    function src_url_equal(element_src, url) {
        if (!src_url_equal_anchor) {
            src_url_equal_anchor = document.createElement('a');
        }
        src_url_equal_anchor.href = url;
        return element_src === src_url_equal_anchor.href;
    }
    function is_empty(obj) {
        return Object.keys(obj).length === 0;
    }
    function create_slot(definition, ctx, $$scope, fn) {
        if (definition) {
            const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);
            return definition[0](slot_ctx);
        }
    }
    function get_slot_context(definition, ctx, $$scope, fn) {
        return definition[1] && fn
            ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))
            : $$scope.ctx;
    }
    function get_slot_changes(definition, $$scope, dirty, fn) {
        if (definition[2] && fn) {
            const lets = definition[2](fn(dirty));
            if ($$scope.dirty === undefined) {
                return lets;
            }
            if (typeof lets === 'object') {
                const merged = [];
                const len = Math.max($$scope.dirty.length, lets.length);
                for (let i = 0; i < len; i += 1) {
                    merged[i] = $$scope.dirty[i] | lets[i];
                }
                return merged;
            }
            return $$scope.dirty | lets;
        }
        return $$scope.dirty;
    }
    function update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {
        if (slot_changes) {
            const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);
            slot.p(slot_context, slot_changes);
        }
    }
    function get_all_dirty_from_scope($$scope) {
        if ($$scope.ctx.length > 32) {
            const dirty = [];
            const length = $$scope.ctx.length / 32;
            for (let i = 0; i < length; i++) {
                dirty[i] = -1;
            }
            return dirty;
        }
        return -1;
    }
    function exclude_internal_props(props) {
        const result = {};
        for (const k in props)
            if (k[0] !== '$')
                result[k] = props[k];
        return result;
    }
    function compute_slots(slots) {
        const result = {};
        for (const key in slots) {
            result[key] = true;
        }
        return result;
    }
    function null_to_empty(value) {
        return value == null ? '' : value;
    }
    function action_destroyer(action_result) {
        return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;
    }

    const is_client = typeof window !== 'undefined';
    let now = is_client
        ? () => window.performance.now()
        : () => Date.now();
    let raf = is_client ? cb => requestAnimationFrame(cb) : noop;

    const tasks = new Set();
    function run_tasks(now) {
        tasks.forEach(task => {
            if (!task.c(now)) {
                tasks.delete(task);
                task.f();
            }
        });
        if (tasks.size !== 0)
            raf(run_tasks);
    }
    /**
     * Creates a new task that runs on each raf frame
     * until it returns a falsy value or is aborted
     */
    function loop(callback) {
        let task;
        if (tasks.size === 0)
            raf(run_tasks);
        return {
            promise: new Promise(fulfill => {
                tasks.add(task = { c: callback, f: fulfill });
            }),
            abort() {
                tasks.delete(task);
            }
        };
    }
    function append(target, node) {
        target.appendChild(node);
    }
    function get_root_for_style(node) {
        if (!node)
            return document;
        const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;
        if (root && root.host) {
            return root;
        }
        return node.ownerDocument;
    }
    function append_empty_stylesheet(node) {
        const style_element = element('style');
        append_stylesheet(get_root_for_style(node), style_element);
        return style_element.sheet;
    }
    function append_stylesheet(node, style) {
        append(node.head || node, style);
        return style.sheet;
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        if (node.parentNode) {
            node.parentNode.removeChild(node);
        }
    }
    function destroy_each(iterations, detaching) {
        for (let i = 0; i < iterations.length; i += 1) {
            if (iterations[i])
                iterations[i].d(detaching);
        }
    }
    function element(name) {
        return document.createElement(name);
    }
    function svg_element(name) {
        return document.createElementNS('http://www.w3.org/2000/svg', name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function empty() {
        return text('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_input_value(input, value) {
        input.value = value == null ? '' : value;
    }
    function set_style(node, key, value, important) {
        if (value === null) {
            node.style.removeProperty(key);
        }
        else {
            node.style.setProperty(key, value, important ? 'important' : '');
        }
    }
    function toggle_class(element, name, toggle) {
        element.classList[toggle ? 'add' : 'remove'](name);
    }
    function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, bubbles, cancelable, detail);
        return e;
    }
    class HtmlTag {
        constructor(is_svg = false) {
            this.is_svg = false;
            this.is_svg = is_svg;
            this.e = this.n = null;
        }
        c(html) {
            this.h(html);
        }
        m(html, target, anchor = null) {
            if (!this.e) {
                if (this.is_svg)
                    this.e = svg_element(target.nodeName);
                else
                    this.e = element(target.nodeName);
                this.t = target;
                this.c(html);
            }
            this.i(anchor);
        }
        h(html) {
            this.e.innerHTML = html;
            this.n = Array.from(this.e.childNodes);
        }
        i(anchor) {
            for (let i = 0; i < this.n.length; i += 1) {
                insert(this.t, this.n[i], anchor);
            }
        }
        p(html) {
            this.d();
            this.h(html);
            this.i(this.a);
        }
        d() {
            this.n.forEach(detach);
        }
    }

    // we need to store the information for multiple documents because a Svelte application could also contain iframes
    // https://github.com/sveltejs/svelte/issues/3624
    const managed_styles = new Map();
    let active = 0;
    // https://github.com/darkskyapp/string-hash/blob/master/index.js
    function hash(str) {
        let hash = 5381;
        let i = str.length;
        while (i--)
            hash = ((hash << 5) - hash) ^ str.charCodeAt(i);
        return hash >>> 0;
    }
    function create_style_information(doc, node) {
        const info = { stylesheet: append_empty_stylesheet(node), rules: {} };
        managed_styles.set(doc, info);
        return info;
    }
    function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {
        const step = 16.666 / duration;
        let keyframes = '{\n';
        for (let p = 0; p <= 1; p += step) {
            const t = a + (b - a) * ease(p);
            keyframes += p * 100 + `%{${fn(t, 1 - t)}}\n`;
        }
        const rule = keyframes + `100% {${fn(b, 1 - b)}}\n}`;
        const name = `__svelte_${hash(rule)}_${uid}`;
        const doc = get_root_for_style(node);
        const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);
        if (!rules[name]) {
            rules[name] = true;
            stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);
        }
        const animation = node.style.animation || '';
        node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;
        active += 1;
        return name;
    }
    function delete_rule(node, name) {
        const previous = (node.style.animation || '').split(', ');
        const next = previous.filter(name
            ? anim => anim.indexOf(name) < 0 // remove specific animation
            : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations
        );
        const deleted = previous.length - next.length;
        if (deleted) {
            node.style.animation = next.join(', ');
            active -= deleted;
            if (!active)
                clear_rules();
        }
    }
    function clear_rules() {
        raf(() => {
            if (active)
                return;
            managed_styles.forEach(info => {
                const { ownerNode } = info.stylesheet;
                // there is no ownerNode if it runs on jsdom.
                if (ownerNode)
                    detach(ownerNode);
            });
            managed_styles.clear();
        });
    }

    function create_animation(node, from, fn, params) {
        if (!from)
            return noop;
        const to = node.getBoundingClientRect();
        if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)
            return noop;
        const { delay = 0, duration = 300, easing = identity, 
        // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?
        start: start_time = now() + delay, 
        // @ts-ignore todo:
        end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);
        let running = true;
        let started = false;
        let name;
        function start() {
            if (css) {
                name = create_rule(node, 0, 1, duration, delay, easing, css);
            }
            if (!delay) {
                started = true;
            }
        }
        function stop() {
            if (css)
                delete_rule(node, name);
            running = false;
        }
        loop(now => {
            if (!started && now >= start_time) {
                started = true;
            }
            if (started && now >= end) {
                tick(1, 0);
                stop();
            }
            if (!running) {
                return false;
            }
            if (started) {
                const p = now - start_time;
                const t = 0 + 1 * easing(p / duration);
                tick(t, 1 - t);
            }
            return true;
        });
        start();
        tick(0, 1);
        return stop;
    }
    function fix_position(node) {
        const style = getComputedStyle(node);
        if (style.position !== 'absolute' && style.position !== 'fixed') {
            const { width, height } = style;
            const a = node.getBoundingClientRect();
            node.style.position = 'absolute';
            node.style.width = width;
            node.style.height = height;
            add_transform(node, a);
        }
    }
    function add_transform(node, a) {
        const b = node.getBoundingClientRect();
        if (a.left !== b.left || a.top !== b.top) {
            const style = getComputedStyle(node);
            const transform = style.transform === 'none' ? '' : style.transform;
            node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;
        }
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error('Function called outside component initialization');
        return current_component;
    }
    /**
     * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.
     * It must be called during the component's initialisation (but doesn't need to live *inside* the component;
     * it can be called from an external module).
     *
     * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).
     *
     * https://svelte.dev/docs#run-time-svelte-onmount
     */
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }
    /**
     * Schedules a callback to run immediately after the component has been updated.
     *
     * The first time the callback runs will be after the initial `onMount`
     */
    function afterUpdate(fn) {
        get_current_component().$$.after_update.push(fn);
    }

    const dirty_components = [];
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    function add_flush_callback(fn) {
        flush_callbacks.push(fn);
    }
    // flush() calls callbacks in this order:
    // 1. All beforeUpdate callbacks, in order: parents before children
    // 2. All bind:this callbacks, in reverse order: children before parents.
    // 3. All afterUpdate callbacks, in order: parents before children. EXCEPT
    //    for afterUpdates called during the initial onMount, which are called in
    //    reverse order: children before parents.
    // Since callbacks might update component values, which could trigger another
    // call to flush(), the following steps guard against this:
    // 1. During beforeUpdate, any updated components will be added to the
    //    dirty_components array and will cause a reentrant call to flush(). Because
    //    the flush index is kept outside the function, the reentrant call will pick
    //    up where the earlier call left off and go through all dirty components. The
    //    current_component value is saved and restored so that the reentrant call will
    //    not interfere with the "parent" flush() call.
    // 2. bind:this callbacks cannot trigger new flush() calls.
    // 3. During afterUpdate, any updated components will NOT have their afterUpdate
    //    callback called a second time; the seen_callbacks set, outside the flush()
    //    function, guarantees this behavior.
    const seen_callbacks = new Set();
    let flushidx = 0; // Do *not* move this inside the flush() function
    function flush() {
        const saved_component = current_component;
        do {
            // first, call beforeUpdate functions
            // and update components
            while (flushidx < dirty_components.length) {
                const component = dirty_components[flushidx];
                flushidx++;
                set_current_component(component);
                update(component.$$);
            }
            set_current_component(null);
            dirty_components.length = 0;
            flushidx = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        seen_callbacks.clear();
        set_current_component(saved_component);
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }

    let promise;
    function wait() {
        if (!promise) {
            promise = Promise.resolve();
            promise.then(() => {
                promise = null;
            });
        }
        return promise;
    }
    function dispatch(node, direction, kind) {
        node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));
    }
    const outroing = new Set();
    let outros;
    function group_outros() {
        outros = {
            r: 0,
            c: [],
            p: outros // parent group
        };
    }
    function check_outros() {
        if (!outros.r) {
            run_all(outros.c);
        }
        outros = outros.p;
    }
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function transition_out(block, local, detach, callback) {
        if (block && block.o) {
            if (outroing.has(block))
                return;
            outroing.add(block);
            outros.c.push(() => {
                outroing.delete(block);
                if (callback) {
                    if (detach)
                        block.d(1);
                    callback();
                }
            });
            block.o(local);
        }
        else if (callback) {
            callback();
        }
    }
    const null_transition = { duration: 0 };
    function create_in_transition(node, fn, params) {
        const options = { direction: 'in' };
        let config = fn(node, params, options);
        let running = false;
        let animation_name;
        let task;
        let uid = 0;
        function cleanup() {
            if (animation_name)
                delete_rule(node, animation_name);
        }
        function go() {
            const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;
            if (css)
                animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);
            tick(0, 1);
            const start_time = now() + delay;
            const end_time = start_time + duration;
            if (task)
                task.abort();
            running = true;
            add_render_callback(() => dispatch(node, true, 'start'));
            task = loop(now => {
                if (running) {
                    if (now >= end_time) {
                        tick(1, 0);
                        dispatch(node, true, 'end');
                        cleanup();
                        return running = false;
                    }
                    if (now >= start_time) {
                        const t = easing((now - start_time) / duration);
                        tick(t, 1 - t);
                    }
                }
                return running;
            });
        }
        let started = false;
        return {
            start() {
                if (started)
                    return;
                started = true;
                delete_rule(node);
                if (is_function(config)) {
                    config = config(options);
                    wait().then(go);
                }
                else {
                    go();
                }
            },
            invalidate() {
                started = false;
            },
            end() {
                if (running) {
                    cleanup();
                    running = false;
                }
            }
        };
    }

    const globals = (typeof window !== 'undefined'
        ? window
        : typeof globalThis !== 'undefined'
            ? globalThis
            : global);
    function outro_and_destroy_block(block, lookup) {
        transition_out(block, 1, 1, () => {
            lookup.delete(block.key);
        });
    }
    function fix_and_outro_and_destroy_block(block, lookup) {
        block.f();
        outro_and_destroy_block(block, lookup);
    }
    function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {
        let o = old_blocks.length;
        let n = list.length;
        let i = o;
        const old_indexes = {};
        while (i--)
            old_indexes[old_blocks[i].key] = i;
        const new_blocks = [];
        const new_lookup = new Map();
        const deltas = new Map();
        i = n;
        while (i--) {
            const child_ctx = get_context(ctx, list, i);
            const key = get_key(child_ctx);
            let block = lookup.get(key);
            if (!block) {
                block = create_each_block(key, child_ctx);
                block.c();
            }
            else if (dynamic) {
                block.p(child_ctx, dirty);
            }
            new_lookup.set(key, new_blocks[i] = block);
            if (key in old_indexes)
                deltas.set(key, Math.abs(i - old_indexes[key]));
        }
        const will_move = new Set();
        const did_move = new Set();
        function insert(block) {
            transition_in(block, 1);
            block.m(node, next);
            lookup.set(block.key, block);
            next = block.first;
            n--;
        }
        while (o && n) {
            const new_block = new_blocks[n - 1];
            const old_block = old_blocks[o - 1];
            const new_key = new_block.key;
            const old_key = old_block.key;
            if (new_block === old_block) {
                // do nothing
                next = new_block.first;
                o--;
                n--;
            }
            else if (!new_lookup.has(old_key)) {
                // remove old block
                destroy(old_block, lookup);
                o--;
            }
            else if (!lookup.has(new_key) || will_move.has(new_key)) {
                insert(new_block);
            }
            else if (did_move.has(old_key)) {
                o--;
            }
            else if (deltas.get(new_key) > deltas.get(old_key)) {
                did_move.add(new_key);
                insert(new_block);
            }
            else {
                will_move.add(old_key);
                o--;
            }
        }
        while (o--) {
            const old_block = old_blocks[o];
            if (!new_lookup.has(old_block.key))
                destroy(old_block, lookup);
        }
        while (n)
            insert(new_blocks[n - 1]);
        return new_blocks;
    }
    function validate_each_keys(ctx, list, get_context, get_key) {
        const keys = new Set();
        for (let i = 0; i < list.length; i++) {
            const key = get_key(get_context(ctx, list, i));
            if (keys.has(key)) {
                throw new Error('Cannot have duplicate keys in a keyed each');
            }
            keys.add(key);
        }
    }

    function bind(component, name, callback, value) {
        const index = component.$$.props[name];
        if (index !== undefined) {
            component.$$.bound[index] = callback;
            if (value === undefined) {
                callback(component.$$.ctx[index]);
            }
        }
    }
    function create_component(block) {
        block && block.c();
    }
    function mount_component(component, target, anchor, customElement) {
        const { fragment, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        if (!customElement) {
            // onMount happens before the initial afterUpdate
            add_render_callback(() => {
                const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);
                // if the component was destroyed immediately
                // it will update the `$$.on_destroy` reference to `null`.
                // the destructured on_destroy may still reference to the old array
                if (component.$$.on_destroy) {
                    component.$$.on_destroy.push(...new_on_destroy);
                }
                else {
                    // Edge case - component was destroyed immediately,
                    // most likely as a result of a binding initialising
                    run_all(new_on_destroy);
                }
                component.$$.on_mount = [];
            });
        }
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const $$ = component.$$ = {
            fragment: null,
            ctx: [],
            // state
            props,
            update: noop,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            on_disconnect: [],
            before_update: [],
            after_update: [],
            context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
            // everything else
            callbacks: blank_object(),
            dirty,
            skip_bound: false,
            root: options.target || parent_component.$$.root
        };
        append_styles && append_styles($$.root);
        let ready = false;
        $$.ctx = instance
            ? instance(component, options.props || {}, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if (!$$.skip_bound && $$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor, options.customElement);
            flush();
        }
        set_current_component(parent_component);
    }
    /**
     * Base class for Svelte components. Used when dev=false.
     */
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            if (!is_function(callback)) {
                return noop;
            }
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.54.0' }, detail), { bubbles: true }));
    }
    function append_dev(target, node) {
        dispatch_dev('SvelteDOMInsert', { target, node });
        append(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev('SvelteDOMInsert', { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev('SvelteDOMRemove', { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
        const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
        else
            dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
    }
    function prop_dev(node, property, value) {
        node[property] = value;
        dispatch_dev('SvelteDOMSetProperty', { node, property, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.wholeText === data)
            return;
        dispatch_dev('SvelteDOMSetData', { node: text, data });
        text.data = data;
    }
    function validate_each_argument(arg) {
        if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
            let msg = '{#each} only iterates over array-like objects.';
            if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
                msg += ' You can use a spread to convert this iterable into an array.';
            }
            throw new Error(msg);
        }
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    /**
     * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
     */
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error("'target' is a required option");
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn('Component was already destroyed'); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs');
    }

    function unwrapExports (x) {
    	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
    }

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    var main = createCommonjsModule(function (module, exports) {
    (function(global, factory) {
    	 factory(exports) ;
    }(commonjsGlobal, (function(exports) {
    	const mod = {

    		OLSKInternationalDefaultIdentifier () {
    			return 'i18n';
    		},

    		OLSKInternationalIsTranslationFileBasename (inputData) {
    			if (typeof inputData !== 'string') {
    				return false;
    			}

    			if (inputData.split('.').length < 2) {
    				return false;
    			}

    			if (!inputData.split('.').pop().match(/ya?ml/i)) {
    				return false;
    			}

    			if (inputData.split('-').shift() !== mod.OLSKInternationalDefaultIdentifier()) {
    				return false;
    			}

    			if (!mod._OLSKInternationalLanguageID(inputData)) {
    				return false;
    			}

    			return true;
    		},

    		OLSKInternationalLanguageID (inputData) {
    			if (!mod.OLSKInternationalIsTranslationFileBasename(inputData)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return mod._OLSKInternationalLanguageID(inputData);
    		},

    		OLSKInternationalSimplifiedLanguageCode (inputData) {
    			if (typeof inputData !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return inputData.split('-').shift();
    		},

    		_OLSKInternationalLanguageID (inputData) {
    			return inputData.replace(mod.OLSKInternationalDefaultIdentifier() + '-', '').split('.').shift();
    		},

    		OLSKInternationalLocalizedString (translationKey, translationDictionary) {
    			if (typeof translationDictionary !== 'object' || translationDictionary === null) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			var localizedString = translationDictionary[translationKey];

    			if (!localizedString) {
    				localizedString = 'TRANSLATION_MISSING';
    				console.log([
    					localizedString,
    					translationKey,
    					]);
    			}

    			return localizedString;
    		},

    		OLSKInternationalLocalizedStringCallback (dictionary, fallbackLocales) {
    			if (typeof dictionary !== 'object' || dictionary === null) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (!Array.isArray(fallbackLocales)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			const _locales = Object.keys(dictionary).reverse().concat(...fallbackLocales.map(function (e) {
    					return [mod.OLSKInternationalSimplifiedLanguageCode(e), e]
    				}).reverse());

    			return function (signature, requestLocales) {
    				if (!Array.isArray(requestLocales)) {
    					throw new Error('OLSKErrorInputNotValid');
    				}

    				let locales = _locales.concat(...requestLocales.map(function (e) {
    					return [mod.OLSKInternationalSimplifiedLanguageCode(e), e]
    				}).reverse(), []);

    				let outputData;

    				while (!outputData && locales.length) {
    					outputData = (dictionary[locales.pop()] || {})[signature];
    				}

    				if (!outputData) {
    					console.log([outputData = 'TRANSLATION_MISSING', signature].join(' '));
    				}

    				return outputData;				
    			};
    		},

    		_OLSKInternationalPaths (cwd, filter) {
    			if (typeof cwd !== 'string' || !cwd.trim()) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			const _require = commonjsRequire;

    			return _require().sync(`**/*${ mod.OLSKInternationalDefaultIdentifier() }*.y*(a)ml`, {
    				cwd,
    				realpath: true,
    			}).filter(function (e) {
    				if (!filter) {
    					return true;
    				}

    				return !e.match(filter);
    			}).filter(function (e) {
    				return mod.OLSKInternationalIsTranslationFileBasename(_require().basename(e));
    			});
    		},

    		_OLSKInternationalConstructedDictionary (inputData) {
    			if (!Array.isArray(inputData)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			const _require = commonjsRequire;

    			return inputData.reduce(function (coll, item) {
    				const key = mod.OLSKInternationalLanguageID(_require().basename(item));

    				coll[key] = Object.assign(coll[key] || {}, _require().load(_require().readFileSync(item, 'utf8')));

    				return coll;
    			}, {});
    		},

    		OLSKInternationalDictionary (cwd) {
    			return this._OLSKInternationalConstructedDictionary(this._OLSKInternationalPaths(cwd));
    		},

    		_OLSKInternationalCompilationObject (cwd, languageID) {
    			const _require = commonjsRequire;

    			return this._OLSKInternationalPaths(cwd, /node_modules|__external/).filter(function (e) {
    				if (!languageID) {
    					return true;
    				}

    				return mod.OLSKInternationalLanguageID(_require().basename(e)) === languageID;
    			}).reduce(function (coll, item) {
    				return Object.assign(coll, {
    					[item]: _require().load(_require().readFileSync(item, 'utf8')),
    				});
    			}, {});
    		},

    		_OLSKInternationalCompilationFilePath (cwd) {
    			if (typeof cwd !== 'string' || !cwd.trim()) {
    				throw new Error('OLSKErrorInputNotValid');
    			}
    			const _require = commonjsRequire;

    			return _require().join(cwd, '__compiled', mod.OLSKInternationalDefaultIdentifier() + '-compilation.yml')
    		},

    		_SafeDump (inputData) {
    			const _require = commonjsRequire;

    			return _require().dump(inputData, {
    				lineWidth: Infinity,
    			});
    		},

    		OLSKInternationalWriteCompilationFile (cwd, languageID) {
    			const _require = commonjsRequire;

    			const data = mod._SafeDump(this._OLSKInternationalCompilationObject(cwd, languageID));

    			const outputDirectory = _require().dirname(mod._OLSKInternationalCompilationFilePath(cwd));

    			if (!_require().existsSync(outputDirectory)){
    				_require().mkdirSync(outputDirectory);
    			}

    			_require().writeFileSync(mod._OLSKInternationalCompilationFilePath(cwd), data);
    		},

    		OLSKInternationalSpreadCompilationFile (cwd, languageID) {
    			if (typeof cwd !== 'string' || !cwd.trim()) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			const _require = commonjsRequire;

    			const compilation = _require().load(_require().readFileSync(mod._OLSKInternationalCompilationFilePath(cwd), 'utf8'));

    			Object.keys(compilation).map(function (e) {
    				return _require().writeFileSync(e, mod._SafeDump(compilation[e]));
    			});
    		},

    		OLSKInternationalAddControllerLanguageCode (cwd, languageID) {
    			if (typeof cwd !== 'string' || !cwd.trim()) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof languageID !== 'string' || !languageID.trim()) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			const _require = commonjsRequire;

    			_require().sync('controller.js', {
    				cwd,
    				matchBase: true,
    				realpath: true,
    			}).forEach(function (file) {
    				if (file.match(/.*(\.git|DS_Store|node_modules|vendor|__\w+)\/.*/i)) {
    					return
    				}

    				const item = _require();

    				if (typeof item.OLSKControllerRoutes !== 'function') {
    					return;
    				}

    				if (!(function(inputData) {
    					if (Array.isArray(inputData)) {
    						return inputData;
    					}
    					return Object.entries(inputData).reduce(function (coll, item) {
    						return coll.concat(Object.assign(item[1], {
    							OLSKRouteSignature: item[0],
    						}));
    					}, []);
    				})(item.OLSKControllerRoutes()).filter(function (e) {
    					return e.OLSKRouteLanguageCodes;
    				}).filter(function (e) {
    					return !e.OLSKRouteLanguageCodes.includes(languageID);
    				}).length) {
    					return
    				}
    				const match = _require().readFileSync(file, 'utf8').match(/OLSKRouteLanguageCodes: \[.*\]/g);

    				if (!match) {
    					throw new Error(`invalid OLSKRouteLanguageCodes syntax in ${ e }`);
    				}

    				match.map(function (e) {
    					const match = e.match(/\[.*\]/);
    					return _require().writeFileSync(file, _require().readFileSync(file, 'utf8').replace(/OLSKRouteLanguageCodes: \[.*\]/, `OLSKRouteLanguageCodes: ['${JSON.parse(match[0].replace(/\'/g, '"')).concat(languageID).join('\', \'')}']`));
    				});
    			});

    			if (process.argv[2].endsWith('olsk-i18n-add')) {
    				process.exit();
    			}
    		},

    	};
    	
    	Object.assign(exports, mod);

    	Object.defineProperty(exports, '__esModule', {
    		value: true
    	});

    })));

    {
    	exports.OLSKLocalized = function (inputData) {
    		return exports.OLSKInternationalLocalizedString(inputData, {"compilation":{"/Users/rozano/Mega/jbx/jbx-web/os-app/open-guide/i18n.pt.yml":{"JBXGuideTitle":"Guia Joybox","JBXGuideDescription":"Documentação do projeto"},"/Users/rozano/Mega/jbx/jbx-web/os-app/open-play/i18n.pt.yml":{"JBXPlayTitle":"Tocar","JBXPlayStashButtonText":"Empilhar","JBXPlayToggleFormButtonText":"Adicionar","JBXPlayClearInboxButtonText":"Limpar caixa de entrada","JBXPlayFormFieldText":"Cole seus links aqui.","JBXPlayFormSubmitButtonText":"Enviar","JBXPlayChunkInboxText":"Caixa de entrada","JBXPlayChunkTodayText":"Hoje","JBXPlayChunkYesterdayText":"Ontem","JBXPlayChunkArchiveText":"Arquivo","JBXPlayRevealArchiveButtonText":"Revelar o arquivo","JBXPlayShareModalTitleText":"Compartilhar"},"/Users/rozano/Mega/jbx/jbx-web/os-app/open-vitrine/i18n.pt.yml":{"JBXVitrineTitle":"Joybox","JBXVitrineDescription":"A pinboard for media.","OLSKLandingBlurbText":"Coletar, tocar e compartilhar múltiplas plataformas em um só lugar."},"/Users/rozano/Mega/jbx/jbx-web/os-app/sub-detail/i18n.pt.yml":{"JBXPlayDetailToolbarBackButtonText":"Voltar","JBXPlayDetailToolbarQueueButtonText":"Adicionar à coleção","JBXPlayDetailToolbarArchiveButtonText":"Arquivar","JBXPlayDetailToolbarUnarchiveButtonText":"Desarquivar","JBXPlayDetailToolbarDiscardButtonText":"Descartar","JBXPlayDetailDiscardConfirmText":"Você tem certeza?","JBXPlayDetailMediaURLFieldText":"URL","JBXPlayDetailMediaOpenButtonText":"Abrir","JBXPlayDetailMediaFetchButtonText":"Buscar","JBXPlayDetailFormNameFieldText":"Nome","JBXPlayDetailFormNotesFieldText":"Notas"},"/Users/rozano/Mega/jbx/jbx-web/os-app/sub-share/i18n.pt.yml":{"JBXPlayShareLinkFieldText":"Link","JBXPlayShareCopyButtonText":"Copiar link"}},"en":{"OLSKAppFeatureListArray":[["Accessible anywhere.","Works on mobile, tablet, and desktop devices."],["No Wi-Fi, no problem.","Works offline without internet access."],["Your data on all your devices.","Automatic cloud sync with remoteStorage or Fission."],["Efficient workflow.","Keyboard shortcuts for most things."],["Move data freely.","Import and export JSON data (beta)."],["Blind-friendly.","Text labels on all elements."],["Private, not creepy.","No behavioural analytics or cross-site trackers."],["Own your data.","100% yours in a <a href=\"https://0data.app\">0data</a> app."]],"OLSKAppFeatureOpenSourceNameText":"Open-source.","OLSKAppFeatureOpenSourceBlurbFormat":"The code is <a href=\"%@\">public</a> to read and modify.","OLSKAppToolbarCloudStatusOnline":"Online","OLSKAppToolbarCloudStatusOffline":"Offline","OLSKAppToolbarCloudStatusError":"Error","OLSKAppToolbarAproposButtonText":"More info","OLSKAppToolbarLanguageButtonText":"Language","OLSKAppToolbarGuideLinkText":"Guide","OLSKAppToolbarFundButtonText":"Fund","OLSKAppToolbarLauncherButtonText":"Launcher","OLSKAppToolbarCloudButtonText":"Cloud","OLSKAproposHeadingText":"About","OLSKAproposFeedbackButtonText":"Send feedback","OLSKAproposShareButtonText":"Tell a friend","OLSKCatalogMasterPlaceholderText":"Tap + to create an item.","OLSKCatalogStashPlaceholderTextFormat":"Items selected: %@","OLSKCloudRenewButtonText":"Renew","OLSKCloudFormConnectButtonText":"Connect","OLSKCloudFormRegisterLinkText":"Get a cloud","OLSKCloudStatusSyncStartButtonText":"Sync","OLSKCloudStatusSyncStopButtonText":"Stop","OLSKCloudStatusDisconnectButtonText":"Disconnect","OLSKCloudStatusDisconnectConfirmText":"Are you sure?","OLSKEditText":"Edit this","OLSKFollowTextFormat":"Find me on %$1@ or %$2@.","OLSKFundGrantErrorConnectionText":"Connection error","OLSKFundGrantErrorDecryptionText":"Decryption error","OLSKFundGrantErrorSigningText":"Signing error","OLSKFundGateText":"Unlock unlimited documents by making a contribution to the project. Would you like to do this now?","OLSKFundWebViewTitleText":"Fund a project","OLSKFundLauncherItemEnterClueText":"Enter confirmation code","OLSKFundLauncherItemEnterCluePromptText":"Enter confirmation code","OLSKFundLauncherItemClearClueText":"Clear authorization","OLSKFundLauncherItemClearClueConfirmText":"Are you sure?","OLSKFundGrantErrorExpiredText":"Access expired","OLSKInputWrapperClearButtonText":"Clear text","OLSKInstallAlertHeadingText":"Install on your device","OLSKInstallAlertBlurbHTMLFormat":"Tap <em>Share</em> %$1@, then <em>Add to Home Screen</em> %$2@","OLSKInstallAlertDismissButtonText":"Dismiss","OLSKLanguageSwitcherVersionFormat":"Version in %@","OLSKLanguageSwitcherVersionName":{"en":"English","fr":"French","es":"Spanish","pt":"Portuguese"},"OLSKModalViewCloseButtonText":"Done","OLSKNarrowFilterFieldText":"Filter","OLSKPlaceholderText":"No item selected","OLSKReloadButtonText":"Reload","OLSKRemoteStorageConnectConfirmText":"Connect your cloud to continue. Would you like to do this now?","OLSKRemoteStorageLauncherItemOpenLoginLinkText":"Open access link","OLSKRemoteStorageLauncherItemOpenLoginLinkPromptText":"Access link","OLSKRemoteStorageLauncherItemCopyLoginLinkText":"Copy private access link","OLSKRemoteStorageLauncherItemDebugFlushDataText":"Flush data","OLSKRemoteStorageLauncherItemDebugFlushDataConfirmText":"Are you sure?","OLSKRootLinkTextHome":"Return to the homepage","OLSKServiceWorkerUpdateAlertLabelText":"Update available","OLSKServiceWorkerUpdateAlertReloadButtonText":"Reload","OLSKServiceWorkerLauncherItemReloadText":"Reload","OLSKServiceWorkerLauncherItemDebugForceUpdateText":"Force update","OLSKTaxonomyFieldText":"Tags","OLSKTaxonomyHintTemplate":"Press <code>Enter</code> to add <strong>%@</strong>.","OLSKTransportLauncherItemImportJSONText":"Import JSON (beta)","OLSKTransportLauncherItemImportJSONErrorNotFilledAlertText":"Input not filled","OLSKTransportLauncherItemImportJSONErrorNotValidAlertText":"Input not valid","OLSKTransportLauncherItemExportJSONText":"Export JSON (beta)","OLSKWebViewWindowButtonText":"Open in new window","OLSKWordingConfirmText":"Are you sure?","OLSKWordingOpenApp":"Open app","OLSKWordingFeatures":"Features","OLSKWordingOpenGuide":"See the guide","OLSKWordingDeeperHeading":"Go deeper","OLSKWordingVideo":"Video","OLSKWordingTestimonials":"Testimonials","OLSKWordingFeedbackHeading":"Feedback","OLSKWordingFeedbackBlurb":"From within the app, tap the ℹ︎ button, then select \"Send feedback\".","OLSKWordingTypeToSearch":"Type to search","OLSKWordingTypeToFilter":"Type to filter","OLSKWordingCancelText":"Cancel","OLSKWordingDownloadText":"Download","OLSKWordingEditText":"Edit","OLSKWordingDebugObjectText":"Debug this object","ROCOBulletinSubmitButtonText":"Subscribe to mailing list","ROCOBulletinFeedbackText":"Check your inbox (and maybe the spam folder) for an activation link.","ROCOGazetteHeadingText":"Follow my journey","ROCOGlossaryHeadingText":"A new breed of apps","ROCOGlossaryDoorlessLinkText":"Doorless philosophy","ROCOGlossaryDoorlessBlurbText":"Apps as non-exclusionary public spaces.","ROCOGlossaryZeroDataLinkText":"Learn more about Zero Data apps","ROCOGlossaryZeroDataBlurbText":"Own your data, 100%","ROCORootLinkText":"Visit rosano.ca","SWARLinkText":"Part of the Doorless App Ring","JBXGuideTitle":"Joybox Guide","JBXGuideDescription":"Documentation for project","JBXPlayStashButtonText":"Stash","JBXPlayToggleFormButtonText":"Add","JBXPlayClearInboxButtonText":"Clear inbox","JBXPlayFormFieldText":"Paste your links here.","JBXPlayFormSubmitButtonText":"Submit","JBXPlayChunkInboxText":"Inbox","JBXPlayChunkTodayText":"Today","JBXPlayChunkYesterdayText":"Yesterday","JBXPlayChunkArchiveText":"Archive","JBXPlayRevealArchiveButtonText":"Reveal archive","JBXPlayShareModalTitleText":"Share","JBXPlayTitle":"Play","JBXVitrineTitle":"Joybox","JBXVitrineDescription":"A pinboard for audiovisual media.","OLSKLandingBlurbText":"Collect, play, and share multiple platforms in one place.","JBXVitrineGlossaryFleetingArrivalsBlurbText":"My music recommendations blog.","JBXVitrineGlossaryWetwareBlurbText":"How I use Joybox to stay focused.","JBXPlayDetailToolbarBackButtonText":"Back","JBXPlayDetailToolbarQueueButtonText":"Add to collection","JBXPlayDetailToolbarArchiveButtonText":"Archive","JBXPlayDetailToolbarUnarchiveButtonText":"Unarchive","JBXPlayDetailToolbarDiscardButtonText":"Discard","JBXPlayDetailMediaURLFieldText":"URL","JBXPlayDetailMediaOpenButtonText":"Open","JBXPlayDetailMediaFetchButtonText":"Fetch","JBXPlayDetailFormNameFieldText":"Name","JBXPlayDetailFormNotesFieldText":"Notes","JBXPlayShareLinkFieldText":"Link","JBXPlayShareCopyButtonText":"Copy link"},"es":{"OLSKAppFeatureListArray":[["Accesible en cualquier lugar.","Foncione en dispositivos mobiles, tabletas y computadoras."],["Sin Wi-Fi, sin problema.","Foncione offline sin acesso al internet."],["Tus dados en todos tus dispositivos.","Sincronizar al nube automáticamente con remoteStorage o Fission."],["Flujo de trabajo eficiente.","Atajos de teclado para la mayoría de las cosas."],["Mueve los datos libremente.","Importar y exportar datos JSON (beta)"],["Blind-friendly.","Etiquetas de texto en todos los elementos."],["Privado, no creepy.","No hay análisis de comportamiento ni rastreadores inter-sitios."],["Ser dueno de tus datos.","100% tuyo en una aplicación <a href=\"https://0data.app\">0data</a>."]],"OLSKAppFeatureOpenSourceNameText":"Código aberto.","OLSKAppFeatureOpenSourceBlurbFormat":"El código es <a href=\"%@\">público</a> para leer e modificar.","OLSKAppToolbarCloudStatusOnline":"En líneo","OLSKAppToolbarCloudStatusOffline":"Sin conexión","OLSKAppToolbarCloudStatusError":"Error","OLSKAppToolbarAproposButtonText":"Más información","OLSKAppToolbarLanguageButtonText":"Lenguaje","OLSKAppToolbarGuideLinkText":"Guía","OLSKAppToolbarFundButtonText":"Financiar","OLSKAppToolbarLauncherButtonText":"Lanzador","OLSKAppToolbarCloudButtonText":"Almacenamiento","OLSKAproposHeadingText":"Sobre","OLSKAproposFeedbackButtonText":"Enviar feedback","OLSKAproposShareButtonText":"Decirlo a un amig@","OLSKCatalogMasterPlaceholderText":"Pulse + para crear un artículo.","OLSKCatalogStashPlaceholderTextFormat":"Artículo seleccionados: %@","OLSKCloudRenewButtonText":"Renovar","OLSKCloudFormConnectButtonText":"Conectar","OLSKCloudFormRegisterLinkText":"Conseguir almacenamiento","OLSKCloudStatusSyncStartButtonText":"Sincronizar","OLSKCloudStatusSyncStopButtonText":"Parar","OLSKCloudStatusDisconnectButtonText":"Desconectar","OLSKCloudStatusDisconnectConfirmText":"¿Estás segur@?","OLSKEditText":"Editar eso","OLSKFollowTextFormat":"Encuentre-me en %$1@ o %$2@.","OLSKFundGrantErrorConnectionText":"Error de conexión","OLSKFundGrantErrorDecryptionText":"Error de deciframiento","OLSKFundGrantErrorSigningText":"Error de signatura","OLSKFundGateText":"Desbloquear documentos ilimitados por contribuir al proyecto. ¿Te gustaría hacer eso ahora?","OLSKFundWebViewTitleText":"Financiar un proyecto","OLSKFundLauncherItemEnterClueText":"Entrar código de confirmación","OLSKFundLauncherItemEnterCluePromptText":"Entrar código de confirmación","OLSKFundLauncherItemClearClueText":"Despejar autorización","OLSKFundLauncherItemClearClueConfirmText":"¿Est@s segur@?","OLSKFundGrantErrorExpiredText":"Acceso vencido","OLSKInputWrapperClearButtonText":"Despejar el texto","OLSKInstallAlertHeadingText":"Instalar en tu dispositivo","OLSKInstallAlertBlurbHTMLFormat":"Toca <em>Compartir</em> %$1@, y después <em>Adicionar a la Tela de Inicio</em> %$2@","OLSKInstallAlertDismissButtonText":"Descartar","OLSKLanguageSwitcherVersionFormat":"Versión en %@","OLSKLanguageSwitcherVersionName":{"en":"inglés","fr":"francés","es":"español","pt":"portugués"},"OLSKModalViewCloseButtonText":"OK","OLSKNarrowFilterFieldText":"Filtrar","OLSKPlaceholderText":"Ningún artículo seleccionado","OLSKReloadButtonText":"Recargar","OLSKRemoteStorageConnectConfirmText":"Conecta tu almacenamiento para continuar. ¿Te gustaría hacer esto ahora?","OLSKRemoteStorageLauncherItemOpenLoginLinkText":"Abrir enlace de acceso","OLSKRemoteStorageLauncherItemOpenLoginLinkPromptText":"Enlace de acceso","OLSKRemoteStorageLauncherItemCopyLoginLinkText":"Copiar enlace de acceso privado","OLSKRemoteStorageLauncherItemDebugFlushDataText":"Pulgar los datos","OLSKRemoteStorageLauncherItemDebugFlushDataConfirmText":"Estás segur@?","OLSKRootLinkTextHome":"Regresar a la pagina de inicio","OLSKServiceWorkerUpdateAlertLabelText":"Actualización disponible","OLSKServiceWorkerUpdateAlertReloadButtonText":"Recargar","OLSKServiceWorkerLauncherItemReloadText":"Recargar","OLSKServiceWorkerLauncherItemDebugForceUpdateText":"Forzar actualización","OLSKTaxonomyFieldText":"Etiquetas","OLSKTaxonomyHintTemplate":"Pulse <code>Enter</code> para añadir <strong>%@</strong>.","OLSKTransportLauncherItemImportJSONText":"Importar JSON (beta)","OLSKTransportLauncherItemImportJSONErrorNotFilledAlertText":"Entrada no cargada","OLSKTransportLauncherItemImportJSONErrorNotValidAlertText":"Entrada no valida","OLSKTransportLauncherItemExportJSONText":"Exportar JSON (beta)","OLSKWebViewWindowButtonText":"Abrir en una nueva ventana","OLSKWordingConfirmText":"¿Est@as segur@?","OLSKWordingOpenApp":"Abrir app","OLSKWordingFeatures":"Características","OLSKWordingOpenGuide":"Ver la guía","OLSKWordingDeeperHeading":"Profundizar más","OLSKWordingVideo":"Video","OLSKWordingTestimonials":"Recomendaciones","OLSKWordingFeedbackHeading":"Feedback","OLSKWordingFeedbackBlurb":"Desde dentro de la aplicación, toca el botón ℹ︎, y después elegir \"Enviar feedback\".","OLSKWordingTypeToSearch":"Escribir para buscar","OLSKWordingTypeToFilter":"Escribir para filtrar","OLSKWordingCancelText":"Cancelar","OLSKWordingDownloadText":"Descargar","OLSKWordingEditText":"Editar","OLSKWordingDebugObjectText":"Depurar este objeto","ROCOBulletinSubmitButtonText":"Suscribirse a la lista de correo","ROCOBulletinFeedbackText":"Mira tu bandeja de entrada (y quizá también la carpeta de spam) para un enlace de activación.","ROCOGazetteHeadingText":"Sigue mi viaje","ROCOGlossaryHeadingText":"Una nueva clase de aplicaciones","ROCOGlossaryDoorlessLinkText":"Filosofía 'doorless' (sin puerta)","ROCOGlossaryDoorlessBlurbText":"Las aplicaciones como espacios públicos no excluyentes.","ROCOGlossaryZeroDataLinkText":"Aprender más sobre applicaciónes Zero Data","ROCOGlossaryZeroDataBlurbText":"Ser dueno de tus datos, todos ellos.","ROCORootLinkText":"Visitar rosano.ca","SWARLinkText":"Hace parte del Doorless App Ring","JBXGuideTitle":"Guía de Joybox","JBXGuideDescription":"Documentación para el proyecto","JBXPlayStashButtonText":"Apilar","JBXPlayToggleFormButtonText":"Añadir","JBXPlayClearInboxButtonText":"Borrar la bandeja de entrada","JBXPlayFormFieldText":"Pegue sus enlaces aquí.","JBXPlayFormSubmitButtonText":"Enviar","JBXPlayChunkInboxText":"Bandeja de entrada","JBXPlayChunkTodayText":"Hoy","JBXPlayChunkYesterdayText":"Ayer","JBXPlayChunkArchiveText":"Archivo","JBXPlayRevealArchiveButtonText":"Revelar el archivo","JBXPlayShareModalTitleText":"Compartir","JBXPlayTitle":"Poner","JBXVitrineTitle":"Joybox","JBXVitrineDescription":"Un tablón de anuncios para medios audiovisuales.","OLSKLandingBlurbText":"Coleccionar, reproducir y compartir múltiples plataformas en un solo lugar.","JBXVitrineGlossaryFleetingArrivalsBlurbText":"Mi blog de recomendaciones musicales.","JBXVitrineGlossaryWetwareBlurbText":"Cómo utilizo Joybox para mantener la concentración.","JBXPlayDetailToolbarBackButtonText":"Volver","JBXPlayDetailToolbarQueueButtonText":"Añadir a la colección","JBXPlayDetailToolbarArchiveButtonText":"Archivar","JBXPlayDetailToolbarUnarchiveButtonText":"Desarchivar","JBXPlayDetailToolbarDiscardButtonText":"Descartar","JBXPlayDetailMediaURLFieldText":"URL","JBXPlayDetailMediaOpenButtonText":"Abrir","JBXPlayDetailMediaFetchButtonText":"Recuperar","JBXPlayDetailFormNameFieldText":"Nombre","JBXPlayDetailFormNotesFieldText":"Notas","JBXPlayShareLinkFieldText":"Enlace","JBXPlayShareCopyButtonText":"Copiar enlace"},"fr":{"OLSKAppFeatureListArray":[["Accessible partout.","Fonctionne sur les appareils mobiles, les tablettes et les ordinateurs de bureau."],["Pas de Wi-Fi, pas de problème.","Fonctionne hors ligne sans accès à Internet."],["Vos données en tous vos appareils.","Synchronisation automatique sur le cloud avec remoteStorage ou Fission."],["Flux de travail efficace.","Raccourcis clavier pour la plupart des choses."],["Déplacer les données librement.","Importer et exporter des données JSON (béta)."],["Blind-friendly.","Étiquettes de texte sur tous les éléments."],["Privé, pas effrayant.","Pas d'analyse comportementale ni de traceurs intersites."],["Vos données vous appartiennent.","100% à vous dans une application <a href=\"https://0data.app\">0data</a>."]],"OLSKAppFeatureOpenSourceNameText":"Source ouvert.","OLSKAppFeatureOpenSourceBlurbFormat":"Le code is <a href=\"%@\">public</a> pour lire et modifier.","OLSKAppToolbarCloudStatusOnline":"En ligne","OLSKAppToolbarCloudStatusOffline":"Hors connexion","OLSKAppToolbarCloudStatusError":"Erreur","OLSKAppToolbarAproposButtonText":"Plus d'info","OLSKAppToolbarLanguageButtonText":"Langage","OLSKAppToolbarGuideLinkText":"Guide","OLSKAppToolbarFundButtonText":"Financer","OLSKAppToolbarLauncherButtonText":"Lanceur","OLSKAppToolbarCloudButtonText":"Stockage","OLSKAproposHeadingText":"À propos","OLSKAproposFeedbackButtonText":"Envoyer des commentaires","OLSKAproposShareButtonText":"Dire à un ami.e","OLSKCatalogMasterPlaceholderText":"Appuyez sur + pour créer un article.","OLSKCatalogStashPlaceholderTextFormat":"Articles sélectionnés : %@","OLSKCloudRenewButtonText":"Renouveler","OLSKCloudFormConnectButtonText":"Brancher","OLSKCloudFormRegisterLinkText":"Obtenir stockage","OLSKCloudStatusSyncStartButtonText":"Synchroniser","OLSKCloudStatusSyncStopButtonText":"Stop","OLSKCloudStatusDisconnectButtonText":"Débrancher","OLSKCloudStatusDisconnectConfirmText":"Êtes-vous sûr.e ?","OLSKEditText":"Editer ceci","OLSKFollowTextFormat":"Trouvez-moi sur %$1@ ou %$2@.","OLSKFundGrantErrorConnectionText":"Erreur de connexion","OLSKFundGrantErrorDecryptionText":"Erreur de déchiffrement","OLSKFundGrantErrorSigningText":"Erreur de signature","OLSKFundGateText":"Déverrouiller des documents sans limite en contribuant au projet. Souhaitez-vous le faire maintenant ?","OLSKFundWebViewTitleText":"Financer un projet","OLSKFundLauncherItemEnterClueText":"Entrer code de confirmation","OLSKFundLauncherItemEnterCluePromptText":"Entrer code de confirmation","OLSKFundLauncherItemClearClueText":"Enlever autorisation","OLSKFundLauncherItemClearClueConfirmText":"Êtes-vous sûr.e ?","OLSKFundGrantErrorExpiredText":"Accès expiré","OLSKInputWrapperClearButtonText":"Effacer le texte","OLSKInstallAlertHeadingText":"Installer dans votre appareil","OLSKInstallAlertBlurbHTMLFormat":"Touchez <em>Partager</em> %$1@, puis <em>Ajouter à l'Écran d'accueil</em> %$2@","OLSKInstallAlertDismissButtonText":"Écarter","OLSKLanguageSwitcherVersionFormat":"Version en %@","OLSKLanguageSwitcherVersionName":{"en":"anglais","fr":"français","es":"espagnol","pt":"portugais"},"OLSKModalViewCloseButtonText":"OK","OLSKNarrowFilterFieldText":"Filtrer","OLSKPlaceholderText":"Aucun article sélectionné","OLSKReloadButtonText":"Recharger","OLSKRemoteStorageConnectConfirmText":"Veuillez brancher votre stockage afin de continuer. Souhaitez-vous faire ça maintenant ?","OLSKRemoteStorageLauncherItemOpenLoginLinkText":"Ouvrir lien d'accès","OLSKRemoteStorageLauncherItemOpenLoginLinkPromptText":"Lien d'accès","OLSKRemoteStorageLauncherItemCopyLoginLinkText":"Copier lien d'accès privé","OLSKRemoteStorageLauncherItemDebugFlushDataText":"Flusher les données","OLSKRemoteStorageLauncherItemDebugFlushDataConfirmText":"Êtes-vous sûr.e ?","OLSKRootLinkTextHome":"Retour à l'accueil","OLSKServiceWorkerUpdateAlertLabelText":"Mise à jour disponible","OLSKServiceWorkerUpdateAlertReloadButtonText":"Recharger","OLSKServiceWorkerLauncherItemReloadText":"Recharger","OLSKServiceWorkerLauncherItemDebugForceUpdateText":"Forcer mis à jour","OLSKTaxonomyFieldText":"Étiquettes","OLSKTaxonomyHintTemplate":"Appuyez sur <code>Enter</code> pour ajouter <strong>%@</strong>.","OLSKTransportLauncherItemImportJSONText":"Importer JSON (béta)","OLSKTransportLauncherItemImportJSONErrorNotFilledAlertText":"Entrée non remplie","OLSKTransportLauncherItemImportJSONErrorNotValidAlertText":"Entrée non valide","OLSKTransportLauncherItemExportJSONText":"Exporter JSON (béta)","OLSKWebViewWindowButtonText":"Ouvrir dans une nouvelle fenêtre","OLSKWordingConfirmText":"Êtes-vous sûr.e ?","OLSKWordingOpenApp":"Ouvrir l'app","OLSKWordingFeatures":"Fonctionnalités","OLSKWordingOpenGuide":"Voir le guide","OLSKWordingDeeperHeading":"Aller plus profond","OLSKWordingVideo":"Vidéo","OLSKWordingTestimonials":"Des témoignages","OLSKWordingFeedbackHeading":"Feedback","OLSKWordingFeedbackBlurb":"Dans l'application, touchez le bouton ℹ︎, puis sélectionnez « Envoyer des commentaires ».","OLSKWordingTypeToSearch":"Taper pour chercher","OLSKWordingTypeToFilter":"Taper pour filtrer","OLSKWordingCancelText":"Annuler","OLSKWordingDownloadText":"Télécharger","OLSKWordingEditText":"Modifier","OLSKWordingDebugObjectText":"Déboguer cet objet","ROCOBulletinSubmitButtonText":"S'inscrire à la liste de diffusion","ROCOBulletinFeedbackText":"Veuillez regarder votre boîte de réception (et aussi peut-être le dossier de pourriel) pour un lien d'activation.","ROCOGazetteHeadingText":"Suivez mon parcours","ROCOGlossaryHeadingText":"Une nouvelle génération d'applications","ROCOGlossaryDoorlessLinkText":"La philosophie 'doorless' (sans porte)","ROCOGlossaryDoorlessBlurbText":"Des applications comme espaces publics non exclusifs.","ROCOGlossaryZeroDataLinkText":"Apprendre plus à propos des applis Zero Data","ROCOGlossaryZeroDataBlurbText":"Être propriétaire de vos données, tout.","ROCORootLinkText":"Visiter rosano.ca","SWARLinkText":"Ça fait partie du Doorless App Ring","JBXGuideTitle":"Guide Joybox","JBXGuideDescription":"Documentation du projet","JBXPlayStashButtonText":"Empiler","JBXPlayToggleFormButtonText":"Ajouter","JBXPlayClearInboxButtonText":"Effacer la boîte de réception","JBXPlayFormFieldText":"Collez vos liens ici.","JBXPlayFormSubmitButtonText":"Soumettre","JBXPlayChunkInboxText":"Boîte de réception","JBXPlayChunkTodayText":"Aujourd'hui","JBXPlayChunkYesterdayText":"Hier","JBXPlayChunkArchiveText":"Les archives","JBXPlayRevealArchiveButtonText":"Dévoiler les archives","JBXPlayShareModalTitleText":"Partager","JBXPlayTitle":"Play","JBXVitrineTitle":"Joybox","JBXVitrineDescription":"Un panneau d'affichage pour les médias audiovisuels.","OLSKLandingBlurbText":"Rassembler et partager plusieurs plateformes en un seul endroit.","JBXVitrineGlossaryFleetingArrivalsBlurbText":"Mon blog de recommandations musicales.","JBXVitrineGlossaryWetwareBlurbText":"Comment j'utilise Joybox pour rester concentré.","JBXPlayDetailToolbarBackButtonText":"Retour","JBXPlayDetailToolbarQueueButtonText":"Ajouter à la collection","JBXPlayDetailToolbarArchiveButtonText":"Archiver","JBXPlayDetailToolbarUnarchiveButtonText":"Désarchiver","JBXPlayDetailToolbarDiscardButtonText":"Jeter","JBXPlayDetailMediaURLFieldText":"URL","JBXPlayDetailMediaOpenButtonText":"Ouvrir","JBXPlayDetailMediaFetchButtonText":"Chercher","JBXPlayDetailFormNameFieldText":"Nom","JBXPlayDetailFormNotesFieldText":"Notes","JBXPlayShareLinkFieldText":"Lien","JBXPlayShareCopyButtonText":"Copier le lien"},"pt":{"OLSKAppFeatureListArray":[["Acessível em qualquer lugar.","Funciona em dispositivos móveis, tablet e desktop'."],["Sem Wi-Fi, sem problemas.","Funciona offline sem acesso à Internet."],["Seus dados em todos os seus dispositivos.","Sincronização automática na nuven com o remoteStorage ou Fission."],["Fluxo de trabalho eficiente.","Atalhos do teclado para a maioria das coisas."],["Mova os dados livremente.","Importar e exportar dados JSON (beta)."],["Amigo dos cegos.","Etiquetas de texto em todos os elementos."],["Privado, não assustador.","Nenhuma análise de comportamento ou rastreadores inter-sitios."],["Ser dono dos seus dados.","100% seus em um aplicativo <a href=\"https://0data.app\">0data</a>."]],"OLSKAppFeatureOpenSourceNameText":"Código aberto.","OLSKAppFeatureOpenSourceBlurbFormat":"O código é <a href=\"%@\">público</a> para ler e modificar.","OLSKAppToolbarCloudStatusOnline":"Online","OLSKAppToolbarCloudStatusOffline":"Offline","OLSKAppToolbarCloudStatusError":"Erro","OLSKAppToolbarAproposButtonText":"Mais informação","OLSKAppToolbarLanguageButtonText":"Idioma","OLSKAppToolbarGuideLinkText":"Guia","OLSKAppToolbarFundButtonText":"Financiar","OLSKAppToolbarLauncherButtonText":"Lançador","OLSKAppToolbarCloudButtonText":"Nuvem","OLSKAproposHeadingText":"Sobre","OLSKAproposFeedbackButtonText":"Enviar feedback","OLSKAproposShareButtonText":"Dizer a um amigo","OLSKCatalogMasterPlaceholderText":"Toque + para criar um artículo.","OLSKCatalogStashPlaceholderTextFormat":"Artículos selecionados: %@","OLSKCloudRenewButtonText":"Renovar","OLSKCloudFormConnectButtonText":"Conectar","OLSKCloudFormRegisterLinkText":"Obter uma nuvem","OLSKCloudStatusSyncStartButtonText":"Sincronizar","OLSKCloudStatusSyncStopButtonText":"Parar","OLSKCloudStatusDisconnectButtonText":"Desconectar","OLSKCloudStatusDisconnectConfirmText":"Você tem certeza?","OLSKEditText":"Editar isso","OLSKFollowTextFormat":"Me encontre no %$1@ ou no %$2@.","OLSKFundGrantErrorConnectionText":"Erro de conexão","OLSKFundGrantErrorDecryptionText":"Erro de desencriptação","OLSKFundGrantErrorSigningText":"Erro de assinatura","OLSKFundGateText":"Desbloquear documentos ilimitados fazendo uma contribuição para o projeto. Você gostaria de fazer isso agora?","OLSKFundWebViewTitleText":"Financiar um projeto","OLSKFundLauncherItemEnterClueText":"Insira o código de confirmação","OLSKFundLauncherItemEnterCluePromptText":"Digite o código de confirmação","OLSKFundLauncherItemClearClueText":"Zerar autorização","OLSKFundLauncherItemClearClueConfirmText":"Você tem certeza?","OLSKFundGrantErrorExpiredText":"Acesso expirado","OLSKInputWrapperClearButtonText":"Limpar texto","OLSKInstallAlertHeadingText":"Instalar em seu dispositivo","OLSKInstallAlertBlurbHTMLFormat":"Tap <em>Compartir<em> %$1@, depois <em>Adicionar à tela inicial<em> %$2@","OLSKInstallAlertDismissButtonText":"Fechar","OLSKLanguageSwitcherVersionFormat":"Versão no %@","OLSKLanguageSwitcherVersionName":{"en":"inglês","fr":"francês","es":"espanhol","pt":"portuguêse"},"OLSKModalViewCloseButtonText":"OK","OLSKNarrowFilterFieldText":"Filtrar","OLSKPlaceholderText":"Nenhum artículo selecionado","OLSKReloadButtonText":"Reload","OLSKRemoteStorageConnectConfirmText":"Conecte sua nuvem para continuar. Você gostaria de fazer isso agora?","OLSKRemoteStorageLauncherItemOpenLoginLinkText":"Abrir link de acesso","OLSKRemoteStorageLauncherItemOpenLoginLinkPromptText":"Link de acesso","OLSKRemoteStorageLauncherItemCopyLoginLinkText":"Copiar link de acesso privado","OLSKRemoteStorageLauncherItemDebugFlushDataText":"Fazer sair os dados","OLSKRemoteStorageLauncherItemDebugFlushDataConfirmText":"Você tem certeza?","OLSKServiceWorkerUpdateAlertLabelText":"Atualização disponível","OLSKServiceWorkerUpdateAlertReloadButtonText":"Recarregar","OLSKServiceWorkerLauncherItemReloadText":"Recarregar","OLSKServiceWorkerLauncherItemDebugForceUpdateText":"Forçar atualização","OLSKTaxonomyFieldText":"Etiquetas","OLSKTaxonomyHintTemplate":"Pressione <code>Enter</code> para adicionar <strong>%@</strong>.","OLSKTransportLauncherItemImportJSONText":"Importar JSON (beta)","OLSKTransportLauncherItemImportJSONErrorNotFilledAlertText":"Entrada não preenchida","OLSKTransportLauncherItemImportJSONErrorNotValidAlertText":"Entrada não válida","OLSKTransportLauncherItemExportJSONText":"Exportar JSON (beta)","OLSKWebViewWindowButtonText":"Abrir em nova janela","OLSKWordingConfirmText":"Você tem certeza?","OLSKWordingOpenApp":"Abrir app","OLSKWordingFeatures":"Características","OLSKWordingOpenGuide":"Ler o guia","OLSKWordingDeeperHeading":"Ir mais fundo","OLSKWordingVideo":"Vídeo","OLSKWordingTestimonials":"Testemunhos","OLSKWordingFeedbackHeading":"Feedback","OLSKWordingFeedbackBlurb":"De dentro do aplicativo, toque no botão ℹ︎, depois selecione \"Enviar feedback\".","OLSKWordingTypeToSearch":"Digitar para pesquisar","OLSKWordingTypeToFilter":"Digitar para filtrar","OLSKWordingCancelText":"Cancelar","OLSKWordingDownloadText":"Baixar","OLSKWordingEditText":"Editar","OLSKWordingDebugObjectText":"Depurar este objeto","ROCOBulletinSubmitButtonText":"Assinar à lista de distribuição","ROCOBulletinFeedbackText":"Verifique na sua caixa de entrada (e talvez a pasta de spam) para um link de ativação.","ROCOGazetteHeadingText":"Acompanhe minha jornada","ROCOGlossaryHeadingText":"Uma nova geração de aplicações","ROCOGlossaryDoorlessLinkText":"Filosofia 'doorless' (sem porta)","ROCOGlossaryDoorlessBlurbText":"Aplicativo como espaços públicos não-exclusivos.","ROCOGlossaryZeroDataLinkText":"Aprender mais sobre applicativos Zero Data","ROCOGlossaryZeroDataBlurbText":"Ser dono dos seus dados, todos eles.","ROCORootLinkText":"Visitar rosano.ca","SWARLinkText":"Parte do Pequeno Anel de Aplicação Web","JBXGuideTitle":"Guia Joybox","JBXGuideDescription":"Documentação do projeto","JBXPlayStashButtonText":"Empilhar","JBXPlayToggleFormButtonText":"Adicionar","JBXPlayClearInboxButtonText":"Limpar caixa de entrada","JBXPlayFormFieldText":"Cole seus links aqui.","JBXPlayFormSubmitButtonText":"Enviar","JBXPlayChunkInboxText":"Caixa de entrada","JBXPlayChunkTodayText":"Hoje","JBXPlayChunkYesterdayText":"Ontem","JBXPlayChunkArchiveText":"Arquivo","JBXPlayRevealArchiveButtonText":"Revelar o arquivo","JBXPlayShareModalTitleText":"Compartilhar","JBXPlayTitle":"Tocar","JBXVitrineTitle":"Joybox","JBXVitrineDescription":"Um quadro de recados para mídias audiovisuais.","OLSKLandingBlurbText":"Coletar, tocar e compartilhar múltiplas plataformas em um só lugar.","JBXVitrineGlossaryFleetingArrivalsBlurbText":"Meu blog de recomendações musicais.","JBXVitrineGlossaryWetwareBlurbText":"Como eu uso Joybox para me manter concentrado.","JBXPlayDetailToolbarBackButtonText":"Voltar","JBXPlayDetailToolbarQueueButtonText":"Adicionar à coleção","JBXPlayDetailToolbarArchiveButtonText":"Arquivar","JBXPlayDetailToolbarUnarchiveButtonText":"Desarquivar","JBXPlayDetailToolbarDiscardButtonText":"Descartar","JBXPlayDetailMediaURLFieldText":"URL","JBXPlayDetailMediaOpenButtonText":"Abrir","JBXPlayDetailMediaFetchButtonText":"Buscar","JBXPlayDetailFormNameFieldText":"Nome","JBXPlayDetailFormNotesFieldText":"Notas","JBXPlayShareLinkFieldText":"Link","JBXPlayShareCopyButtonText":"Copiar link"}}[window.OLSKPublicConstants('OLSKSharedPageCurrentLanguage')]);
    	};
    }
    });

    unwrapExports(main);
    var main_1 = main.OLSKLocalized;

    var main$1 = createCommonjsModule(function (module, exports) {
    const _require = commonjsRequire;

    const mod = {

    	OLSKSpecUIArguments (inputData) {
    		if (!Array.isArray(inputData)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return inputData.map(function (e) {
    			if (e.match(/^match=/)) {
    				return e.replace(/^match=/, '-os-match=');
    			}

    			if (e.match(/^skip=/)) {
    				return e.replace(/^skip=/, '-os-skip=');
    			}

    			return e;
    		});
    	},

    	OLSKSpecUITestPaths (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!_require().OLSKDiskIsRealFolderPath(inputData)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return _require().sync('**/ui-test-*.js', {
    			cwd: inputData,
    			realpath: true,
    		}).filter(function (e) {
    			return !e.match(_require().OLSKDiskStandardIgnorePattern());
    		});
    	},

    	OLSKSpecUITestPathsFilterFunction (inputData) {
    		if (!Array.isArray(inputData)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const args = inputData.slice();

    		let include = args.filter(function (e) {
    			return e.match(/^-?-?os-match=(.+)/i)
    		}).shift();

    		if (include) {
    			args.splice(args.indexOf(include), 1);

    			include = include.match(/^-?-?os-match=(.+)/i)[1];

    			const regex = include.match(/^\/(.+)\/(.+)?$/);

    			if (regex) {
    				include = new RegExp(regex[1], regex[2]);
    			}
    		}
    		
    		let exclude = args.filter(function (e) {
    			return e.match(/^-?-?os-skip=(.+)/i)
    		}).shift();

    		if (exclude) {
    			args.splice(args.indexOf(exclude), 1);

    			exclude = exclude.match(/^-?-?os-skip=(.+)/i)[1];

    			const regex = exclude.match(/^\/(.+)\/(.+)?$/);

    			if (regex) {
    				exclude = new RegExp(regex[1], regex[2]);
    			}
    		}

    		return function (e) {
    			if (include && e.match(include)) {
    				return true;
    			}
    			
    			if (exclude && e.match(exclude)) {
    				return false;
    			}

    			if (include && !e.match(include)) {
    				return false;
    			}
    			
    			if (exclude && !e.match(exclude)) {
    				return true;
    			}
    			
    			return true;
    		};
    	},

    	OLSKSpecUISourcePaths (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!_require().OLSKDiskIsRealFolderPath(inputData)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return _require().sync('**/+(ui-behaviour.js|*.ejs|*.md|*.html|*.hbs)', {
    			cwd: inputData,
    			realpath: true,
    		}).filter(function (e) {
    			if (e.match('__compiled')) {
    				return true;
    			}
    			
    			return !e.match(_require().OLSKDiskStandardIgnorePattern());
    		});
    	},

    	OLSKSpecMochaPaths (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof inputData.ParamPackageDirectory !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof inputData.ParamWorkingDirectory !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			_require().join(inputData.ParamPackageDirectory, './node_modules/.bin/mocha'),
    			_require().join(inputData.ParamPackageDirectory, '../.bin/mocha'),
    			_require().join(inputData.ParamWorkingDirectory, './node_modules/.bin/mocha'),
    			];
    	},

    	_OLSKSpecMochaReplaceES6Import (inputData) {
    		const exportable = [];
    		
    		inputData = inputData
    			.replace(/^import \* as (\w+) from ['"]([^'"]+)['"];?/gm, 'var $1 = require("$2");')
    			// .replace(/^import (\w+) from ['"]([^'"]+)['"];?/gm, 'var {default: $1} = require("$2");')
    			.replace(/^import (\w+) from ['"]([^'"]+)['"];?/gm, 'var _$1 = require("$2"); const $1 = _$1.default || _$1')
    			.replace(/^import {([^}]+)} from ['"](.+)['"];?/gm, 'var {$1} = require("$2");')
    			.replace(/^export default /gm, 'exports.default = ')
    			.replace(/^export (const|let|var|class|function) (\w+)/gm, (match, type, name) => {
    				exportable.push(name);
    				return `${type} ${name}`;
    			})
    			.replace(/^export \{([^}]+)\}(?: from ['"]([^'"]+)['"];?)?/gm, (match, names, source) => {
    				names.split(',').filter(Boolean).forEach(name => {
    					exportable.push(name);
    				});

    				return source ? `const { ${names} } = require("${source}");` : '';
    			})
    			.replace(/^export function (\w+)/gm, 'exports.$1 = function $1');

    		exportable.forEach(name => {
    			inputData += `\nexports.${name} = ${name};`;
    		});

    		return inputData;
    	},

    	OLSKSpecMochaStandardConfiguration (inputData) {
    		if (!Array.isArray(inputData)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [].concat.apply([], [
    			'--file', _require().join(__dirname, 'mocha-start.js'),
    			_require().existsSync(_require().join(process.cwd(), 'mocha-start.js')) ? ['--file', _require().join(process.cwd(), 'mocha-start.js')] : [],
    			inputData.includes('--reporter') ? [] : ['--reporter', 'min'],
    			inputData.length
    			? inputData
    			: [],
    		]);
    	},
    	
    };

    Object.assign(exports, mod);

    {
    	exports.OLSK_SPEC_UI = function () {
    		if (typeof navigator === 'undefined') {
    			return false;
    		}

    		if (typeof window !== 'undefined' && window.location.hostname === 'loc.tests') {
    			return true;
    		}

    		return navigator.appName === 'Zombie';
    	};
    }
    });
    var main_1$1 = main$1.OLSK_SPEC_UI;

    function createError(message) {
        var err = new Error(message);
        err.source = "ulid";
        return err;
    }
    // These values should NEVER change. If
    // they do, we're no longer making ulids!
    var ENCODING = "0123456789ABCDEFGHJKMNPQRSTVWXYZ"; // Crockford's Base32
    var ENCODING_LEN = ENCODING.length;
    var TIME_MAX = Math.pow(2, 48) - 1;
    var TIME_LEN = 10;
    var RANDOM_LEN = 16;
    function randomChar(prng) {
        var rand = Math.floor(prng() * ENCODING_LEN);
        if (rand === ENCODING_LEN) {
            rand = ENCODING_LEN - 1;
        }
        return ENCODING.charAt(rand);
    }
    function encodeTime(now, len) {
        if (isNaN(now)) {
            throw new Error(now + " must be a number");
        }
        if (now > TIME_MAX) {
            throw createError("cannot encode time greater than " + TIME_MAX);
        }
        if (now < 0) {
            throw createError("time must be positive");
        }
        if (Number.isInteger(now) === false) {
            throw createError("time must be an integer");
        }
        var mod = void 0;
        var str = "";
        for (; len > 0; len--) {
            mod = now % ENCODING_LEN;
            str = ENCODING.charAt(mod) + str;
            now = (now - mod) / ENCODING_LEN;
        }
        return str;
    }
    function encodeRandom(len, prng) {
        var str = "";
        for (; len > 0; len--) {
            str = randomChar(prng) + str;
        }
        return str;
    }
    function detectPrng() {
        var allowInsecure = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (typeof require === 'undefined' && typeof navigator !== 'undefined' && navigator.appName === 'Zombie');
        var root = arguments[1];

        if (!root) {
            root = typeof window !== "undefined" ? window : null;
        }
        var browserCrypto = root && (root.crypto || root.msCrypto);
        if (browserCrypto) {
            return function () {
                var buffer = new Uint8Array(1);
                browserCrypto.getRandomValues(buffer);
                return buffer[0] / 0xff;
            };
        } else {
            try {
                var nodeCrypto = require("crypto");
                return function () {
                    return nodeCrypto.randomBytes(1).readUInt8() / 0xff;
                };
            } catch (e) {}
        }
        if (allowInsecure) {
            return function () {
                return Math.random();
            };
        }
        throw createError("secure crypto unusable, insecure Math.random not allowed");
    }
    function factory(currPrng) {
        if (!currPrng) {
            currPrng = detectPrng();
        }
        return function ulid(seedTime) {
            if (isNaN(seedTime)) {
                seedTime = Date.now();
            }
            return encodeTime(seedTime, TIME_LEN) + encodeRandom(RANDOM_LEN, currPrng);
        };
    }
    var ulid = factory();

    var main$2 = createCommonjsModule(function (module, exports) {

    const mod = {

    	OLSKRemoteStorageChangeDelegateConflictSelectRecent (inputData) {
    		if (inputData.origin !== 'conflict') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (Object.entries(inputData.oldValue).filter(function (e) {
    			if (!e[0].match('ModificationDate')) {
    				return false;
    			}

    			return e[1] > inputData.newValue[e[0]];
    		}).length) {
    			return inputData.oldValue;
    		}

    		return inputData.newValue;
    	},

    	OLSKRemoteStorageIsCollection (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof inputData.OLSKRemoteStorageCollectionName !== 'string') {
    			return false;
    		}

    		if (!inputData.OLSKRemoteStorageCollectionName.trim()) {
    			return false;
    		}

    		if (typeof inputData.OLSKRemoteStorageCollectionExports !== 'object' || inputData.OLSKRemoteStorageCollectionExports === null) {
    			return false;
    		}

    		return true;
    	},

    	OLSKRemoteStorageDataModuleGenerator (kModuleName) {
    		if (typeof kModuleName !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!kModuleName.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const _this = this;

    		return function (inputData) {
    			if (!Array.isArray(inputData)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return {
    				name: kModuleName,
    				builder (privateClient, publicClient) {
    					return {
    						exports: inputData.reduce(function (coll, item) {
    							const collection = item(privateClient, publicClient);

    							if (!mod.OLSKRemoteStorageIsCollection(collection)) {
    								throw new Error('OLSKErrorInputNotValid');
    							}

    							coll[collection.OLSKRemoteStorageCollectionName] = collection.OLSKRemoteStorageCollectionExports;

    							return coll;
    						}, Object.assign({
    							OLSKRemoteStorageEnableCrypto () {
    								return _this._OLSKRemoteStorageEnableCrypto(...[privateClient].concat(...arguments));
    							},
    						})),
    					};
    				},
    			};
    		};
    	},

    	_OLSKRemoteStorageIsPath (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return !!inputData.trim();
    	},

    	OLSKRemoteStorageSafeCopy (inputData) {
    		return Object.keys(inputData).reduce(function (coll, item) {
    			if (item[0] !== '$') {
    				coll[item] = inputData[item];
    			}

    			return coll
    		}, {});
    	},

    	OLSKRemoteStoragePostJSONParse (inputData) {
    		if (!inputData) {
    			return inputData;
    		}

    		if (Array.isArray(inputData)) {
    			return inputData.map(mod.OLSKRemoteStoragePostJSONParse);
    		}

    		for (const key in inputData) {
    			if (key.slice(-4) === 'Date') {
    				inputData[key] = new Date(inputData[key]);
    			} else if (Array.isArray(inputData[key])) {
    				inputData[key].map(mod.OLSKRemoteStoragePostJSONParse);
    			} else if (typeof inputData[key] === 'object') {
    				mod.OLSKRemoteStoragePostJSONParse(inputData[key]);
    			}
    		}

    		return inputData;
    	},

    	OLSKRemoteStorageQueryFunction (param1, param2, param3, param4) {
    		if (typeof param1 !== 'function' || !param1.prototype) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'object' || param2 === null || !param2.name) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param3 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param4 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return function (inputData) {
    			if (typeof inputData !== 'function') {
    				throw new Error('OLSKErrorInputNotValid');
    			}
    			const storageClient = new (param1)({
    				cache: false,
    				modules: [param2],
    			});

    			storageClient.access.claim(param2.name, 'rw');

    			storageClient.stopSync();

    			return new Promise(function (res, rej) {
    				let didReject, outputData;

    				storageClient.on('error', function (err) {
    					if (didReject) {
    						return;
    					}

    					didReject = true;
    					return rej(err);
    				});

    				storageClient.on('connected', async function () {
    					try {
    						outputData = await inputData(storageClient);
    					} catch (e) {
    						didReject = true;
    						return rej(e);
    					}

    					res(outputData);
    					
    					return storageClient.disconnect();
    				});

    				storageClient.connect(param3, param4);
    			});
    		};
    	},

    	_OLSKRemoteStorageEnableCrypto (privateClient, encrypt, decrypt) {
    		if (!privateClient.storeFile) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof encrypt !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof decrypt !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Object.assign(privateClient, {
    			_OLSKBackupStoreFile: privateClient.storeFile,
    			_OLSKBackupGetFile: privateClient.getFile,
    			_OLSKBackupStoreObject: privateClient.storeObject,
    			_OLSKBackupGetObject: privateClient.getObject,
    			_OLSKBackupGetAll: privateClient.getAll,

    			storeFile (mimetype, path, body) {
    				return privateClient._OLSKBackupStoreFile('multipart/encrypted', path, encrypt(JSON.stringify({
    					type: mimetype,
    					data: body,
    				})));
    			},

    			async getFile () {
    				const item = await privateClient._OLSKBackupGetFile(...arguments);

    				const decrypted = item.contentType !== 'multipart/encrypted' ? {} : JSON.parse(decrypt(item.data));

    				return Object.assign(item, {
    					contentType: decrypted.type,
    					data: decrypted.data,
    				})
    			},

    			storeObject (type, path, data) {
    				return privateClient._OLSKBackupStoreFile('multipart/encrypted', path, encrypt(JSON.stringify({
    					type,
    					data: JSON.stringify(data),
    				})));
    			},

    			async getObject () {
    				const item = await privateClient._OLSKBackupGetFile(...arguments);

    				const decrypted = item.contentType !== 'multipart/encrypted' ? {} : JSON.parse(decrypt(item.data));

    				return !decrypted.data ? null : JSON.parse(decrypted.data);
    			},

    			async getAll () {
    				const item = await privateClient._OLSKBackupGetAll(...arguments);

    				return Object.entries(item).reduce(function (coll, [key, value]) {
    					if (value === true) {
    						return coll;
    					}

    					return Object.assign(coll, {
    						[key]: value,
    					});
    				}, {})

    				const decrypted = item.contentType !== 'multipart/encrypted' ? {} : JSON.parse(decrypt(item.data));

    				return decrypted.data;
    			},

    		});
    	},

    	OLSKRemoteStorageLauncherFakeItemProxy () {
    		return {
    			LCHRecipeName: 'OLSKRemoteStorageLauncherFakeItemProxy',
    			LCHRecipeCallback () {},
    		};
    	},

    	OLSKRemoteStorageLauncherItemFakeFlipConnected (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'OLSKRemoteStorageLauncherItemFakeFlipConnected',
    			LCHRecipeCallback () {
    				if (inputData.__ValueOLSKRemoteStorage) {
    					inputData._ValueOLSKRemoteStorage = inputData.__ValueOLSKRemoteStorage;
    					
    					delete inputData.__ValueOLSKRemoteStorage;

    					return inputData.OLSKRemoteStorageLauncherItemFakeFlipConnectedDidFinish();
    				}
    				inputData.__ValueOLSKRemoteStorage = inputData._ValueOLSKRemoteStorage;

    				inputData._ValueOLSKRemoteStorage = (inputData.__ValueOLSKRemoteStorage.access.scopes || []).reduce(function (coll, item) {
    					return Object.assign(coll, {
    						[item.name]: inputData.__ValueOLSKRemoteStorage[item.name],
    					});
    				}, Object.assign({}, inputData.__ValueOLSKRemoteStorage));
    				inputData._ValueOLSKRemoteStorage.connected = true;
    				inputData._ValueOLSKRemoteStorage.remote = Object.assign(inputData._ValueOLSKRemoteStorage.remote, {
    					userAddress: 'OLSK_REMOTE_STORAGE_FAKE_REMOTE_ADDRESS',
    					token: 'OLSK_REMOTE_STORAGE_FAKE_REMOTE_TOKEN',
    				});

    				inputData.OLSKRemoteStorageLauncherItemFakeFlipConnectedDidFinish();

    				if (typeof window !== 'undefined') {
    					window.FakeOLSKConnected = true;
    				}
    			},
    		};
    	},

    	OLSKRemoteStorageLauncherItemOpenLoginLink (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!params.ParamStorage.remote) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKRemoteStorageLauncherItemOpenLoginLink',
    			LCHRecipeName: params.OLSKLocalized('OLSKRemoteStorageLauncherItemOpenLoginLinkText'),
    			LCHRecipeCallback () {
    				const item = (debug.DebugWindow || window).prompt(params.OLSKLocalized('OLSKRemoteStorageLauncherItemOpenLoginLinkPromptText'));

    				if (!item) {
    					return;
    				}

    				(debug.DebugWindow || window).location.href = item;
    				(debug.DebugWindow || window).location.reload();
    			},
    			LCHRecipeIsExcluded () {
    				return !!params.ParamStorage.connected;
    			},
    		};
    	},

    	OLSKRemoteStorageLauncherItemCopyLoginLink (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!params.ParamStorage.remote) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKRemoteStorageLauncherItemCopyLoginLink',
    			LCHRecipeName: params.OLSKLocalized('OLSKRemoteStorageLauncherItemCopyLoginLinkText'),
    			LCHRecipeCallback () {
    				return this.api.LCHCopyToClipboard(`${ (debug.DebugWindow || window).location.href }#remotestorage=${ params.ParamStorage.remote.userAddress }&access_token=${ params.ParamStorage.remote.token }`.replace(/#+/g, '#'));
    			},
    			LCHRecipeIsExcluded () {
    				return !params.ParamStorage.connected;
    			},
    		};
    	},

    	OLSKRemoteStorageLauncherItemDebugFlushData (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!params.ParamStorage.remote) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKRemoteStorageLauncherItemDebugFlushData',
    			LCHRecipeName: params.OLSKLocalized('OLSKRemoteStorageLauncherItemDebugFlushDataText'),
    			async LCHRecipeCallback () {
    				if (!(debug.DebugWindow || window).confirm(params.OLSKLocalized('OLSKRemoteStorageLauncherItemDebugFlushDataConfirmText'))) {
    					return;
    				}

    				await Promise.all(Object.getOwnPropertyNames(params.ParamStorage).filter(function (e) {
    					return params.ParamStorage[e].__HOTFIX;
    				}).map(function (e) {
    					return params.ParamStorage[e].__HOTFIX.__OLSKRemoteStorageHotfixFlushData();
    				}));

    				return new Promise(function (res, rej) {
    					setTimeout(function() {
    						res((debug.DebugWindow || window).location.reload());
    					}, 1000);
    				});
    			},
    			LCHRecipeIsExcluded () {
    				return !params.ParamStorage.connected;
    			},
    		};
    	},

    	OLSKRemoteStorageRecipes (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod !== 'object' || params.ParamMod === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamSpecUI !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			mod.OLSKRemoteStorageLauncherFakeItemProxy(),
    			mod.OLSKRemoteStorageLauncherItemFakeFlipConnected(params.ParamMod),
    			mod.OLSKRemoteStorageLauncherItemOpenLoginLink(params),
    			mod.OLSKRemoteStorageLauncherItemCopyLoginLink(params),
    			mod.OLSKRemoteStorageLauncherItemDebugFlushData(params),
    		].filter(function (e) {
    			if (params.ParamSpecUI) {
    				return true;
    			}

    			return !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);
    		});
    	},

    };

    Object.assign(exports, mod);
    });

    var main$3 = createCommonjsModule(function (module, exports) {
    const mod = {

    	_OLSKWashGlobalKeys () {
    		return [
    			'fbclid',
    			'gclid',
    			'igshid',
    		];
    	},

    	_OLSKWashDomainKeys () {
    		return {
    			'spotify.com': 'si',
    		};
    	},

    	OLSKWash (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const url = new URL(inputData);

    		(function (entries) {
    			if (!entries.length) {
    				return;
    			}

    			const query = entries.filter(function ([key, value]) {
    				return !mod._OLSKWashGlobalKeys().includes(key) && !Object.entries(mod._OLSKWashDomainKeys()).filter(function ([domain, param]) {
    					return url.hostname.includes(domain) && (param === key);
    				}).length;
    			}).map(function (e) {
    				return e.join('=');
    			}).join('&');

    			url.search = query ? '?' + query : '';
    		})(Array.from((new URLSearchParams(url.search.replace(/\?/, ''))).entries()));

    		return url.toString();
    	},

    };

    Object.assign(exports, mod);
    });

    const uniqueID = factory();

    const mod = {

    	JBXDocumentErrors (inputData, options = {}) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		const errors = {};

    		if (typeof inputData.JBXDocumentID !== 'string') {
    			errors.JBXDocumentID = [
    				'JBXErrorNotString',
    			];
    		} else if (!inputData.JBXDocumentID.trim()) {
    			errors.JBXDocumentID = [
    				'JBXErrorNotFilled',
    			];
    		}

    		if (!(inputData.JBXDocumentCreationDate instanceof Date) || Number.isNaN(inputData.JBXDocumentCreationDate.getTime())) {
    			errors.JBXDocumentCreationDate = [
    				'JBXErrorNotDate',
    			];
    		}

    		if (!(inputData.JBXDocumentModificationDate instanceof Date) || Number.isNaN(inputData.JBXDocumentModificationDate.getTime())) {
    			errors.JBXDocumentModificationDate = [
    				'JBXErrorNotDate',
    			];
    		}

    		if (typeof inputData.JBXDocumentNotes !== 'string') {
    			errors.JBXDocumentNotes = [
    				'JBXErrorNotString',
    			];
    		}

    		if (typeof inputData.JBXDocumentURL !== 'undefined') {
    			if (typeof inputData.JBXDocumentURL !== 'string') {
    				errors.JBXDocumentURL = [
    					'JBXErrorNotString',
    				];
    			}
    		}

    		if (typeof inputData.JBXDocumentName !== 'undefined') {
    			if (typeof inputData.JBXDocumentName !== 'string') {
    				errors.JBXDocumentName = [
    					'JBXErrorNotString',
    				];
    			}
    		}

    		if (typeof inputData.JBXDocumentEmbedURL !== 'undefined') {
    			if (typeof inputData.JBXDocumentEmbedURL !== 'string') {
    				errors.JBXDocumentEmbedURL = [
    					'JBXErrorNotString',
    				];
    			}
    		}

    		if (typeof inputData.JBXDocumentImageURL !== 'undefined') {
    			if (typeof inputData.JBXDocumentImageURL !== 'string') {
    				errors.JBXDocumentImageURL = [
    					'JBXErrorNotString',
    				];
    			}
    		}

    		if (typeof inputData.JBXDocumentDidFetch !== 'undefined') {
    			if (typeof inputData.JBXDocumentDidFetch !== 'boolean') {
    				errors.JBXDocumentDidFetch = [
    					'JBXErrorNotBoolean',
    				];
    			}
    		}

    		if (typeof inputData.JBXDocumentArchiveDate !== 'undefined') {
    			if (!(inputData.JBXDocumentArchiveDate instanceof Date) || Number.isNaN(inputData.JBXDocumentArchiveDate.getTime())) {
    				errors.JBXDocumentArchiveDate = [
    					'JBXErrorNotDate',
    				];
    			}
    		}

    		if (inputData.JBXDocumentTags !== undefined) {
    			if (!Array.isArray(inputData.JBXDocumentTags)) {
    				errors.JBXDocumentTags = [
    					'JBXErrorNotArray',
    				];
    			}
    		}

    		return Object.entries(errors).length ? errors : null;
    	},
    	
    	JBXDocumentDirectory () {
    		return 'jbx_documents';
    	},

    	JBXDocumentObjectPath (inputData) {
    		return `${ mod.JBXDocumentDirectory() }/${ inputData.JBXDocumentID }`;
    	},

    	JBXDocumentStub (inputData) {
    		return {
    			JBXDocumentID: inputData.split('/').pop(),
    		};
    	},

    	_JBXDocumentProcess (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		['JBXDocumentURL', 'JBXDocumentEmbedURL'].forEach(function (e) {
    			if (!inputData[e]) {
    				return;
    			}

    			Object.assign(inputData, {
    				[e]: main$3.OLSKWash(inputData[e]),
    			});
    		});

    		if ((inputData.JBXDocumentEmbedURL || '').match('vimeo')) {
    			Object.assign(inputData, {
    				JBXDocumentEmbedURL: inputData.JBXDocumentEmbedURL.replace('autoplay=1', 'autoplay=0'),
    			});
    		}

    		if ((inputData.JBXDocumentEmbedURL || '').match('youtube.com')) {
    			Object.assign(inputData, {
    				JBXDocumentEmbedURL: inputData.JBXDocumentEmbedURL.replace('youtube.com', 'youtube-nocookie.com'),
    			});
    		}

    		if ((inputData.JBXDocumentTags || []).length) {
    			Object.assign(inputData, {
    				JBXDocumentTags: inputData.JBXDocumentTags.filter(function (e, i, coll) {
    					return !!(e || '').trim() && coll.indexOf(e) === i;
    				}),
    			});
    		}

    		delete inputData.__JBXDocumentProcessTest;

    		return inputData;
    	},

    };

    var JBXDocument = Object.assign(mod, {
    	ZDRSchemaKey: 'JBXDocument',
    	ZDRSchemaDispatchValidate: mod.JBXDocumentErrors,
    	ZDRSchemaPath: mod.JBXDocumentObjectPath,
    	ZDRSchemaStub: mod.JBXDocumentStub,
    	ZDRSchemaMethods: {
    		
    		JBXDocumentCreate (inputData) {
    			if (typeof inputData !== 'object' || inputData === null) {
    				throw new Error('JBXErrorInputNotValid');
    			}

    			const JBXDocumentCreationDate = new Date();

    			return this.App.JBXDocument.ZDRModelWriteObject(mod._JBXDocumentProcess(Object.assign(inputData, Object.assign({
    				JBXDocumentID: uniqueID(),
    				JBXDocumentCreationDate,
    				JBXDocumentModificationDate: JBXDocumentCreationDate,
    			}, inputData))));
    		},

    		JBXDocumentUpdate (inputData) {
    			if (typeof inputData !== 'object' || inputData === null) {
    				throw new Error('JBXErrorInputNotValid');
    			}

    			return this.App.JBXDocument.ZDRModelWriteObject(mod._JBXDocumentProcess(Object.assign(inputData, {
    				JBXDocumentModificationDate: new Date(),
    			})));
    		},

    		async JBXDocumentList () {
    			return Object.values(await this.App.JBXDocument.ZDRModelListObjects()).filter(function (e) {
    				return !!e;
    			}).map(main$2.OLSKRemoteStoragePostJSONParse);		},

    	},
    });

    const mod$1 = {

    	JBXSettingErrors (inputData, options = {}) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		const errors = {};

    		if (typeof inputData.JBXSettingKey !== 'string') {
    			errors.JBXSettingKey = [
    				'JBXErrorNotString',
    			];
    		} else if (!inputData.JBXSettingKey.trim()) {
    			errors.JBXSettingKey = [
    				'JBXErrorNotFilled',
    			];
    		}

    		if (typeof inputData.JBXSettingValue !== 'string') {
    			errors.JBXSettingValue = [
    				'JBXErrorNotString',
    			];
    		}

    		return Object.entries(errors).length ? errors : null;
    	},

    	JBXSettingDirectory () {
    		return 'jbx_settings';
    	},

    	JBXSettingPath (inputData) {
    		return `${ mod$1.JBXSettingDirectory() }/${ inputData.JBXSettingKey }`;
    	},

    	JBXSettingStub (inputData) {
    		return {
    			JBXSettingKey: inputData.split('/').pop(),
    		};
    	},

    };

    var JBXSetting = Object.assign(mod$1, {
    	ZDRSchemaKey: 'JBXSetting',
    	ZDRSchemaDispatchValidate: mod$1.JBXSettingErrors,
    	ZDRSchemaPath: mod$1.JBXSettingPath,
    	ZDRSchemaStub: mod$1.JBXSettingStub,
    	ZDRSchemaMethods: {
    		
    		async JBXSettingList () {
    			return Object.values(await this.App.JBXSetting.ZDRModelListObjects());
    		},

    	},
    });

    var JBXTransport = {
    	ZDRSchemaKey: 'JBXTransport',
    	ZDRSchemaDispatchValidate: (function () {}),
    	ZDRSchemaPath: (function () {}),
    	ZDRSchemaStub: (function () {}),
    	ZDRSchemaMethods: {

    		async JBXTransportImport (inputData) {
    			if (typeof inputData !== 'object' || inputData === null) {
    				throw new Error('JBXErrorInputNotValid');
    			}

    			const _this = this;

    			return Object.fromEntries(await Promise.all(Object.entries(inputData).map(async function ([key, value]) {
    				if (!Array.isArray(value)) {
    					throw new Error('JBXErrorInputNotValid');
    				}

    				return [key, await ({
    					JBXDocument: (function () {
    						return Promise.all(value.map(function (e) {
    							return _this.App.JBXDocument.JBXDocumentCreate(e).catch(function () {
    								throw new Error('JBXErrorInputNotValid');
    							});
    						}));
    					}),
    					JBXSetting: (function () {
    						return Promise.all(value.map(function (e) {
    							return _this.App.JBXSetting.ZDRModelWriteObject(e).catch(function () {
    								throw new Error('JBXErrorInputNotValid');
    							});
    						}));
    					}),
    				}[key]())];
    			})));
    		},

    		JBXTransportExport (inputData) {
    			if (typeof inputData !== 'object' || inputData === null) {
    				throw new Error('JBXErrorInputNotValid');
    			}

    			return Object.entries(inputData).reduce(function (coll, [key, value]) {
    				if (!Array.isArray(value)) {
    					throw new Error('JBXErrorInputNotValid');
    				}

    				if (!value.length) {
    					return coll;
    				}
    				
    				return Object.assign(coll, {
    					[key]: value.filter(function (e) {
    						return !e.$JBXDocumentIsInbox;
    					}).map(main$2.OLSKRemoteStorageSafeCopy),
    				});
    			}, {});
    		},

    	},
    };

    var main$4 = createCommonjsModule(function (module, exports) {
    (function(global, factory) {
    	 factory(exports) ;
    }(commonjsGlobal, (function(exports) {
    	const mod = {

    		OLSKStringFormatted (inputData) {
    			if (typeof inputData !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			var substitutions = Object.values(arguments).slice(1);

    			if (!substitutions.length) {
    				return inputData;
    			}

    			var formattedString = inputData;

    			(inputData.match(/%@/g) || []).forEach(function(e, i) {
    				formattedString = formattedString.replace(e, substitutions[i]);
    			});

    			mod._OLSKStringAllMatches(/%\$(\d*)@/g, inputData).forEach(function(e) {
    				formattedString = formattedString.replace(e[0], substitutions[e[1] - 1]);
    			});

    			return formattedString;
    		},

    		_OLSKStringAllMatches (regex, string) {
    			var matches = [];

    			var match = regex.exec(string);

    			while (match != null) {
    				matches.push(match);

    				match = regex.exec(string);
    			}

    			return matches;
    		},

    		OLSKStringReplaceTokens (param1, param2) {
    			if (typeof param1 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof param2 !== 'object' || param2 === null) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return Object.entries(param2).reduce(function (coll, item) {
    				return coll.replace(new RegExp(item.shift(), 'g'), item.pop());
    			}, param1);
    		},

    		OLSKStringPatch (param1, param2, param3) {
    			if (typeof param1 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof param2 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof param3 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (!param1.includes(param2) && !param1.includes(param3)) {
    				console.error(`source includes neither of "${ param2 }" or "${ param3 }"`);
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (param3.includes(param2)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return param1.split(param2).join(param3);
    		},

    		OLSKStringMatch (param1, param2, param3 = 'includes') {
    			if (typeof param1 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof param2 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof param3 !== 'undefined') {
    				if (typeof param3 !== 'string') {
    					throw new Error('OLSKErrorInputNotValid');
    				}
    			}

    			// Searching and sorting text with diacritical marks in JavaScript | Thread Engineering https://thread.engineering/2018-08-29-searching-and-sorting-text-with-diacritical-marks-in-javascript/
    			return param2.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, '')[param3](param1.toLowerCase().normalize('NFD').replace(/[\u0300-\u036f]/g, ''));
    		},

    		OLSKStringSnippet (inputData) {
    			if (typeof inputData !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return inputData.length <= 100 ? inputData : inputData.slice(0, 100).split(' ').slice(0, -1).join(' ').concat('…');
    		},

    		OLSKStringEncode (inputData) {
    			if (typeof inputData !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			return mod.OLSKStringReplaceTokens(encodeURIComponent(inputData), {
    				'\\(': '%28',
    				'\\)': '%29',
    			});
    		},

    	};

    	Object.assign(exports, mod);

    	Object.defineProperty(exports, '__esModule', {
    		value: true
    	});

    })));

    {
    	exports.OLSKFormatted = exports.OLSKStringFormatted;
    }
    });

    var OLSKString = unwrapExports(main$4);
    var main_1$2 = main$4.OLSKFormatted;

    var main$5 = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKDOMMetadata (inputData, debug = {}) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const doc = debug.JSDOM ? debug.JSDOM(inputData) : new DOMParser().parseFromString(inputData, 'text/html');

    		const _OLSKDOMMetadataFunding = Array.from(doc.querySelectorAll('a')).reduce(function (coll, item) {
    			const href = (item.getAttribute('href') || '').trim();
    			return href && href.match(/^http/) && mod.OLSKDOMMetadataFundingDomains().filter(function (e) {
    				return (new URL(href)).pathname.slice((new URL('https://' + e)).pathname.length).length > 1 && href.match(e);
    			}).length ? coll.concat(href) : coll;
    		}, []);

    		return Array.from(doc.querySelectorAll('[name],[property],[itemprop],[rel]')).reduce(function (coll, item) {
    			const key = item.getAttribute('name') || item.getAttribute('property') || item.getAttribute('itemprop') || item.getAttribute('rel');

    			if (!key) {
    				return coll;
    			}

    			return Object.assign(coll, {
    				[key]: item.getAttribute('content') || item.getAttribute('href'),
    			})
    		}, [].concat.apply([], [doc.querySelector('title') ? {
    			title: doc.querySelector('title').text,
    		} : {}, (function() {
    			try {
    				return JSON.parse(doc.querySelector('script[type="application/ld+json"]').innerHTML);
    			} catch {
    				return [];
    			}		})()]).reduce(function (coll, item) {
    			return Object.assign(coll, item)
    		}, _OLSKDOMMetadataFunding.length ? {
    			_OLSKDOMMetadataFunding,
    		} : {}));
    	},

    	OLSKDOMMetadataFundingDomains () {
    		return [
    			'opencollective.com',
    			'github.com/sponsors',
    			'patreon.com',
    			'liberapay.com',
    		];
    	},
    	
    };

    Object.assign(exports, mod);
    });

    var main$6 = createCommonjsModule(function (module, exports) {
    const mod = {

    	_OLSKEmbedCanonicalURL () {
    		return 'https://youtube.com/watch?v=oUFJJNQGwhk';
    	},

    	_OLSKEmbedPatterns () {
    		// https://github.com/oscarotero/Embed/blob/master/src/resources/oembed.php
    		return {
    			'http://www.23hq.com/23/oembed': [
    				'https?://(www\\.)?23hq\\.com/.*/photo/.*',
    			],
    			'https://api.abraia.me/oembed': [
    				'https?://store\\.abraia\\.me/.*',
    			],
    			'http://play.adpaths.com/oembed/*': [
    				'https?://play\\.adpaths\\.com/experience/.*',
    			],
    			'https://alpha-api.app.net/oembed': [
    				'https?://alpha\\.app\\.net/.*/post/.*',
    				'https?://photos\\.app\\.net/.*/.*',
    			],
    			'https://api.altrulabs.com/api/v1/social/oembed': [
    				'https?://app\\.altrulabs\\.com/.*/.*\\?answer_id\\=.*',
    				'https?://app\\.altrulabs\\.com/player/.*',
    			],
    			'https://live.amcharts.com/oembed': [
    				'https?://live\\.amcharts\\.com/.*',
    			],
    			'https://animatron.com/oembed/json': [
    				'https?://(www\\.)?animatron\\.com/project/.*',
    				'https?://animatron\\.com/project/.*',
    			],
    			'http://animoto.com/oembeds/create': [
    				'https?://animoto\\.com/play/.*',
    			],
    			'https://display.apester.com/oembed': [
    				'https?://renderer\\.apester\\.com/v2/.*\\?preview\\=true&iframe_preview\\=true',
    			],
    			'https://storymaps.arcgis.com/oembed': [
    				'https?://storymaps\\.arcgis\\.com/stories/.*',
    			],
    			'https://app.archivos.digital/oembed/': [
    				'https?://app\\.archivos\\.digital/app/view/.*',
    			],
    			'https://audioboom.com/publishing/oembed/v4.json': [
    				'https?://audioboom\\.com/channels/.*',
    				'https?://audioboom\\.com/channel/.*',
    				'https?://audioboom\\.com/posts/.*',
    			],
    			'https://audioclip.naver.com/oembed': [
    				'https?://audioclip\\.naver\\.com/channels/.*/clips/.*',
    				'https?://audioclip\\.naver\\.com/audiobooks/.*',
    			],
    			'https://audiomack.com/oembed': [
    				'https?://audiomack\\.com/.*/song/.*',
    				'https?://audiomack\\.com/.*/album/.*',
    				'https?://audiomack\\.com/.*/playlist/.*',
    			],
    			'http://audiosnaps.com/service/oembed': [
    				'https?://audiosnaps\\.com/k/.*',
    			],
    			'https://stage-embed.avocode.com/api/oembed': [
    				'https?://app\\.avocode\\.com/view/.*',
    			],
    			'http://axiom.ninja/oembed/': [
    				'https?://axiom\\.ninja/.*',
    			],
    			'https://backtracks.fm/oembed': [
    				'https?://backtracks\\.fm/.*/.*/e/.*',
    				'https?://backtracks\\.fm/.*/s/.*/.*',
    				'https?://backtracks\\.fm/.*/.*/.*/.*/e/.*/.*',
    				'https?://backtracks\\.fm/.*',
    			],
    			'https://www.beautiful.ai/api/oembed': [
    				'https?://(www\\.)?beautiful\\.ai/.*',
    			],
    			'https://blackfire.io/oembed': [
    				'https?://blackfire\\.io/profiles/.*/graph',
    				'https?://blackfire\\.io/profiles/compare/.*/graph',
    			],
    			'https://blogcast.host/oembed': [
    				'https?://blogcast\\.host/embed/.*',
    				'https?://blogcast\\.host/embedly/.*',
    			],
    			'http://boxofficebuz.com/oembed': [
    				'https?://boxofficebuz\\.com.*',
    			],
    			'https://view.briovr.com/api/v1/worlds/oembed/': [
    				'https?://view\\.briovr\\.com/api/v1/worlds/oembed/.*',
    			],
    			'https://buttondown.email/embed': [
    				'https?://buttondown\\.email/.*',
    			],
    			'https://cmc.byzart.eu/oembed/': [
    				'https?://cmc\\.byzart\\.eu/files/.*',
    			],
    			'http://cacoo.com/oembed.json': [
    				'https?://cacoo\\.com/diagrams/.*',
    			],
    			'http://carbonhealth.com/oembed': [
    				'https?://carbonhealth\\.com/practice/.*',
    			],
    			'http://img.catbo.at/oembed.json': [
    				'https?://img\\.catbo\\.at/.*',
    			],
    			'http://view.ceros.com/oembed': [
    				'https?://view\\.ceros\\.com/.*',
    			],
    			'http://embed.chartblocks.com/1.0/oembed': [
    				'https?://public\\.chartblocks\\.com/c/.*',
    			],
    			'http://chirb.it/oembed.json': [
    				'https?://chirb\\.it/.*',
    			],
    			'https://www.circuitlab.com/circuit/oembed/': [
    				'https?://(www\\.)?circuitlab\\.com/circuit/.*',
    			],
    			'https://www.clipland.com/api/oembed': [
    				'https?://(www\\.)?clipland\\.com/v/.*',
    			],
    			'http://api.clyp.it/oembed/': [
    				'https?://clyp\\.it/.*',
    				'https?://clyp\\.it/playlist/.*',
    			],
    			'https://app.ilovecoco.video/api/oembed.json': [
    				'https?://app\\.ilovecoco\\.video/.*/embed',
    			],
    			'https://codehs.com/api/sharedprogram/*/oembed/': [
    				'https?://codehs\\.com/editor/share_abacus/.*',
    			],
    			'http://codepen.io/api/oembed': [
    				'https?://codepen\\.io/.*',
    			],
    			'https://codepoints.net/api/v1/oembed': [
    				'https?://codepoints\\.net/.*',
    				'https?://(www\\.)?codepoints\\.net/.*',
    			],
    			'https://codesandbox.io/oembed': [
    				'https?://codesandbox\\.io/s/.*',
    				'https?://codesandbox\\.io/embed/.*',
    			],
    			'http://www.collegehumor.com/oembed.json': [
    				'https?://(www\\.)?collegehumor\\.com/video/.*',
    			],
    			'https://commaful.com/api/oembed/': [
    				'https?://commaful\\.com/play/.*',
    			],
    			'http://coub.com/api/oembed.json': [
    				'https?://coub\\.com/view/.*',
    				'https?://coub\\.com/embed/.*',
    			],
    			'http://crowdranking.com/api/oembed.json': [
    				'https?://crowdranking\\.com/.*/.*',
    			],
    			'https://staging.cyranosystems.com/oembed': [
    				'https?://staging\\.cyranosystems\\.com/msg/.*',
    				'https?://app\\.cyranosystems\\.com/msg/.*',
    			],
    			'http://api.dailymile.com/oembed?format=json': [
    				'https?://(www\\.)?dailymile\\.com/people/.*/entries/.*',
    			],
    			'https://www.dailymotion.com/services/oembed': [
    				'https?://(www\\.)?dailymotion\\.com/video/.*',
    			],
    			'https://api.datawrapper.de/v3/oembed/': [
    				'https?://datawrapper\\.dwcdn\\.net/.*',
    			],
    			'https://embed.deseret.com/': [
    				'https?://(.*\\.)?deseret\\.com/.*',
    			],
    			'http://backend.deviantart.com/oembed': [
    				'https?://(.*\\.)?deviantart\\.com/art/.*',
    				'https?://(.*\\.)?deviantart\\.com/.*\\#/d.*',
    				'https?://fav\\.me/.*',
    				'https?://sta\\.sh/.*',
    				'https?://(.*\\.)?deviantart\\.com/.*/art/.*',
    				'https?://sta\\.sh/.*",',
    				'https?://(.*\\.)?deviantart\\.com/.*\\#/d.*"',
    			],
    			'https://*.didacte.com/cards/oembed\'': [
    				'https?://(.*\\.)?didacte\\.com/a/course/.*',
    			],
    			'https://www.ultimedia.com/api/search/oembed': [
    				'https?://(www\\.)?ultimedia\\.com/central/video/edit/id/.*/topic_id/.*/',
    				'https?://(www\\.)?ultimedia\\.com/default/index/videogeneric/id/.*/showtitle/1/viewnc/1',
    				'https?://(www\\.)?ultimedia\\.com/default/index/videogeneric/id/.*',
    			],
    			'http://www.dipity.com/oembed/timeline/': [
    				'https?://(www\\.)?dipity\\.com/.*/.*/',
    			],
    			'https://www.docdroid.net/api/oembed': [
    				'https?://(.*\\.)?docdroid\\.net/.*',
    				'https?://docdro\\.id/.*',
    				'https?://(.*\\.)?docdroid\\.com/.*',
    			],
    			'http://dotsub.com/services/oembed': [
    				'https?://dotsub\\.com/view/.*',
    			],
    			'https://api.d.tube/oembed': [
    				'https?://d\\.tube/v/.*',
    			],
    			'http://edocr.com/api/oembed': [
    				'https?://edocr\\.com/docs/.*',
    			],
    			'https://www.edumedia-sciences.com/oembed.json': [
    				'https?://(www\\.)?edumedia\\-sciences\\.com/.*',
    			],
    			'https://www.edumedia-sciences.com/oembed.xml': [
    				'https?://(www\\.)?edumedia\\-sciences\\.com/.*',
    			],
    			'http://egliseinfo.catholique.fr/api/oembed': [
    				'https?://egliseinfo\\.catholique\\.fr/.*',
    			],
    			'http://embedarticles.com/oembed/': [
    				'https?://embedarticles\\.com/.*',
    			],
    			'https://embedery.com/api/oembed': [
    				'https?://embedery\\.com/widget/.*',
    			],
    			'http://api.embed.ly/1/oembed': [
    				'https?://api\\.embed\\.ly/.*',
    			],
    			'https://ethfiddle.com/services/oembed/': [
    				'https?://ethfiddle\\.com/.*',
    			],
    			'https://eyrie.io/v1/oembed': [
    				'https?://eyrie\\.io/board/.*',
    				'https?://eyrie\\.io/sparkfun/.*',
    			],
    			'https://www.facebook.com/plugins/post/oembed.json': [
    				'https?://(www\\.)?facebook\\.com/.*/posts/.*',
    				'https?://(www\\.)?facebook\\.com/photos/.*',
    				'https?://(www\\.)?facebook\\.com/.*/photos/.*',
    				'https?://(www\\.)?facebook\\.com/photo\\.php.*',
    				'https?://(www\\.)?facebook\\.com/photo\\.php',
    				'https?://(www\\.)?facebook\\.com/.*/activity/.*',
    				'https?://(www\\.)?facebook\\.com/permalink\\.php',
    				'https?://(www\\.)?facebook\\.com/media/set\\?set\\=.*',
    				'https?://(www\\.)?facebook\\.com/questions/.*',
    				'https?://(www\\.)?facebook\\.com/notes/.*/.*/.*',
    			],
    			'https://www.facebook.com/plugins/video/oembed.json': [
    				'https?://(www\\.)?facebook\\.com/.*/videos/.*',
    				'https?://(www\\.)?facebook\\.com/video\\.php',
    			],
    			'https://app.getfader.com/api/oembed': [
    				'https?://app\\.getfader\\.com/projects/.*/publish',
    			],
    			'https://faithlifetv.com/api/oembed': [
    				'https?://faithlifetv\\.com/items/.*',
    				'https?://faithlifetv\\.com/items/resource/.*/.*',
    				'https?://faithlifetv\\.com/media/.*',
    				'https?://faithlifetv\\.com/media/assets/.*',
    				'https?://faithlifetv\\.com/media/resource/.*/.*',
    			],
    			'https://www.fireworktv.com/oembed': [
    				'https?://(.*\\.)?fireworktv\\.com/.*',
    				'https?://(.*\\.)?fireworktv\\.com/embed/.*/v/.*',
    			],
    			'https://www.fite.tv/oembed': [
    				'https?://(www\\.)?fite\\.tv/watch/.*',
    			],
    			'https://flat.io/services/oembed': [
    				'https?://flat\\.io/score/.*',
    				'https?://(.*\\.)?flat\\.io/score/.*',
    			],
    			'https://www.flickr.com/services/oembed/': [
    				'https?://(.*\\.)?flickr\\.com/photos/.*',
    				'https?://flic\\.kr/p/.*',
    			],
    			'https://app.flourish.studio/api/v1/oembed': [
    				'https?://public\\.flourish\\.studio/visualisation/.*',
    				'https?://public\\.flourish\\.studio/story/.*',
    			],
    			'https://oembed.fontself.com/': [
    				'https?://catapult\\.fontself\\.com/.*',
    			],
    			'https://fiso.foxsports.com.au/oembed': [
    				'https?://fiso\\.foxsports\\.com\\.au/isomorphic\\-widget/.*',
    			],
    			'https://framebuzz.com/oembed/': [
    				'https?://framebuzz\\.com/v/.*',
    			],
    			'http://www.funnyordie.com/oembed.json': [
    				'https?://(www\\.)?funnyordie\\.com/videos/.*',
    			],
    			'http://api.geograph.org.uk/api/oembed': [
    				'https?://(.*\\.)?geograph\\.org\\.uk/.*',
    				'https?://(.*\\.)?geograph\\.co\\.uk/.*',
    				'https?://(.*\\.)?geograph\\.ie/.*',
    				'https?://(.*\\.)?wikimedia\\.org/.*_geograph\\.org\\.uk_.*',
    			],
    			'http://www.geograph.org.gg/api/oembed': [
    				'https?://(.*\\.)?geograph\\.org\\.gg/.*',
    				'https?://(.*\\.)?geograph\\.org\\.je/.*',
    				'https?://channel\\-islands\\.geograph\\.org/.*',
    				'https?://channel\\-islands\\.geographs\\.org/.*',
    				'https?://(.*\\.)?channel\\.geographs\\.org/.*',
    			],
    			'http://geo.hlipp.de/restapi.php/api/oembed': [
    				'https?://geo\\-en\\.hlipp\\.de/.*',
    				'https?://geo\\.hlipp\\.de/.*',
    				'https?://germany\\.geograph\\.org/.*',
    			],
    			'http://embed.gettyimages.com/oembed': [
    				'https?://gty\\.im/.*',
    			],
    			'https://api.gfycat.com/v1/oembed': [
    				'https?://gfycat\\.com/.*',
    				'https?://(www\\.)?gfycat\\.com/.*',
    			],
    			'https://www.gifnote.com/services/oembed': [
    				'https?://(www\\.)?gifnote\\.com/play/.*',
    			],
    			'https://giphy.com/services/oembed': [
    				'https?://giphy\\.com/gifs/.*',
    				'https?://gph\\.is/.*',
    				'https?://media\\.giphy\\.com/media/.*/giphy\\.gif',
    			],
    			'https://gloria.tv/oembed/': [
    				'https?://gloria\\.tv/.*',
    			],
    			'https://api.luminery.com/oembed': [
    				'https?://gtchannel\\.com/watch/.*',
    			],
    			'https://api.gyazo.com/api/oembed': [
    				'https?://gyazo\\.com/.*',
    			],
    			'https://hearthis.at/oembed/?format=json': [
    				'https?://hearthis\\.at/.*/.*/',
    				'https?://hearthis\\.at/.*/set/.*/',
    			],
    			'https://player.hihaho.com/services/oembed/*': [
    				'https?://player\\.hihaho\\.com/.*',
    			],
    			'https://homey.app/api/oembed/flow': [
    				'https?://homey\\.app/f/.*',
    				'https?://homey\\.app/.*/flow/.*',
    			],
    			'http://huffduffer.com/oembed': [
    				'https?://huffduffer\\.com/.*/.*',
    			],
    			'http://www.hulu.com/api/oembed.json': [
    				'https?://(www\\.)?hulu\\.com/watch/.*',
    			],
    			'http://www.ifixit.com/Embed': [
    				'https?://(www\\.)?ifixit\\.com/Guide/View/.*',
    			],
    			'http://www.ifttt.com/oembed/': [
    				'https?://ifttt\\.com/recipes/.*',
    			],
    			'https://www.iheart.com/oembed': [
    				'https?://(www\\.)?iheart\\.com/podcast/.*/.*',
    			],
    			'https://player.indacolive.com/services/oembed': [
    				'https?://player\\.indacolive\\.com/player/jwp/clients/.*',
    			],
    			'https://infogram.com/oembed': [
    				'https?://infogram\\.com/.*',
    			],
    			'https://infoveave.net/services/oembed/': [
    				'https?://(.*\\.)?infoveave\\.net/E/.*',
    				'https?://(.*\\.)?infoveave\\.net/P/.*',
    			],
    			'https://www.injurymap.com/services/oembed': [
    				'https?://(www\\.)?injurymap\\.com/exercises/.*',
    			],
    			'https://www.inoreader.com/oembed/api/': [
    				'https?://(www\\.)?inoreader\\.com/oembed/',
    			],
    			'http://api.inphood.com/oembed': [
    				'https?://(.*\\.)?inphood\\.com/.*',
    			],
    			'https://api.instagram.com/oembed': [
    				'https?://instagram\\.com/.*/p/.*,',
    				'https?://(www\\.)?instagram\\.com/.*/p/.*,',
    				'https?://instagram\\.com/p/.*',
    				'https?://instagr\\.am/p/.*',
    				'https?://(www\\.)?instagram\\.com/p/.*',
    				'https?://(www\\.)?instagr\\.am/p/.*',
    				'https?://instagram\\.com/tv/.*',
    				'https?://instagr\\.am/tv/.*',
    				'https?://(www\\.)?instagram\\.com/tv/.*',
    				'https?://(www\\.)?instagr\\.am/tv/.*',
    			],
    			'https://www.isnare.com/oembed/': [
    				'https?://(www\\.)?isnare\\.com/.*',
    			],
    			'https://issuu.com/oembed': [
    				'https?://issuu\\.com/.*/docs/.*',
    			],
    			'https://music.ivlis.kr/oembed': [
    				'https?://music\\.ivlis\\.kr/.*',
    			],
    			'https://api.jovian.ai/oembed.json': [
    				'https?://jovian\\.ml/.*',
    				'https?://jovian\\.ml/viewer.*',
    				'https?://(.*\\.)?jovian\\.ml/.*',
    			],
    			'https://tv.kakao.com/oembed': [
    				'https?://tv\\.kakao\\.com/channel/.*/cliplink/.*',
    				'https?://tv\\.kakao\\.com/channel/v/.*',
    				'https?://tv\\.kakao\\.com/channel/.*/livelink/.*',
    				'https?://tv\\.kakao\\.com/channel/l/.*',
    			],
    			'http://www.kickstarter.com/services/oembed': [
    				'https?://(www\\.)?kickstarter\\.com/projects/.*',
    			],
    			'https://www.kidoju.com/api/oembed': [
    				'https?://(www\\.)?kidoju\\.com/en/x/.*/.*',
    				'https?://(www\\.)?kidoju\\.com/fr/x/.*/.*',
    			],
    			'https://halaman.email/service/oembed': [
    				'https?://halaman\\.email/form/.*',
    				'https?://aplikasi\\.kirim\\.email/form/.*',
    			],
    			'https://embed.kit.co/oembed': [
    				'https?://kit\\.co/.*/.*',
    			],
    			'http://www.kitchenbowl.com/oembed': [
    				'https?://(www\\.)?kitchenbowl\\.com/recipe/.*',
    			],
    			'https://jdr.knacki.info/oembed': [
    				'https?://jdr\\.knacki\\.info/meuh/.*',
    			],
    			'https://api.spoonacular.com/knowledge/oembed': [
    				'https?://knowledgepad\\.co/\\#/knowledge/.*',
    			],
    			'http://learningapps.org/oembed.php': [
    				'https?://learningapps\\.org/.*',
    			],
    			'https://pod.univ-lille.fr/oembed': [
    				'https?://pod\\.univ\\-lille\\.fr/video/.*',
    			],
    			'https://livestream.com/oembed': [
    				'https?://livestream\\.com/accounts/.*/events/.*',
    				'https?://livestream\\.com/accounts/.*/events/.*/videos/.*',
    				'https?://livestream\\.com/.*/events/.*',
    				'https?://livestream\\.com/.*/events/.*/videos/.*',
    				'https?://livestream\\.com/.*/.*',
    				'https?://livestream\\.com/.*/.*/videos/.*',
    			],
    			'https://app.ludus.one/oembed': [
    				'https?://app\\.ludus\\.one/.*',
    			],
    			'http://mathembed.com/oembed': [
    				'https?://mathembed\\.com/latex\\?inputText\\=.*',
    			],
    			'https://my.matterport.com/api/v1/models/oembed/': [
    				'https?://matterport\\.com/.*',
    			],
    			'https://me.me/oembed': [
    				'https?://me\\.me/i/.*',
    			],
    			'https://*.medialab.(co|app)/api/oembed/': [
    				'https?://(.*\\.)?medialab\\.app/share/watch/.*',
    				'https?://(.*\\.)?medialab\\.co/share/watch/.*',
    				'https?://(.*\\.)?medialab\\.app/share/social/.*',
    				'https?://(.*\\.)?medialab\\.co/share/social/.*',
    				'https?://(.*\\.)?medialab\\.app/share/embed/.*',
    				'https?://(.*\\.)?medialab\\.co/share/embed/.*',
    			],
    			'https://medienarchiv.zhdk.ch/oembed.json': [
    				'https?://medienarchiv\\.zhdk\\.ch/entries/.*',
    			],
    			'https://api.meetup.com/oembed': [
    				'https?://meetup\\.com/.*',
    				'https?://(www\\.)?meetup\\.com/.*',
    				'https?://meetu\\.ps/.*',
    			],
    			'https://mermaid.ink/services/oembed': [
    				'https?://mermaid\\.ink/img/.*',
    				'https?://mermaid\\.ink/svg/.*',
    			],
    			'https://api.microlink.io': [
    				'https?://api\\.microlink\\.io.*',
    			],
    			'https://web.microsoftstream.com/oembed': [
    				'https?://(.*\\.)?microsoftstream\\.com/video/.*',
    				'https?://(.*\\.)?microsoftstream\\.com/channel/.*',
    			],
    			'https://www.mixcloud.com/oembed/': [
    				'https?://(www\\.)?mixcloud\\.com/.*/.*/',
    			],
    			'http://api.mobypicture.com/oEmbed': [
    				'https?://(www\\.)?mobypicture\\.com/user/.*/view/.*',
    				'https?://moby\\.to/.*',
    			],
    			'https://portal.modelo.io/oembed': [
    				'https?://beta\\.modelo\\.io/embedded/.*',
    			],
    			'https://m-roll.morphcast.com/service/oembed': [
    				'https?://m\\-roll\\.morphcast\\.com/mroll/.*',
    			],
    			'https://musicboxmaniacs.com/embed/': [
    				'https?://musicboxmaniacs\\.com/explore/melody/.*',
    			],
    			'https://mybeweeg.com/services/oembed': [
    				'https?://mybeweeg\\.com/w/.*',
    			],
    			'https://namchey.com/api/oembed': [
    				'https?://namchey\\.com/embeds/.*',
    			],
    			'https://www.nanoo.tv/services/oembed': [
    				'https?://(.*\\.)?nanoo\\.tv/link/.*',
    				'https?://nanoo\\.tv/link/.*',
    				'https?://(.*\\.)?nanoo\\.pro/link/.*',
    				'https?://nanoo\\.pro/link/.*',
    				'https?://media\\.zhdk\\.ch/signatur/.*',
    				'https?://new\\.media\\.zhdk\\.ch/signatur/.*',
    			],
    			'https://api.nb.no/catalog/v1/oembed': [
    				'https?://(www\\.)?nb\\.no/items/.*',
    			],
    			'https://naturalatlas.com/oembed.json': [
    				'https?://naturalatlas\\.com/.*',
    				'https?://naturalatlas\\.com/.*/.*',
    				'https?://naturalatlas\\.com/.*/.*/.*',
    				'https?://naturalatlas\\.com/.*/.*/.*/.*',
    			],
    			'http://www.nfb.ca/remote/services/oembed/': [
    				'https?://(.*\\.)?nfb\\.ca/film/.*',
    			],
    			'https://www.odds.com.au/api/oembed/': [
    				'https?://(www\\.)?odds\\.com\\.au/.*',
    				'https?://odds\\.com\\.au/.*',
    			],
    			'https://song.link/oembed': [
    				'https?://song\\.link/.*',
    				'https?://album\\.link/.*',
    				'https?://artist\\.link/.*',
    				'https?://playlist\\.link/.*',
    				'https?://pods\\.link/.*',
    				'https?://mylink\\.page/.*',
    				'https?://odesli\\.co/.*',
    			],
    			'http://official.fm/services/oembed.json': [
    				'https?://official\\.fm/tracks/.*',
    				'https?://official\\.fm/playlists/.*',
    			],
    			'https://omniscope.me/_global_/oembed/json': [
    				'https?://omniscope\\.me/.*',
    			],
    			'http://on.aol.com/api': [
    				'https?://on\\.aol\\.com/video/.*',
    			],
    			'https://www.ora.tv/oembed/*?format=json': [
    				'https?://(www\\.)?ora\\.tv/.*',
    			],
    			'http://orbitvu.co/service/oembed': [
    				'https?://orbitvu\\.co/001/.*/ov3601/view',
    				'https?://orbitvu\\.co/001/.*/ov3601/.*/view',
    				'https?://orbitvu\\.co/001/.*/ov3602/.*/view',
    				'https?://orbitvu\\.co/001/.*/2/orbittour/.*/view',
    				'https?://orbitvu\\.co/001/.*/1/2/orbittour/.*/view',
    			],
    			'https://www.oumy.com/oembed': [
    				'https?://(www\\.)?oumy\\.com/v/.*',
    			],
    			'https://outplayed.tv/oembed': [
    				'https?://outplayed\\.tv/media/.*',
    			],
    			'https://overflow.io/services/oembed': [
    				'https?://overflow\\.io/s/.*',
    				'https?://overflow\\.io/embed/.*',
    			],
    			'https://core.oz.com/oembed': [
    				'https?://(www\\.)?oz\\.com/.*/video/.*',
    			],
    			'https://padlet.com/oembed/': [
    				'https?://padlet\\.com/.*',
    			],
    			'https://www.pastery.net/oembed': [
    				'https?://pastery\\.net/.*',
    				'https?://(www\\.)?pastery\\.net/.*',
    			],
    			'https://beta.pingvp.com.kpnis.nl/p/oembed.php': [
    				'https?://(www\\.)?pingvp\\.com/.*',
    			],
    			'https://tools.pinpoll.com/oembed': [
    				'https?://tools\\.pinpoll\\.com/.*',
    			],
    			'https://store.pixdor.com/oembed': [
    				'https?://store\\.pixdor\\.com/place\\-marker\\-widget/.*/show',
    				'https?://store\\.pixdor\\.com/map/.*/show',
    			],
    			'https://api.podbean.com/v1/oembed': [
    				'https?://(.*\\.)?podbean\\.com/e/.*',
    			],
    			'https://api.polarishare.com/rest/api/oembed': [
    				'https?://(www\\.)?polarishare\\.com/.*/.*',
    			],
    			'http://polldaddy.com/oembed/': [
    				'https?://(.*\\.)?polldaddy\\.com/s/.*',
    				'https?://(.*\\.)?polldaddy\\.com/poll/.*',
    				'https?://(.*\\.)?polldaddy\\.com/ratings/.*',
    			],
    			'https://api.sellwithport.com/v1.0/buyer/oembed': [
    				'https?://app\\.sellwithport\\.com/\\#/buyer/.*',
    			],
    			'https://api.portfolium.com/oembed': [
    				'https?://portfolium\\.com/entry/.*',
    			],
    			'http://posixion.com/services/oembed/': [
    				'https?://posixion\\.com/question/.*',
    				'https?://posixion\\.com/.*/question/.*',
    			],
    			'https://oembed.qualifio.com/': [
    				'https?://qualifio\\.com/.*',
    			],
    			'http://www.quiz.biz/api/oembed': [
    				'https?://(www\\.)?quiz\\.biz/quizz\\-.*\\.html',
    			],
    			'http://www.quizz.biz/api/oembed': [
    				'https?://(www\\.)?quizz\\.biz/quizz\\-.*\\.html',
    			],
    			'https://oembed.radiopublic.com/oembed': [
    				'https?://play\\.radiopublic\\.com/.*',
    				'https?://radiopublic\\.com/.*',
    				'https?://(www\\.)?radiopublic\\.com/.*',
    				'https?://(.*\\.)?radiopublic\\.com/.*\'',
    			],
    			'https://rapidengage.com/api/oembed': [
    				'https?://rapidengage\\.com/s/.*',
    			],
    			'https://www.reddit.com/oembed': [
    				'https?://reddit\\.com/r/.*/comments/.*/.*',
    				'https?://(www\\.)?reddit\\.com/r/.*/comments/.*/.*',
    			],
    			'http://publisher.releasewire.com/oembed/': [
    				'https?://rwire\\.com/.*',
    			],
    			'https://repl.it/data/oembed': [
    				'https?://repl\\.it/@.*/.*',
    			],
    			'http://repubhub.icopyright.net/oembed.act': [
    				'https?://repubhub\\.icopyright\\.net/freePost\\.act\\?.*',
    			],
    			'https://www.reverbnation.com/oembed': [
    				'https?://(www\\.)?reverbnation\\.com/.*',
    				'https?://(www\\.)?reverbnation\\.com/.*/songs/.*',
    			],
    			'https://www.riffreporter.de/service/oembed': [
    				'https?://(www\\.)?riffreporter\\.de/.*',
    			],
    			'http://roomshare.jp/en/oembed.json': [
    				'https?://roomshare\\.jp/post/.*',
    				'https?://roomshare\\.jp/en/post/.*',
    			],
    			'https://roosterteeth.com/oembed': [
    				'https?://roosterteeth\\.com/.*',
    			],
    			'https://rumble.com/api/Media/oembed.json': [
    				'https?://rumble\\.com/.*',
    			],
    			'https://embed.runkit.com/oembed': [
    				'https?://embed\\.runkit\\.com/.*,',
    			],
    			'http://videos.sapo.pt/oembed': [
    				'https?://videos\\.sapo\\.pt/.*',
    			],
    			'https://api.screen9.com/oembed': [
    				'https?://console\\.screen9\\.com/.*',
    				'https?://(.*\\.)?screen9\\.tv/.*',
    			],
    			'https://api.screencast.com/external/oembed': [
    				'https?://(www\\.)?screencast\\.com/.*',
    			],
    			'http://www.screenr.com/api/oembed.json': [
    				'https?://(www\\.)?screenr\\.com/.*/',
    			],
    			'https://scribblemaps.com/api/services/oembed.json': [
    				'https?://(www\\.)?scribblemaps\\.com/maps/view/.*',
    				'https?://scribblemaps\\.com/maps/view/.*',
    			],
    			'http://www.scribd.com/services/oembed/': [
    				'https?://(www\\.)?scribd\\.com/doc/.*',
    				'https?://(www\\.)?scribd\\.com/document/.*',
    			],
    			'https://embed.sendtonews.com/services/oembed': [
    				'https?://embed\\.sendtonews\\.com/oembed/.*',
    			],
    			'https://www.shortnote.jp/oembed/': [
    				'https?://(www\\.)?shortnote\\.jp/view/notes/.*',
    			],
    			'http://shoudio.com/api/oembed': [
    				'https?://shoudio\\.com/.*',
    				'https?://shoud\\.io/.*',
    			],
    			'https://showtheway.io/oembed': [
    				'https?://showtheway\\.io/to/.*',
    			],
    			'https://simplecast.com/oembed': [
    				'https?://simplecast\\.com/s/.*',
    			],
    			'https://onsizzle.com/oembed': [
    				'https?://onsizzle\\.com/i/.*',
    			],
    			'http://sketchfab.com/oembed': [
    				'https?://sketchfab\\.com/models/.*',
    				'https?://sketchfab\\.com/.*/folders/.*',
    			],
    			'http://www.slideshare.net/api/oembed/2': [
    				'https?://(www\\.)?slideshare\\.net/.*/.*',
    				'https?://fr\\.slideshare\\.net/.*/.*',
    				'https?://de\\.slideshare\\.net/.*/.*',
    				'https?://es\\.slideshare\\.net/.*/.*',
    				'https?://pt\\.slideshare\\.net/.*/.*',
    			],
    			'https://smashnotes.com/services/oembed': [
    				'https?://smashnotes\\.com/p/.*',
    				'https?://smashnotes\\.com/p/.*/e/.* \\- smashnotes\\.com/p/.*/e/.*/s/.*',
    			],
    			'https://api.smugmug.com/services/oembed/': [
    				'https?://(.*\\.)?smugmug\\.com/.*',
    			],
    			'https://www.socialexplorer.com/services/oembed/': [
    				'https?://(www\\.)?socialexplorer\\.com/.*/explore',
    				'https?://(www\\.)?socialexplorer\\.com/.*/view',
    				'https?://(www\\.)?socialexplorer\\.com/.*/edit',
    				'https?://(www\\.)?socialexplorer\\.com/.*/embed',
    			],
    			'https://soundcloud.com/oembed': [
    				'https?://soundcloud\\.com/.*',
    			],
    			'https://play.soundsgood.co/oembed': [
    				'https?://play\\.soundsgood\\.co/playlist/.*',
    				'https?://soundsgood\\.co/playlist/.*',
    			],
    			'https://speakerdeck.com/oembed.json': [
    				'https?://speakerdeck\\.com/.*/.*',
    			],
    			'https://api.bespotful.com/oembed': [
    				'https?://play\\.bespotful\\.com/.*',
    			],
    			'https://embed.spotify.com/oembed/': [
    				'https?://(.*\\.)?spotify\\.com/.*',
    				'https?://spotify\\:.*',
    			],
    			'https://api.spreaker.com/oembed': [
    				'https?://(.*\\.)?spreaker\\.com/.*',
    			],
    			'https://purl.stanford.edu/embed.json': [
    				'https?://purl\\.stanford\\.edu/.*',
    			],
    			'https://api.streamable.com/oembed.json': [
    				'https?://streamable\\.com/.*',
    			],
    			'https://content.streamonecloud.net/oembed': [
    				'https?://content\\.streamonecloud\\.net/embed/.*',
    			],
    			'https://www.sutori.com/api/oembed': [
    				'https?://(www\\.)?sutori\\.com/story/.*',
    			],
    			'https://sway.com/api/v1.0/oembed': [
    				'https?://sway\\.com/.*',
    				'https?://(www\\.)?sway\\.com/.*',
    			],
    			'https://www.ted.com/services/v1/oembed.json': [
    				'https?://ted\\.com/talks/.*',
    				'https?://(www\\.)?ted\\.com/talks/.*',
    			],
    			'https://www.nytimes.com/svc/oembed/json/': [
    				'https?://(www\\.)?nytimes\\.com/svc/oembed',
    				'https?://nytimes\\.com/.*',
    				'https?://(.*\\.)?nytimes\\.com/.*',
    			],
    			'https://theysaidso.com/extensions/oembed/': [
    				'https?://theysaidso\\.com/image/.*',
    			],
    			'https://www.tickcounter.com/oembed': [
    				'https?://(www\\.)?tickcounter\\.com/countdown/.*',
    				'https?://(www\\.)?tickcounter\\.com/countup/.*',
    				'https?://(www\\.)?tickcounter\\.com/ticker/.*',
    				'https?://(www\\.)?tickcounter\\.com/worldclock/.*',
    			],
    			'https://www.tiktok.com/oembed': [
    				'https?://(www\\.)?tiktok\\.com/.*/video/.*',
    				'https?://(.*\\.)?tiktok\\.com/.*',
    			],
    			'https://widget.toornament.com/oembed': [
    				'https?://(www\\.)?toornament\\.com/tournaments/.*/information',
    				'https?://(www\\.)?toornament\\.com/tournaments/.*/registration/',
    				'https?://(www\\.)?toornament\\.com/tournaments/.*/matches/schedule',
    				'https?://(www\\.)?toornament\\.com/tournaments/.*/stages/.*/',
    			],
    			'http://www.topy.se/oembed/': [
    				'https?://(www\\.)?topy\\.se/image/.*',
    			],
    			'https://www.tuxx.be/services/oembed': [
    				'https?://(www\\.)?tuxx\\.be/.*',
    			],
    			'https://play.tvcf.co.kr/rest/oembed': [
    				'https?://play\\.tvcf\\.co\\.kr/.*',
    				'https?://(.*\\.)?tvcf\\.co\\.kr/.*',
    			],
    			'https://api.twitch.tv/v5/oembed': [
    				'https?://clips\\.twitch\\.tv/.*',
    				'https?://(www\\.)?twitch\\.tv/.*',
    				'https?://twitch\\.tv/.*',
    			],
    			'https://publish.twitter.com/oembed': [
    				'https?://twitter\\.com/.*/status/.*',
    				'https?://(.*\\.)?twitter\\.com/.*/status/.*',
    			],
    			'https://play.typecast.ai/oembed': [
    				'https?://play\\.typecast\\.ai/s/.*',
    				'https?://play\\.typecast\\.ai/e/.*',
    				'https?://play\\.typecast\\.ai/.*',
    			],
    			'https://typlog.com/oembed': [
    				'https?://typlog\\.com.*',
    			],
    			'https://player.ubideo.com/api/oembed.json': [
    				'https?://player\\.ubideo\\.com/.*',
    			],
    			'https://map.cam.ac.uk/oembed/': [
    				'https?://map\\.cam\\.ac\\.uk/.*',
    			],
    			'https://mediatheque.univ-paris1.fr/oembed': [
    				'https?://mediatheque\\.univ\\-paris1\\.fr/video/.*',
    			],
    			'https://mais.uol.com.br/apiuol/v3/oembed/view': [
    				'https?://(.*\\.)?uol\\.com\\.br/view/.*',
    				'https?://(.*\\.)?uol\\.com\\.br/video/.*',
    			],
    			'http://www.ustream.tv/oembed': [
    				'https?://(.*\\.)?ustream\\.tv/.*',
    				'https?://(.*\\.)?ustream\\.com/.*',
    			],
    			'https://app.ustudio.com/api/v2/oembed': [
    				'https?://(.*\\.)?ustudio\\.com/embed/.*',
    				'https?://(.*\\.)?ustudio\\.com/embed/.*/.*',
    			],
    			'https://www.utposts.com/api/oembed': [
    				'https?://(www\\.)?utposts\\.com/products/.*',
    				'https?://utposts\\.com/products/.*',
    			],
    			'http://uttles.com/api/reply/oembed': [
    				'https?://uttles\\.com/uttle/.*',
    			],
    			'https://api.veer.tv/oembed': [
    				'https?://veer\\.tv/videos/.*',
    			],
    			'https://api.veervr.tv/oembed': [
    				'https?://veervr\\.tv/videos/.*',
    			],
    			'http://verse.com/services/oembed/': [
    				'https?://verse\\.com/.*',
    			],
    			'https://www.vevo.com/oembed': [
    				'https?://(www\\.)?vevo\\.com/.*',
    			],
    			'http://www.videojug.com/oembed.json': [
    				'https?://(www\\.)?videojug\\.com/film/.*',
    				'https?://(www\\.)?videojug\\.com/interview/.*',
    			],
    			'https://api.vidl.it/oembed': [
    				'https?://vidl\\.it/.*',
    			],
    			'https://app-v2.vidmizer.com/api/oembed': [
    				'https?://players\\-cdn\\-v2\\.vidmizer\\.com/.*',
    			],
    			'https://api.vidyard.com/dashboard/v1.1/oembed': [
    				'https?://(.*\\.)?vidyard\\.com/.*',
    				'https?://(.*\\.)?hubs\\.vidyard\\.com/.*',
    			],
    			'https://vimeo.com/api/oembed.json': [
    				'https?://vimeo\\.com/.*',
    				'https?://vimeo\\.com/album/.*/video/.*',
    				'https?://vimeo\\.com/channels/.*/.*',
    				'https?://vimeo\\.com/groups/.*/videos/.*',
    				'https?://vimeo\\.com/ondemand/.*/.*',
    				'https?://player\\.vimeo\\.com/video/.*',
    			],
    			'https://www.viously.com/oembed': [
    				'https?://(www\\.)?viously\\.com/.*/.*',
    			],
    			'http://viziosphere.com/services/oembed/': [
    				'https?://viziosphere\\.com/3dphoto.*',
    			],
    			'https://vizydrop.com/oembed': [
    				'https?://vizydrop\\.com/shared/.*',
    			],
    			'https://vlipsy.com/oembed': [
    				'https?://vlipsy\\.com/.*',
    			],
    			'https://www.vlive.tv/oembed': [
    				'https?://(www\\.)?vlive\\.tv/video/.*',
    			],
    			'https://vlurb.co/oembed.json': [
    				'https?://vlurb\\.co/video/.*',
    			],
    			'https://data.voxsnap.com/oembed': [
    				'https?://article\\.voxsnap\\.com/.*/.*',
    			],
    			'https://embed.wave.video/oembed': [
    				'https?://watch\\.wave\\.video/.*',
    				'https?://embed\\.wave\\.video/.*',
    			],
    			'http://play.wecandeo.com/oembed': [
    				'https?://(www\\.)?wecandeo\\.com/.*',
    			],
    			'http://*.wiredrive.com/present-oembed/': [
    				'https?://(.*\\.)?wiredrive\\.com/.*',
    			],
    			'https://fast.wistia.com/oembed.json': [
    				'https?://fast\\.wistia\\.com/embed/iframe/.*',
    				'https?://fast\\.wistia\\.com/embed/playlists/.*',
    				'https?://(.*\\.)?wistia\\.com/medias/.*',
    			],
    			'http://app.wizer.me/api/oembed.json': [
    				'https?://(.*\\.)?wizer\\.me/learn/.*',
    				'https?://(.*\\.)?wizer\\.me/preview/.*',
    			],
    			'https://wokwi.com/api/oembed': [
    				'https?://wokwi\\.com/share/.*',
    			],
    			'http://www.wootled.com/oembed': [
    				'https?://(www\\.)?wootled\\.com/.*',
    			],
    			'http://public-api.wordpress.com/oembed/': [
    				'https?://wordpress\\.com/.*',
    			],
    			'https://web.xpression.jp/api/oembed': [
    				'https?://web\\.xpression\\.jp/video/.*',
    			],
    			'http://yesik.it/s/oembed': [
    				'https?://yesik\\.it/.*',
    				'https?://(www\\.)?yesik\\.it/.*',
    			],
    			'http://www.yfrog.com/api/oembed': [
    				'https?://(.*\\.)?yfrog\\.com/.*',
    				'https?://yfrog\\.us/.*',
    			],
    			'https://www.youtube.com/oembed': [
    				'https?://(.*\\.)?youtube\\.com/watch.*',
    				'https?://(.*\\.)?youtube\\.com/v/.*',
    				'https?://youtu\\.be/.*',
    				'https?://(.*\\.)?youtube\\.com/playlist\\?.*',
    			],
    			'https://app.zeplin.io/embed': [
    				'https?://app\\.zeplin\\.io/project/.*/screen/.*',
    				'https?://app\\.zeplin\\.io/project/.*/screen/.*/version/.*',
    				'https?://app\\.zeplin\\.io/project/.*/styleguide/components\\?coid\\=.*',
    				'https?://app\\.zeplin\\.io/styleguide/.*/components\\?coid\\=.*',
    			],
    			'https://app.zingsoft.com/oembed': [
    				'https?://app\\.zingsoft\\.com/embed/.*',
    				'https?://app\\.zingsoft\\.com/view/.*',
    			],
    			'https://api.znipe.tv/v3/oembed/': [
    				'https?://(.*\\.)?znipe\\.tv/.*',
    			],
    			'https://srv2.zoomable.ca/oembed': [
    				'https?://srv2\\.zoomable\\.ca/viewer\\.php.*',
    			],
    			'http://jsbin.com/oembed': [
    				'https?://output\\.jsbin\\.com/.*',
    			],
    			'https://api.crowdsignal.com/oembed': [
    				'https?://polldaddy\\.com/poll/.*',
    				'https?://poll\\.fm/.*',
    			],
    			'https://api.imgur.com/oembed': [
    				'https?://imgur\\.com/.*',
    				'https?://i\\.imgur\\.com/.*',
    			],
    		};
    	},

    	OLSKEmbedEndpointURL (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return (Object.entries(mod._OLSKEmbedPatterns()).filter(function ([api, patterns]) {
    			return patterns.filter(function (e) {
    				return inputData.match(e);
    			}).length;
    		}).shift() || []).shift();
    	},

    	OLSKEmbedFetchURL (param1, param2) {
    		if (typeof param1 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return param1 + '?url=' + encodeURIComponent(param2)
    	},

    };

    Object.assign(exports, mod);
    });

    var main$7 = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKLinkRelativeURL (url, path) {
    		if (typeof url !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof path !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return (new URL(path, url)).href;
    	},

    	OLSKLinkCompareURL (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return inputData.toLowerCase().replace(/^https/, 'http').replace('www.', '').replace(/\/$/, '');
    	},

    	OLSKLinkValid (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		try {
    			if (new URL('', inputData).hostname) {
    				return true;
    			}
    		} catch (err) {
    			return false;
    		}
    	},

    	OLSKEmailValid (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!inputData.match('@')) {
    			return '';
    		}

    		if (!inputData.split('@').shift().trim()) {
    			return '';
    		}

    		if (!inputData.split('@').pop().match(/\./)) {
    			return '';
    		}

    		if (inputData.split('@').pop().split('.').pop().trim().length < 2) {
    			return '';
    		}

    		if (!inputData.split('@').pop().split('.').shift().trim()) {
    			return '';
    		}

    		if (inputData.trim().match(/\s/)) {
    			return '';
    		}

    		return inputData.trim();
    	},

    };

    Object.assign(exports, mod);
    });

    var main$8 = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKMomentStringOffset () {
    		const item = (new Date()).getTimezoneOffset() / 60;
    		return (item < 0 ? '+' : '-') + String(Math.abs(item)).padStart(2, '0')
    	},

    	OLSKMomentPerceptionDay (inputData) {
    		if (!(inputData instanceof Date) || Number.isNaN(inputData.getTime())) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return (new Date(inputData.valueOf() - (inputData.getTimezoneOffset() / 60 + 4) * 1000 * 60 * 60)).toJSON().slice(0, 10);
    	},

    	OLSKMomentPerceptionDate (inputData) {
    		return new Date(mod.OLSKMomentPerceptionDay(inputData) + `T04:00:00${ mod.OLSKMomentStringOffset() }:00`);
    	},

    };

    Object.assign(exports, mod);
    });

    const kJBXPlayCaptureAnchor = 'capture';
    const kJBXPlayNameAnchor = 'name';
    const kJBXPlayImageAnchor = 'image';
    const kJBXPlayInboxAnchor = 'inbox';

    const uAscending = function (a, b) {
      return (a < b) ? -1 : ((a > b) ? 1 : 0);
    };

    const uDescending = function (a, b) {
      return (a > b) ? -1 : ((a < b) ? 1 : 0);
    };

    const mod$2 = {

    	JBXPlayAccessibilitySummary (inputData) {
    		if (JBXDocument.JBXDocumentErrors(inputData)) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		return OLSKString.OLSKStringSnippet(inputData.JBXDocumentNotes);
    	},

    	JBXPlaySortFunction (a, b, log) {
    		if (a.$JBXDocumentIsInbox !== b.$JBXDocumentIsInbox) {
    			return uDescending(!!a.$JBXDocumentIsInbox, !!b.$JBXDocumentIsInbox);
    		}

    		if ([a.JBXDocumentArchiveDate, b.JBXDocumentArchiveDate].filter(function (e) {
    			return !e;
    		}) === 1) {
    			return uAscending(!!a.JBXDocumentArchiveDate, !!b.JBXDocumentArchiveDate);
    		}

    		return (function(e) {
    			return uDescending(a[e], b[e]);
    		})(['JBXDocumentArchiveDate', 'JBXDocumentCreationDate'].filter(function (e) {
    			return a[e] && b[e];
    		}).shift());
    	},

    	JBXPlayIsMatch (param1, param2) {
    		if (typeof param2 !== 'string') {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		return [param1.JBXDocumentURL, param1.JBXDocumentName, param1.JBXDocumentNotes].concat(param1.JBXDocumentTags).filter(function (e) {
    			return !!e && OLSKString.OLSKStringMatch(param2, e);
    		}).length;
    	},

    	_JBXPlayChunk (inputData, OLSKLocalized) {
    		const today = main$8.OLSKMomentPerceptionDate(new Date());

    		if (inputData.JBXDocumentArchiveDate) {
    			return OLSKLocalized('JBXPlayChunkArchiveText');
    		}

    		if (inputData.$JBXDocumentIsInbox) {
    			return OLSKLocalized('JBXPlayChunkInboxText');
    		}

    		if (inputData.JBXDocumentCreationDate >= today) {
    			return OLSKLocalized('JBXPlayChunkTodayText');
    		}

    		if (inputData.JBXDocumentCreationDate >= (new Date(today - 1000 * 60 * 60 * 24))) {
    			return OLSKLocalized('JBXPlayChunkYesterdayText');
    		}

    		return main$8.OLSKMomentPerceptionDate(inputData.JBXDocumentCreationDate).toLocaleDateString();
    	},

    	JBXPlayChunkFunction (inputData, OLSKLocalized) {
    		if (!Array.isArray(inputData)) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		return inputData.reduce(function (coll, item) {
    			const group = mod$2._JBXPlayChunk(item, OLSKLocalized);
    			return Object.assign(coll, {
    				[group]: (coll[group] || []).concat(item),
    			});
    		}, {});
    	},

    	JBXPlayChunkKeySortFunction (OLSKLocalized) {
    		if (typeof OLSKLocalized !== 'function') {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		return function (a, b) {
    			return uAscending(a === OLSKLocalized('JBXPlayChunkArchiveText'), b === OLSKLocalized('JBXPlayChunkArchiveText'));
    		};
    	},

    	JBXPlayDocuments (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		const recurse = function (coll, item) {
    			const urls = item.split(/\s/).filter(main$7.OLSKLinkValid);

    			if (urls.length > 1 && item.includes('\n')) {
    				return item.split('\n').reduce(recurse, coll);
    			}

    			const JBXDocumentNotes = urls.reduce(function (coll, item) {
    				return coll.split(item).join(' ');
    			}, item).trim();

    			if (!urls.length) {
    				return coll.concat({
    					JBXDocumentNotes,
    				});
    			}

    			return coll.concat(urls.map(function (JBXDocumentURL) {
    				return {
    					JBXDocumentNotes,
    					JBXDocumentURL,
    				};
    			}));
    		};

    		return inputData.split('\n\n').filter(function (e) {
    			return !!e.trim();
    		}).reduce(recurse, []);
    	},

    	async JBXPlayFetch (inputData, debug = {}) {
    		if (JBXDocument.JBXDocumentErrors(inputData)) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		if (!inputData.JBXDocumentURL) {
    			return inputData;
    		}

    		const embed = main$6.OLSKEmbedEndpointURL(inputData.JBXDocumentURL);

    		const metadata = {};

    		try {
    			Object.assign(metadata, await (await (debug.window || window).fetch(main$6.OLSKEmbedFetchURL(embed, inputData.JBXDocumentURL))).json());
    		} catch {}
    		if (Object.keys(metadata).length <= 1) {
    			Object.assign(metadata, main$5.OLSKDOMMetadata(await (await (debug.window || window).fetch('https://rosano.ca/proxy?uri=' + encodeURIComponent(inputData.JBXDocumentURL))).text(), debug));
    		}

    		return Object.assign(inputData, {
    			JBXDocumentName: inputData.JBXDocumentName || metadata.title,
    			JBXDocumentEmbedURL: metadata.html ? metadata.html.match(/src=\u0022(\S*)\u0022/)[1] : [
    				'og:video:secure_url',
    				'og:video:url',
    				'og:video',
    				'embedUrl',
    			].reduce(function (coll, item) {
    				return coll || metadata[item];
    			}, undefined),
    			JBXDocumentImageURL: [
    				'thumbnail_url',
    				'og:image',
    			].reduce(function (coll, item) {
    				return coll || metadata[item];
    			}, undefined),
    			JBXDocumentDidFetch: true,
    		});
    	},

    	JBXPlayCaptureAnchor () {
    		return kJBXPlayCaptureAnchor;
    	},

    	JBXPlayNameAnchor () {
    		return kJBXPlayNameAnchor;
    	},

    	JBXPlayImageAnchor () {
    		return kJBXPlayImageAnchor;
    	},

    	JBXPlayInboxAnchor () {
    		return kJBXPlayInboxAnchor;
    	},

    	JBXPlayRemap () {
    		return {
    			JBXDocumentNotes: 'description',
    			JBXDocumentURL: 'url',
    			JBXDocumentName: 'name',
    			JBXDocumentEmbedURL: 'embedUrl',
    			JBXDocumentImageURL: 'image',
    			JBXDocumentDidFetch: 'didFetch',
    		};
    	},

    	JBXPlayDocumentCount (inputData) {
    		if (!Array.isArray(inputData)) {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		return inputData.reduce(function (coll, item) {
    			if (!item || item.$JBXDocumentIsInbox) {
    				return coll;
    			}

    			return coll + 1;
    		}, 0);
    	},

    };

    var main$9 = createCommonjsModule(function (module, exports) {
    (function(global, factory) {
    	 factory(exports) ;
    }(commonjsGlobal, (function(exports) {
    	const mod = {

    		OLSKThrottleIsValid (inputData) {
    			if (typeof inputData !== 'object' || inputData === null) {
    				return false;
    			}

    			if (typeof inputData.OLSKThrottleCallback !== 'function') {
    				return false;
    			}

    			if (typeof inputData.OLSKThrottleDuration !== 'number') {
    				return false;
    			}

    			return true;
    		},

    		OLSKThrottleTimeoutFor (inputData) {
    			if (!mod.OLSKThrottleIsValid(inputData)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (inputData._OLSKThrottleTimeoutID) {
    				clearTimeout(inputData._OLSKThrottleTimeoutID);
    			}

    			inputData._OLSKThrottleTimeoutID = setTimeout(function () {
    				mod._OLSKThrottleFire(inputData);
    			}, inputData.OLSKThrottleDuration);

    			return inputData._OLSKThrottleTimeoutID;
    		},

    		OLSKThrottleSkip (inputData) {
    			if (!mod.OLSKThrottleIsValid(inputData)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			clearTimeout(inputData._OLSKThrottleTimeoutID);
    			
    			return mod._OLSKThrottleFire(inputData);
    		},

    		_OLSKThrottleFire (inputData) {
    			delete inputData._OLSKThrottleTimeoutID;
    			
    			return inputData.OLSKThrottleCallback();
    		},

    		OLSKThrottleMappedTimeout (param1, param2, param3) {
    			if (typeof param1 !== 'object' || param1 === null) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (typeof param2 !== 'string') {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (!mod.OLSKThrottleIsValid(param3)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}

    			if (!param1[param2]) {
    				param1[param2] = Object.assign(Object.assign({}, param3), {
    					OLSKThrottleCallback () {
    						mod._OLSKThrottleFire(param3);

    						delete param1[param2];
    					},
    				});
    			}

    			return param3._OLSKThrottleTimeoutID = mod.OLSKThrottleTimeoutFor(param1[param2]);
    		},

    	};

    	Object.assign(exports, mod);

    	Object.assign(exports, mod);

    	Object.defineProperty(exports, '__esModule', {
    		value: true
    	});

    })));
    });

    var OLSKThrottle = unwrapExports(main$9);

    var main$a = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKObjectSafeCopy (inputData) {
    		return Object.keys(inputData).reduce(function (coll, item) {
    			if (item[0] !== '$') {
    				coll[item] = inputData[item];
    			}

    			return coll
    		}, {});
    	},

    	OLSKObjectTrim (inputData) {
    		if (typeof inputData === 'string') {
    			return inputData.trim();
    		}

    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Object.fromEntries(Object.entries(inputData).map(function (e) {
    			return e.map(function (e) {
    				if (Array.isArray(e)) {
    					return e.map(mod.OLSKObjectTrim);
    				}

    				if (e instanceof Date) {
    					return e
    				}

    				if (typeof e === 'object') {
    					return mod.OLSKObjectTrim(e);
    				}

    				if (typeof e !== 'string') {
    					return e;
    				}
    				
    				return e.trim();
    			});
    		}));
    	},

    	_OLSKObjectInferredType (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return inputData.replace(/\w+ErrorNot/, '').toLowerCase();
    	},

    	OLSKObjectJSONSchema (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			type: 'object',
    			properties: Object.entries(inputData).reduce(function (coll, [key, val]) {
    				coll[key] = {};

    				coll[key].type = mod._OLSKObjectInferredType([...val].shift()).replace('filled', 'string');

    				if (coll[key].type === 'date') {
    					coll[key].type = 'string';
    					coll[key].format = 'date-time';
    				}

    				return coll;
    			}, {}),
    			required: Object.entries(inputData).filter(function ([key, val]) {
    				return !val.includes('__RSOptional');
    			}).map(function ([key, val]) {
    				return key;
    			}),
    		};
    	},

    	OLSKObjectRemap (param1, param2, param3 = false) {
    		if (typeof param1 !== 'object' || param1 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'object' || param2 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param3 !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Object.entries(param2).reduce(function (coll, item) {
    			if (param3) {
    				item = item.reverse();
    			}
    			
    			return !param1[item[0]] ? coll : Object.assign(coll, {
    				[item[1]]: param1[item[0]],
    			});
    		}, {});
    	},

    	OLSKObjectPostJSONParse (inputData) {
    		if (!inputData) {
    			return inputData;
    		}

    		if (Array.isArray(inputData)) {
    			return inputData.map(mod.OLSKObjectPostJSONParse);
    		}

    		for (const key in inputData) {
    			if (key.slice(-4) === 'Date') {
    				inputData[key] = new Date(inputData[key]);
    			} else if (Array.isArray(inputData[key])) {
    				inputData[key].map(mod.OLSKObjectPostJSONParse);
    			} else if (typeof inputData[key] === 'object') {
    				mod.OLSKObjectPostJSONParse(inputData[key]);
    			}
    		}

    		return inputData;
    	},
    	
    };

    Object.assign(exports, mod);
    });

    var main_1$3 = createCommonjsModule(function (module, exports) {
    const main = {

    	OLSKServiceWorkerModule (param1, param2, param3, param4) {
    		if (typeof param1 !== 'object' || param1 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param1.addEventListener !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'object' || param2 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2.keys !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param3 !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const mod = {

    			// VALUE

    			_ValueSelf: param1,
    			_ValueCaches: param2,
    			_ValueFetch: param3,
    			_ValuePersistenceCacheURLs: [],

    			// DATA

    			_DataVersionCacheName: 'OLSKServiceWorkerVersionCache-VERSION_ID_TOKEN',
    			_DataPersistenceCacheName: 'OLSKServiceWorkerPersistenceCache',
    			_DataOriginPage: 'ORIGIN_PAGE_PATH_TOKEN',

    			// CONTROL

    			async ControlClearCache () {
    				return Promise.all(
    					(await mod._ValueCaches.keys()).filter(function (e) {
    						return e !== mod._DataPersistenceCacheName;
    					}).map(function (e) {
    						return mod._ValueCaches.delete(e);
    					})
    				);
    			},

    			ControlAddPersistenceCacheURL (inputData) {
    				if (typeof inputData !== 'string') {
    					throw new Error('OLSKErrorInputNotValid');
    				}

    				if (mod._ValuePersistenceCacheURLs.includes(inputData)) {
    					return;
    				}

    				mod._ValuePersistenceCacheURLs.push(inputData);
    			},

    			// MESSAGE

    			OLSKServiceWorkerDidActivate (event) {
    				event.waitUntil(mod.ControlClearCache());
    			},

    			async OLSKServiceWorkerDidFetch (event) {
    				if (event.request.method !== 'GET') {
    					return;
    				}

    				if (event.request.url.match('sw.js')) {
    					return;
    				}

    				if (event.request.mode === 'cors' && !mod._ValuePersistenceCacheURLs.includes(event.request.url)) {
    					return;
    				}

    				if (event.request.mode === 'navigate' && !event.request.url.includes(mod._DataOriginPage)) {
    					return;
    				}

    				if (event.request.mode !== 'navigate' && !event.request.referrer.includes(mod._DataOriginPage)) {
    					return;
    				}

    				// if (!(event.request.referrer.match(/ORIGIN_PAGE_PATH_TOKEN/) && event.request.mode === 'no-cors') && !event.request.url.match(/ORIGIN_PAGE_PATH_TOKEN/)) {
    				// 	return console.log('ignoring referrer', event.request);
    				// };

    				return event.respondWith(async function() {
    					const cacheResponse = await mod._ValueCaches.match(event.request);

    					if (cacheResponse) {
    						return cacheResponse;
    					}

    					const networkResponse = param4 ? await fetch(event.request) : await mod._ValueFetch(event.request);

    					if (networkResponse.status === 200) {
    						(await mod._ValueCaches.open(mod._ValuePersistenceCacheURLs.includes(event.request.url) ? mod._DataPersistenceCacheName : mod._DataVersionCacheName)).put(event.request, networkResponse.clone());
    					}

    					return networkResponse;
    				}());
    			},

    			async OLSKServiceWorkerDidReceiveMessage (event) {
    				const OLSKMessageSignature = event.data.OLSKMessageSignature || event.data;

    				if (typeof OLSKMessageSignature !== 'string') {
    					return;
    				}

    				if (!OLSKMessageSignature.startsWith('OLSKServiceWorker_')) {
    					return;
    				}

    				return event.source.postMessage({
    					OLSKMessageSignature,
    					OLSKMessageArguments: event.data.OLSKMessageArguments,
    					OLSKMessageResponse: await mod[OLSKMessageSignature](...[].concat(event.data.OLSKMessageArguments || [])),
    				});
    			},

    			OLSKServiceWorker_ClearVersionCache () {
    				return mod.ControlClearCache();
    			},

    			OLSKServiceWorker_SkipWaiting () {
    				return mod._ValueSelf.skipWaiting();
    			},

    			OLSKServiceWorker_AddPersistenceCacheURL (inputData) {
    				return mod.ControlAddPersistenceCacheURL(inputData);
    			},
    		
    		};
    		
    		return mod;
    	},

    	OLSKServiceWorkerInitialization (param1, param2) {
    		if (typeof param1 !== 'object' || param1 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param1.addEventListener !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'object' || param2 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2.OLSKServiceWorkerDidReceiveMessage !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		param1.addEventListener('activate', param2.OLSKServiceWorkerDidActivate);
    		param1.addEventListener('fetch', param2.OLSKServiceWorkerDidFetch);
    		param1.addEventListener('message', param2.OLSKServiceWorkerDidReceiveMessage);
    	},

    	OLSKServiceWorkerViewTemplate () {
    		return `(function() {
			const mod = (function ${ main.OLSKServiceWorkerModule.toString() })(self, caches, fetch, true);

			(function ${ main.OLSKServiceWorkerInitialization.toString() })(self, mod);
		})();`;
    	},

    	OLSKServiceWorkerView (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof inputData.VERSION_ID_TOKEN !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!inputData.VERSION_ID_TOKEN) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (inputData.VERSION_ID_TOKEN.match(/\s/)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof inputData.ORIGIN_PAGE_PATH_TOKEN !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!inputData.ORIGIN_PAGE_PATH_TOKEN) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return main.OLSKServiceWorkerViewTemplate()
    			.split('VERSION_ID_TOKEN').join(inputData.VERSION_ID_TOKEN)
    			.split('ORIGIN_PAGE_PATH_TOKEN').join(inputData.ORIGIN_PAGE_PATH_TOKEN);
    	},

    	OLSKServiceWorkerLauncherFakeItemProxy () {
    		return {
    			LCHRecipeName: 'OLSKServiceWorkerLauncherFakeItemProxy',
    			LCHRecipeCallback () {},
    		};
    	},

    	OLSKServiceWorkerLauncherItemReload (param1, OLSKLocalized) {
    		if (!param1.location) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKServiceWorkerLauncherItemReload',
    			LCHRecipeName: OLSKLocalized('OLSKServiceWorkerLauncherItemReloadText'),
    			LCHRecipeCallback () {
    				return param1.location.reload();
    			},
    		};
    	},

    	OLSKServiceWorkerLauncherItemDebugForceUpdate (param1, param2, OLSKLocalized) {
    		if (!param1.location) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!param2.serviceWorker) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKServiceWorkerLauncherItemDebugForceUpdate',
    			LCHRecipeName: OLSKLocalized('OLSKServiceWorkerLauncherItemDebugForceUpdateText'),
    			async LCHRecipeCallback () {
    				const item = await param2.serviceWorker.getRegistration();

    				if (item.waiting) {
    					return item.waiting.postMessage('OLSKServiceWorker_SkipWaiting');
    				}

    				param2.serviceWorker.controller.postMessage('OLSKServiceWorker_ClearVersionCache');

    				param1.location.reload();
    			},
    		};
    	},

    	OLSKServiceWorkerRecipes (param1, param2, param3, param4) {
    		if (!param1.location) {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (!param2.serviceWorker) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param3 !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param4 !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			main.OLSKServiceWorkerLauncherFakeItemProxy(),
    			main.OLSKServiceWorkerLauncherItemReload(param1, param3),
    			main.OLSKServiceWorkerLauncherItemDebugForceUpdate(param1, param2, param3),
    		].filter(function (e) {
    			if (param4) {
    				return true;
    			}

    			return !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);
    		});
    	},
    	
    };

    Object.assign(exports, main);
    });

    var remotestorage = createCommonjsModule(function (module, exports) {
    /*! remotestorage.js 1.2.3, https://remotestorage.io, MIT licensed */
    !function(e,t){module.exports=t();}(commonjsGlobal,(function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n});},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0});},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=17)}([function(e,t,r){(function(t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o={logError:function(e){"string"==typeof e?console.error(e):console.error(e.message,e.stack);},globalContext:"undefined"!=typeof window?window:"object"===("undefined"==typeof self?"undefined":n(self))?self:t,getGlobalContext:function(){return "undefined"!=typeof window?window:"object"===("undefined"==typeof self?"undefined":n(self))?self:t},extend:function(e){var t=Array.prototype.slice.call(arguments,1);return t.forEach((function(t){for(var r in t)e[r]=t[r];})),e},containingFolder:function(e){if(""===e)return "/";if(!e)throw"Path not given!";return e.replace(/\/+/g,"/").replace(/[^\/]+\/?$/,"")},isFolder:function(e){return "/"===e.substr(-1)},isDocument:function(e){return !o.isFolder(e)},baseName:function(e){var t=e.split("/");return o.isFolder(e)?t[t.length-2]+"/":t[t.length-1]},cleanPath:function(e){return e.replace(/\/+/g,"/").split("/").map(encodeURIComponent).join("/").replace(/'/g,"%27")},bindAll:function(e){for(var t in this)"function"==typeof e[t]&&(e[t]=e[t].bind(e));},equal:function(e,t,r){var i;if(r=r||[],n(e)!==n(t))return !1;if("number"==typeof e||"boolean"==typeof e||"string"==typeof e)return e===t;if("function"==typeof e)return e.toString()===t.toString();if(e instanceof ArrayBuffer&&t instanceof ArrayBuffer&&(e=new Uint8Array(e),t=new Uint8Array(t)),e instanceof Array){if(e.length!==t.length)return !1;for(var s=0,a=e.length;s<a;s++)if(!o.equal(e[s],t[s],r))return !1}else{for(i in e)if(e.hasOwnProperty(i)&&!(i in t))return !1;for(i in t)if(t.hasOwnProperty(i)){if(!(i in e))return !1;var u;if("object"===n(t[i])){if(r.indexOf(t[i])>=0)continue;(u=r.slice()).push(t[i]);}if(!o.equal(e[i],t[i],u))return !1}}return !0},deepClone:function(e){var t;return void 0===e?void 0:(function e(t,r){var o,i;if("object"===n(t)&&!Array.isArray(t)&&null!==t)for(o in t)"object"===n(t[o])&&null!==t[o]&&("[object ArrayBuffer]"===t[o].toString()?(r[o]=new ArrayBuffer(t[o].byteLength),i=new Int8Array(t[o]),new Int8Array(r[o]).set(i)):e(t[o],r[o]));}(e,t=JSON.parse(JSON.stringify(e))),t)},pathsFromRoot:function(e){for(var t=[e],r=e.replace(/\/$/,"").split("/");r.length>1;)r.pop(),t.push(r.join("/")+"/");return t},localStorageAvailable:function(){var e=o.getGlobalContext();if(!("localStorage"in e))return !1;try{return e.localStorage.setItem("rs-check",1),e.localStorage.removeItem("rs-check"),!0}catch(e){return !1}},getJSONFromLocalStorage:function(e){var t=o.getGlobalContext();try{return JSON.parse(t.localStorage.getItem(e))}catch(e){}},shouldBeTreatedAsBinary:function(e,t){return t&&t.match(/charset=binary/)||/[\x00-\x08\x0E-\x1F\uFFFD]/.test(e)},getTextFromArrayBuffer:function(e,n){return new Promise((function(i){if("undefined"==typeof Blob){var s=new r(new Uint8Array(e));i(s.toString(n));}else{var a;if(o.globalContext.BlobBuilder=o.globalContext.BlobBuilder||o.globalContext.WebKitBlobBuilder,void 0!==o.globalContext.BlobBuilder){var u=new t.BlobBuilder;u.append(e),a=u.getBlob();}else a=new Blob([e]);var c=new FileReader;"function"==typeof c.addEventListener?c.addEventListener("loadend",(function(e){i(e.target.result);})):c.onloadend=function(e){i(e.target.result);},c.readAsText(a,n);}}))}};e.exports=o;}).call(this,r(10),r(18).Buffer);},function(e,t,r){var n=r(3);e.exports=function(){n.logging&&console.log.apply(console,arguments);};},function(e,t,r){var n=r(1),o={addEventListener:function(e,t){if("string"!=typeof e)throw new Error("Argument eventName should be a string");if("function"!=typeof t)throw new Error("Argument handler should be a function");n("[Eventhandling] Adding event listener",e),this._validateEvent(e),this._handlers[e].push(t);},removeEventListener:function(e,t){this._validateEvent(e);for(var r=this._handlers[e].length,n=0;n<r;n++)if(this._handlers[e][n]===t)return void this._handlers[e].splice(n,1)},_emit:function(e){this._validateEvent(e);var t=Array.prototype.slice.call(arguments,1);this._handlers[e].slice().forEach((function(e){e.apply(this,t);}));},_validateEvent:function(e){if(!(e in this._handlers))throw new Error("Unknown event: "+e)},_delegateEvent:function(e,t){t.on(e,function(t){this._emit(e,t);}.bind(this));},_addEvent:function(e){this._handlers[e]=[];}};o.on=o.addEventListener,o.off=o.removeEventListener,e.exports=function(e){var t=Array.prototype.slice.call(arguments,1);for(var r in o)e[r]=o[r];e._handlers={},t.forEach((function(t){e._addEvent(t);}));};},function(e,t){var r={cache:!0,changeEvents:{local:!0,window:!1,remote:!0,conflict:!0},cordovaRedirectUri:void 0,logging:!1,modules:[],backgroundSyncInterval:6e4,disableFeatures:[],discoveryTimeout:1e4,isBackground:!1,requestTimeout:3e4,syncInterval:1e4};e.exports=r;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(1),i=r(0);function s(e){var t,r=e||u.getLocation().href,n=r.indexOf("#");if(-1!==n&&-1!==(t=r.substring(n+1)).indexOf("="))return t.split("&").reduce((function(e,t){var r=t.split("=");if("state"===r[0]&&r[1].match(/rsDiscovery/)){var n=decodeURIComponent(r[1]),o=n.substr(n.indexOf("rsDiscovery=")).split("&")[0].split("=")[1];e.rsDiscovery=JSON.parse(atob(o)),(n=n.replace(new RegExp("&?rsDiscovery="+o),"")).length>0&&(e.state=n);}else e[decodeURIComponent(r[0])]=decodeURIComponent(r[1]);return e}),{})}var a,u=function e(t,r){var n=r.authURL,s=r.scope,a=r.redirectUri,u=r.clientId;if(o("[Authorize] authURL = ",n,"scope = ",s,"redirectUri = ",a,"clientId = ",u),!i.localStorageAvailable()&&"remotestorage"===t.backend){a+=a.indexOf("#")>0?"&":"#";var c={userAddress:t.remote.userAddress,href:t.remote.href,storageApi:t.remote.storageApi,properties:t.remote.properties};a+="rsDiscovery="+btoa(JSON.stringify(c));}var l=function(e,t,r,n){var o=t.indexOf("#"),i=e;return i+=e.indexOf("?")>0?"&":"?",i+="redirect_uri="+encodeURIComponent(t.replace(/#.*$/,"")),i+="&scope="+encodeURIComponent(r),i+="&client_id="+encodeURIComponent(n),-1!==o&&o+1!==t.length&&(i+="&state="+encodeURIComponent(t.substring(o+1))),i+="&response_type=token"}(n,a,s,u);if(i.globalContext.cordova)return e.openWindow(l,a,"location=yes,clearsessioncache=yes,clearcache=yes").then((function(e){t.remote.configure({token:e.access_token});}));e.setLocation(l);};u.IMPLIED_FAKE_TOKEN=!1,u.Unauthorized=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.name="Unauthorized",this.message=void 0===e?"App authorization expired or revoked.":e,void 0!==t.code&&(this.code=t.code),this.stack=(new Error).stack;},u.Unauthorized.prototype=Object.create(Error.prototype),u.Unauthorized.prototype.constructor=u.Unauthorized,u.getLocation=function(){return document.location},u.setLocation=function(e){if("string"==typeof e)document.location.href=e;else{if("object"!==n(e))throw"Invalid location "+e;document.location=e;}},u.openWindow=function(e,t,r){return new Promise((function(n,o){var i=open(e,"_blank",r);if(!i||i.closed)return o("Authorization popup was blocked");var a=function(){return o("Authorization was canceled")};i.addEventListener("loadstart",(function(e){if(0===e.url.indexOf(t)){i.removeEventListener("exit",a),i.close();var r=s(e.url);return r?n(r):o("Authorization error")}})),i.addEventListener("exit",a);}))},u._rs_supported=function(){return "undefined"!=typeof document},u._rs_init=function(e){a=function(){var n=!1;if(r){if(r.error)throw"access_denied"===r.error?new u.Unauthorized("Authorization failed: access denied",{code:"access_denied"}):new u.Unauthorized("Authorization failed: ".concat(r.error));r.rsDiscovery&&e.remote.configure(r.rsDiscovery),r.access_token&&(e.remote.configure({token:r.access_token}),n=!0),r.remotestorage&&(e.connect(r.remotestorage),n=!0),r.state&&(t=u.getLocation(),u.setLocation(t.href.split("#")[0]+"#"+r.state));}n||e.remote.stopWaitingForToken();};var t,r=s();r.access_token&&((t=u.getLocation()).hash=""),e.on("features-loaded",a);},u._rs_cleanup=function(e){e.removeEventListener("features-loaded",a);},e.exports=u;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(2),i=r(0),s=r(3),a=r(22),u=r(23),c=u.SchemaNotFound,l=function(e,t){if("/"!==t[t.length-1])throw"Not a folder: "+t;"/"===t&&(this.makePath=function(e){return ("/"===e[0]?"":"/")+e}),this.storage=e,this.base=t;var r=this.base.split("/");r.length>2?this.moduleName=r[1]:this.moduleName="root",o(this,"change"),this.on=this.on.bind(this),e.onChange(this.base,this._fireChange.bind(this));};l.Types=u,l.prototype={scope:function(e){return new l(this.storage,this.makePath(e))},getListing:function(e,t){if("string"!=typeof e)e="";else if(e.length>0&&"/"!==e[e.length-1])return Promise.reject("Not a folder: "+e);return this.storage.get(this.makePath(e),t).then((function(e){return 404===e.statusCode?{}:e.body}))},getAll:function(e,t){if("string"!=typeof e)e="";else if(e.length>0&&"/"!==e[e.length-1])return Promise.reject("Not a folder: "+e);return this.storage.get(this.makePath(e),t).then(function(r){if(404===r.statusCode)return {};if("object"===n(r.body)){var o=Object.keys(r.body);if(0===o.length)return {};var i=o.map(function(o){return this.storage.get(this.makePath(e+o),t).then((function(e){if("string"==typeof e.body)try{e.body=JSON.parse(e.body);}catch(e){}"object"===n(e.body)&&(r.body[o]=e.body);}))}.bind(this));return Promise.all(i).then((function(){return r.body}))}}.bind(this))},getFile:function(e,t){return "string"!=typeof e?Promise.reject("Argument 'path' of baseClient.getFile must be a string"):this.storage.get(this.makePath(e),t).then((function(e){return {data:e.body,contentType:e.contentType,revision:e.revision}}))},storeFile:function(e,t,r){return "string"!=typeof e?Promise.reject("Argument 'mimeType' of baseClient.storeFile must be a string"):"string"!=typeof t?Promise.reject("Argument 'path' of baseClient.storeFile must be a string"):"string"!=typeof r&&"object"!==n(r)?Promise.reject("Argument 'body' of baseClient.storeFile must be a string, ArrayBuffer, or ArrayBufferView"):(this.storage.access.checkPathPermission(this.makePath(t),"rw")||console.warn("WARNING: Editing a document to which only read access ('r') was claimed"),this.storage.put(this.makePath(t),r,e).then(function(e){return 200===e.statusCode||201===e.statusCode?e.revision:Promise.reject("Request (PUT "+this.makePath(t)+") failed with status: "+e.statusCode)}.bind(this)))},getObject:function(e,t){return "string"!=typeof e?Promise.reject("Argument 'path' of baseClient.getObject must be a string"):this.storage.get(this.makePath(e),t).then(function(t){if("object"===n(t.body))return t.body;if("string"==typeof t.body)try{return JSON.parse(t.body)}catch(t){throw"Not valid JSON: "+this.makePath(e)}else if(void 0!==t.body&&200===t.statusCode)return Promise.reject("Not an object: "+this.makePath(e))}.bind(this))},storeObject:function(e,t,r){if("string"!=typeof e)return Promise.reject("Argument 'typeAlias' of baseClient.storeObject must be a string");if("string"!=typeof t)return Promise.reject("Argument 'path' of baseClient.storeObject must be a string");if("object"!==n(r))return Promise.reject("Argument 'object' of baseClient.storeObject must be an object");this._attachType(r,e);try{var o=this.validate(r);if(!o.valid)return Promise.reject(o)}catch(e){return Promise.reject(e)}return this.storage.put(this.makePath(t),JSON.stringify(r),"application/json; charset=UTF-8").then(function(e){return 200===e.statusCode||201===e.statusCode?e.revision:Promise.reject("Request (PUT "+this.makePath(t)+") failed with status: "+e.statusCode)}.bind(this))},remove:function(e){return "string"!=typeof e?Promise.reject("Argument 'path' of baseClient.remove must be a string"):(this.storage.access.checkPathPermission(this.makePath(e),"rw")||console.warn("WARNING: Removing a document to which only read access ('r') was claimed"),this.storage.delete(this.makePath(e)))},getItemURL:function(e){if("string"!=typeof e)throw"Argument 'path' of baseClient.getItemURL must be a string";return this.storage.connected?(e=this._cleanPath(this.makePath(e)),this.storage.remote.href+e):void 0},cache:function(e,t){if("string"!=typeof e)throw"Argument 'path' of baseClient.cache must be a string";if(void 0===t)t="ALL";else if("string"!=typeof t)throw"Argument 'strategy' of baseClient.cache must be a string or undefined";if("FLUSH"!==t&&"SEEN"!==t&&"ALL"!==t)throw'Argument \'strategy\' of baseclient.cache must be one of ["FLUSH", "SEEN", "ALL"]';return this.storage.caching.set(this.makePath(e),t),this},flush:function(e){return this.storage.local.flush(e)},declareType:function(e,t,r){r||(r=t,t=this._defaultTypeURI(e)),l.Types.declare(this.moduleName,e,t,r);},validate:function(e){var t=l.Types.getSchema(e["@context"]);if(t)return a.validateResult(e,t);throw new c(e["@context"])},schemas:{configurable:!0,get:function(){return l.Types.inScope(this.moduleName)}},_defaultTypeURI:function(e){return "http://remotestorage.io/spec/modules/"+encodeURIComponent(this.moduleName)+"/"+encodeURIComponent(e)},_attachType:function(e,t){e["@context"]=l.Types.resolveAlias(this.moduleName+"/"+t)||this._defaultTypeURI(t);},makePath:function(e){return this.base+(e||"")},_fireChange:function(e){s.changeEvents[e.origin]&&(["new","old","lastCommon"].forEach((function(t){if((!e[t+"ContentType"]||/^application\/(.*)json(.*)/.exec(e[t+"ContentType"]))&&"string"==typeof e[t+"Value"])try{e[t+"Value"]=JSON.parse(e[t+"Value"]);}catch(e){}})),this._emit("change",e));},_cleanPath:i.cleanPath},l._rs_init=function(){},e.exports=l;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i,s=r(1),a=r(0),u=r(2),c=r(4),l=r(3),h="remotestorage:wireclient",f={"draft-dejong-remotestorage-00":2,"draft-dejong-remotestorage-01":3,"draft-dejong-remotestorage-02":4,"https://www.w3.org/community/rww/wiki/read-write-web-00#simple":1};if("function"==typeof ArrayBufferView)i=function(e){return e&&e instanceof ArrayBufferView};else{var d=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];i=function(e){for(var t=0;t<8;t++)if(e instanceof d[t])return !0;return !1};}var p=a.isFolder,m=a.cleanPath,y=a.shouldBeTreatedAsBinary,g=a.getJSONFromLocalStorage,v=a.getTextFromArrayBuffer;function b(e){return "string"!=typeof e?e:"*"===e?"*":'"'+e+'"'}function _(e){return "string"!=typeof e?e:e.replace(/^["']|["']$/g,"")}var w=function(e){if(this.rs=e,this.connected=!1,u(this,"connected","not-connected"),o){var t=g(h);t&&setTimeout(function(){this.configure(t);}.bind(this),0);}this._revisionCache={},this.connected&&setTimeout(this._emit.bind(this),0,"connected");};w.prototype={_request:function(e,t,r,n,o,i,a){if(("PUT"===e||"DELETE"===e)&&"/"===t[t.length-1])return Promise.reject("Don't "+e+" on directories!");var u,l=this;return r!==c.IMPLIED_FAKE_TOKEN&&(n.Authorization="Bearer "+r),this.rs._emit("wire-busy",{method:e,isFolder:p(t)}),w.request(e,t,{body:o,headers:n,responseType:"arraybuffer"}).then((function(r){if(l.online||(l.online=!0,l.rs._emit("network-online")),l.rs._emit("wire-done",{method:e,isFolder:p(t),success:!0}),o=r.status,[401,403,404,412].indexOf(o)>=0)return s("[WireClient] Error response status",r.status),u=i?_(r.getResponseHeader("ETag")):void 0,401===r.status&&l.rs._emit("error",new c.Unauthorized),Promise.resolve({statusCode:r.status,revision:u});if(function(e){return [201,204,304].indexOf(e)>=0}(r.status)||200===r.status&&"GET"!==e)return u=_(r.getResponseHeader("ETag")),s("[WireClient] Successful request",u),Promise.resolve({statusCode:r.status,revision:u});var n=r.getResponseHeader("Content-Type");u=i?_(r.getResponseHeader("ETag")):200===r.status?a:void 0;var o,h=function(e){var t,r="UTF-8";return e&&(t=e.match(/charset=(.+)$/))&&(r=t[1]),r}(n);return y(r.response,n)?(s("[WireClient] Successful request with unknown or binary mime-type",u),Promise.resolve({statusCode:r.status,body:r.response,contentType:n,revision:u})):v(r.response,h).then((function(e){return s("[WireClient] Successful request",u),Promise.resolve({statusCode:r.status,body:e,contentType:n,revision:u})}))}),(function(r){return l.online&&(l.online=!1,l.rs._emit("network-offline")),l.rs._emit("wire-done",{method:e,isFolder:p(t),success:!1}),Promise.reject(r)}))},configure:function(e){if("object"!==n(e))throw new Error("WireClient configure settings parameter should be an object");void 0!==e.userAddress&&(this.userAddress=e.userAddress),void 0!==e.href&&(this.href=e.href),void 0!==e.storageApi&&(this.storageApi=e.storageApi),void 0!==e.token&&(this.token=e.token),void 0!==e.properties&&(this.properties=e.properties),void 0!==this.storageApi&&(this._storageApi=f[this.storageApi]||5,this.supportsRevs=this._storageApi>=2),this.href&&this.token?(this.connected=!0,this.online=!0,this._emit("connected")):this.connected=!1,o&&(localStorage[h]=JSON.stringify({userAddress:this.userAddress,href:this.href,storageApi:this.storageApi,token:this.token,properties:this.properties}));},stopWaitingForToken:function(){this.connected||this._emit("not-connected");},get:function(e,t){var r=this;if(!this.connected)return Promise.reject("not connected (path: "+e+")");t||(t={});var o={};return this.supportsRevs&&t.ifNoneMatch&&(o["If-None-Match"]=b(t.ifNoneMatch)),this._request("GET",this.href+m(e),this.token,o,void 0,this.supportsRevs,this._revisionCache[e]).then((function(t){if(!p(e))return Promise.resolve(t);var o,i={};if(void 0!==t.body)try{t.body=JSON.parse(t.body);}catch(t){return Promise.reject("Folder description at "+r.href+m(e)+" is not JSON")}if(200===t.statusCode&&"object"===n(t.body)){if(0===Object.keys(t.body).length)t.statusCode=404;else if("http://remotestorage.io/spec/folder-description"===(o=t.body)["@context"]&&"object"===n(o.items)){for(var s in t.body.items)r._revisionCache[e+s]=t.body.items[s].ETag;i=t.body.items;}else Object.keys(t.body).forEach((function(n){r._revisionCache[e+n]=t.body[n],i[n]={ETag:t.body[n]};}));return t.body=i,Promise.resolve(t)}return Promise.resolve(t)}))},put:function(e,t,r,n){if(!this.connected)return Promise.reject("not connected (path: "+e+")");n||(n={}),!r.match(/charset=/)&&(t instanceof ArrayBuffer||i(t))&&(r+="; charset=binary");var o={"Content-Type":r};return this.supportsRevs&&(n.ifMatch&&(o["If-Match"]=b(n.ifMatch)),n.ifNoneMatch&&(o["If-None-Match"]=b(n.ifNoneMatch))),this._request("PUT",this.href+m(e),this.token,o,t,this.supportsRevs)},delete:function(e,t){if(!this.connected)throw new Error("not connected (path: "+e+")");t||(t={});var r={};return this.supportsRevs&&t.ifMatch&&(r["If-Match"]=b(t.ifMatch)),this._request("DELETE",this.href+m(e),this.token,r,void 0,this.supportsRevs)}},w.isArrayBufferView=i,w.request=function(e,t,r){return "function"==typeof fetch?w._fetchRequest(e,t,r):"function"==typeof XMLHttpRequest?w._xhrRequest(e,t,r):(s("[WireClient] add a polyfill for fetch or XMLHttpRequest"),Promise.reject("[WireClient] add a polyfill for fetch or XMLHttpRequest"))},w._fetchRequest=function(e,t,r){var n,o,i={};"function"==typeof AbortController&&(o=new AbortController);var a=fetch(t,{method:e,headers:r.headers,body:r.body,signal:o?o.signal:void 0}).then((function(e){switch(s("[WireClient fetch]",e),e.headers.forEach((function(e,t){i[t.toUpperCase()]=e;})),n={readyState:4,status:e.status,statusText:e.statusText,response:void 0,getResponseHeader:function(e){return i[e.toUpperCase()]||null},responseType:r.responseType,responseURL:t},r.responseType){case"arraybuffer":return e.arrayBuffer();case"blob":return e.blob();case"json":return e.json();case void 0:case"":case"text":return e.text();default:throw new Error("responseType 'document' is not currently supported using fetch")}})).then((function(e){return n.response=e,r.responseType&&"text"!==r.responseType||(n.responseText=e),n})),u=new Promise((function(e,t){setTimeout((function(){t("timeout"),o&&o.abort();}),l.requestTimeout);}));return Promise.race([a,u])},w._xhrRequest=function(e,t,r){return new Promise((function(o,a){s("[WireClient]",e,t);var u=!1,c=setTimeout((function(){u=!0,a("timeout");}),l.requestTimeout),h=new XMLHttpRequest;if(h.open(e,t,!0),r.responseType&&(h.responseType=r.responseType),r.headers)for(var f in r.headers)h.setRequestHeader(f,r.headers[f]);h.onload=function(){u||(clearTimeout(c),o(h));},h.onerror=function(e){u||(clearTimeout(c),a(e));};var d=r.body;"object"===n(d)&&!i(d)&&d instanceof ArrayBuffer&&(d=new Uint8Array(d)),h.send(d);}))},Object.defineProperty(w.prototype,"storageType",{get:function(){if(this.storageApi){var e=this.storageApi.match(/draft-dejong-(remotestorage-\d\d)/);return e?e[1]:"2012.04"}}}),w._rs_init=function(e){o=a.localStorageAvailable(),e.remote=new w(e),this.online=!0;},w._rs_supported=function(){return "function"==typeof fetch||"function"==typeof XMLHttpRequest},w._rs_cleanup=function(){o&&delete localStorage[h];},e.exports=w;},function(e,t,r){function n(e,t){return !t||"object"!==c(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function o(e){var t="function"==typeof Map?new Map:void 0;return (o=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf("[native code]")))return e;var r;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n);}function n(){return s(e,arguments,u(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),a(n,e)})(e)}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return !1;if(Reflect.construct.sham)return !1;if("function"==typeof Proxy)return !0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return !1}}function s(e,t,r){return (s=i()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&a(o,r.prototype),o}).apply(null,arguments)}function a(e,t){return (a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){return (u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e){return (c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}}var f,d,p=r(0),m=p.isFolder,y=p.isDocument,g=p.equal,v=p.deepClone,b=p.pathsFromRoot,_=r(12),w=r(2),P=r(1),E=r(4),S=r(3);function T(e,t,r){return {action:e,path:t,promise:r}}function A(e,t){return e.common.revision!==t&&(!e.remote||e.remote.revision!==t)}function R(e){return e.common&&e.common.revision}var k=function(){function e(t){var r=this;l(this,e),this.rs=t,this._tasks={},this._running={},this._timeStarted={},this.numThreads=10,this.rs.local.onDiff((function(e){r.addTask(e),r.doTasks();})),this.rs.caching.onActivate((function(e){r.addTask(e),r.doTasks();})),w(this,"done","req-done");}var t,r,n;return t=e,n=[{key:"_rs_init",value:function(t){f=function(){P("[Sync] syncCycleCb calling syncCycle"),_.isBrowser()&&function(e){function t(t){var r,n;r=e.getCurrentSyncInterval(),S.isBackground=!t,n=e.getCurrentSyncInterval(),e._emit("sync-interval-change",{oldValue:r,newValue:n});}_.on("background",(function(){return t(!1)})),_.on("foreground",(function(){return t(!0)}));}(t),t.sync||(t.sync=new e(t),t.syncStopped&&(P("[Sync] Instantiating sync stopped"),t.sync.stopped=!0,delete t.syncStopped)),P("[Sync] syncCycleCb calling syncCycle"),t.syncCycle();},d=function(){t.removeEventListener("connected",d),t.startSync();},t.on("ready",f),t.on("connected",d);}},{key:"_rs_cleanup",value:function(e){e.stopSync(),e.removeEventListener("ready",f),e.removeEventListener("connected",d),e.sync=void 0,delete e.sync;}}],(r=[{key:"now",value:function(){return (new Date).getTime()}},{key:"queueGetRequest",value:function(e){var t=this;return new Promise((function(r,n){t.rs.remote.connected?t.rs.remote.online?(t.addTask(e,function(){this.rs.local.get(e).then((function(e){return r(e)}));}.bind(t)),t.doTasks()):n("cannot fulfill maxAge requirement - remote is not online"):n("cannot fulfill maxAge requirement - remote is not connected");}))}},{key:"corruptServerItemsMap",value:function(e,t){if("object"!==c(e)||Array.isArray(e))return !0;for(var r in e){var n=e[r];if("object"!==c(n))return !0;if("string"!=typeof n.ETag)return !0;if(m(r)){if(-1!==r.substring(0,r.length-1).indexOf("/"))return !0}else{if(-1!==r.indexOf("/"))return !0;if(t){if("string"!=typeof n["Content-Type"])return !0;if("number"!=typeof n["Content-Length"])return !0}}}return !1}},{key:"corruptItemsMap",value:function(e){if("object"!==c(e)||Array.isArray(e))return !0;for(var t in e)if("boolean"!=typeof e[t])return !0;return !1}},{key:"corruptRevision",value:function(e){return "object"!==c(e)||Array.isArray(e)||e.revision&&"string"!=typeof e.revision||e.body&&"string"!=typeof e.body&&"object"!==c(e.body)||e.contentType&&"string"!=typeof e.contentType||e.contentLength&&"number"!=typeof e.contentLength||e.timestamp&&"number"!=typeof e.timestamp||e.itemsMap&&this.corruptItemsMap(e.itemsMap)}},{key:"isCorrupt",value:function(e){return "object"!==c(e)||Array.isArray(e)||"string"!=typeof e.path||this.corruptRevision(e.common)||e.local&&this.corruptRevision(e.local)||e.remote&&this.corruptRevision(e.remote)||e.push&&this.corruptRevision(e.push)}},{key:"hasTasks",value:function(){return Object.getOwnPropertyNames(this._tasks).length>0}},{key:"collectDiffTasks",value:function(){var e=this,t=0;return this.rs.local.forAllNodes((function(r){t>100||(e.isCorrupt(r)?(P("[Sync] WARNING: corrupt node in local cache",r),"object"===c(r)&&r.path&&(e.addTask(r.path),t++)):e.needsFetch(r)&&e.rs.access.checkPathPermission(r.path,"r")?(e.addTask(r.path),t++):y(r.path)&&e.needsPush(r)&&e.rs.access.checkPathPermission(r.path,"rw")&&(e.addTask(r.path),t++));})).then((function(){return t}),(function(e){throw e}))}},{key:"inConflict",value:function(e){return e.local&&e.remote&&(void 0!==e.remote.body||e.remote.itemsMap)}},{key:"needsRefresh",value:function(e){return !!e.common&&(!e.common.timestamp||this.now()-e.common.timestamp>S.syncInterval)}},{key:"needsFetch",value:function(e){return !!this.inConflict(e)||!(!e.common||void 0!==e.common.itemsMap||void 0!==e.common.body)||!(!e.remote||void 0!==e.remote.itemsMap||void 0!==e.remote.body)}},{key:"needsPush",value:function(e){return !this.inConflict(e)&&(!(!e.local||e.push)||void 0)}},{key:"needsRemotePut",value:function(e){return e.local&&e.local.body}},{key:"needsRemoteDelete",value:function(e){return e.local&&!1===e.local.body}},{key:"getParentPath",value:function(e){var t=e.match(/^(.*\/)([^\/]+\/?)$/);if(t)return t[1];throw new Error('Not a valid path: "'+e+'"')}},{key:"deleteChildPathsFromTasks",value:function(){for(var e in this._tasks)for(var t=b(e),r=1;r<t.length;r++)this._tasks[t[r]]&&(Array.isArray(this._tasks[e])&&this._tasks[e].length&&Array.prototype.push.apply(this._tasks[t[r]],this._tasks[e]),delete this._tasks[e]);}},{key:"collectRefreshTasks",value:function(){var e=this;return this.rs.local.forAllNodes((function(t){var r;if(e.needsRefresh(t)){try{r=e.getParentPath(t.path);}catch(e){}r&&e.rs.access.checkPathPermission(r,"r")?e.addTask(r):e.rs.access.checkPathPermission(t.path,"r")&&e.addTask(t.path);}})).then((function(){e.deleteChildPathsFromTasks();}),(function(e){throw e}))}},{key:"flush",value:function(e){for(var t in e)"FLUSH"===this.rs.caching.checkPath(t)&&e[t]&&!e[t].local&&(P("[Sync] Flushing",t),e[t]=void 0);return e}},{key:"doTask",value:function(e){var t=this;return this.rs.local.getNodes([e]).then((function(r){var n=r[e];return void 0===n?T("get",e,t.rs.remote.get(e)):function(e){return e.remote&&e.remote.revision&&!e.remote.itemsMap&&!e.remote.body}(n)?T("get",e,t.rs.remote.get(e)):t.needsRemotePut(n)?(n.push=v(n.local),n.push.timestamp=t.now(),t.rs.local.setNodes(t.flush(r)).then((function(){var r;return r=R(n)?{ifMatch:n.common.revision}:{ifNoneMatch:"*"},T("put",e,t.rs.remote.put(e,n.push.body,n.push.contentType,r))}))):t.needsRemoteDelete(n)?(n.push={body:!1,timestamp:t.now()},t.rs.local.setNodes(t.flush(r)).then((function(){return R(n)?T("delete",e,t.rs.remote.delete(e,{ifMatch:n.common.revision})):T("get",e,t.rs.remote.get(e))}))):R(n)?T("get",e,t.rs.remote.get(e,{ifNoneMatch:n.common.revision})):T("get",e,t.rs.remote.get(e))}))}},{key:"autoMergeFolder",value:function(e){if(e.remote.itemsMap&&(e.common=e.remote,delete e.remote,e.common.itemsMap)){for(var t in e.common.itemsMap)e.local.itemsMap[t]||(e.local.itemsMap[t]=!1);g(e.local.itemsMap,e.common.itemsMap)&&delete e.local;}return e}},{key:"autoMergeDocument",value:function(e){return function(e){return (!e.remote||!e.remote.revision||e.remote.revision===e.common.revision)&&(void 0===e.common.body&&!1===e.remote.body||e.remote.body===e.common.body&&e.remote.contentType===e.common.contentType)}(e)?delete(e=function(e){return e.remote&&!1===e.remote.body&&e.local&&!1===e.local.body&&delete e.local,e}(e)).remote:void 0!==e.remote.body&&(P("[Sync] Emitting keep/revert"),this.rs.local._emitChange({origin:"conflict",path:e.path,oldValue:e.local.body,newValue:e.remote.body,lastCommonValue:e.common.body,oldContentType:e.local.contentType,newContentType:e.remote.contentType,lastCommonContentType:e.common.contentType}),e.remote.body?e.common=e.remote:e.common={},delete e.remote,delete e.local),e}},{key:"autoMerge",value:function(e){if(e.remote){if(e.local)return m(e.path)?this.autoMergeFolder(e):this.autoMergeDocument(e);if(m(e.path))void 0!==e.remote.itemsMap&&(e.common=e.remote,delete e.remote);else if(void 0!==e.remote.body){var t={origin:"remote",path:e.path,oldValue:!1===e.common.body?void 0:e.common.body,newValue:!1===e.remote.body?void 0:e.remote.body,oldContentType:e.common.contentType,newContentType:e.remote.contentType};if((t.oldValue||t.newValue)&&this.rs.local._emitChange(t),!e.remote.body)return;e.common=e.remote,delete e.remote;}return e}e.common.body&&this.rs.local._emitChange({origin:"remote",path:e.path,oldValue:e.common.body,newValue:void 0,oldContentType:e.common.contentType,newContentType:void 0});}},{key:"updateCommonTimestamp",value:function(e,t){var r=this;return this.rs.local.getNodes([e]).then((function(n){return n[e]&&n[e].common&&n[e].common.revision===t&&(n[e].common.timestamp=r.now()),r.rs.local.setNodes(r.flush(n))}))}},{key:"markChildren",value:function(e,t,r,n){var o=this,i=[],s={},a={};for(var u in t)i.push(e+u),s[e+u]=t[u];for(var c in n)i.push(e+c);return this.rs.local.getNodes(i).then((function(t){var i;for(var u in t)if(i=t[u],s[u])i&&i.common?A(i,s[u].ETag)&&(r[u]=v(i),r[u].remote={revision:s[u].ETag,timestamp:o.now()},r[u]=o.autoMerge(r[u])):"ALL"===o.rs.caching.checkPath(u)&&(r[u]={path:u,common:{timestamp:o.now()},remote:{revision:s[u].ETag,timestamp:o.now()}}),r[u]&&s[u]["Content-Type"]&&(r[u].remote.contentType=s[u]["Content-Type"]),r[u]&&s[u]["Content-Length"]&&(r[u].remote.contentLength=s[u]["Content-Length"]);else if(n[u.substring(e.length)]&&i&&i.common){if(i.common.itemsMap)for(var c in i.common.itemsMap)a[u+c]=!0;if(i.local&&i.local.itemsMap)for(var l in i.local.itemsMap)a[u+l]=!0;if(i.remote||m(u))r[u]=void 0;else if(r[u]=o.autoMerge(i),void 0===r[u]){var h=o.getParentPath(u),f=r[h],d=u.substring(e.length);f&&f.local&&(delete f.local.itemsMap[d],g(f.local.itemsMap,f.common.itemsMap)&&delete f.local);}}return o.deleteRemoteTrees(Object.keys(a),r).then((function(e){return o.rs.local.setNodes(o.flush(e))}))}))}},{key:"deleteRemoteTrees",value:function(e,t){var r=this;return 0===e.length?Promise.resolve(t):this.rs.local.getNodes(e).then((function(e){var n={},o=function(e,t){if(e&&e.itemsMap)for(var r in e.itemsMap)n[t+r]=!0;};for(var i in e){var s=e[i];s&&(m(i)?(o(s.common,i),o(s.local,i)):s.common&&void 0!==s.common.body&&(t[i]=v(s),t[i].remote={body:!1,timestamp:r.now()},t[i]=r.autoMerge(t[i])));}return r.deleteRemoteTrees(Object.keys(n),t).then((function(e){return r.rs.local.setNodes(r.flush(e))}))}))}},{key:"completeFetch",value:function(e,t,r,n){var o,i,s=this,a=b(e);return m(e)?o=[e]:(i=a[1],o=[e,i]),this.rs.local.getNodes(o).then((function(o){var a,u,l={},h=o[e],f=function(e){if(e&&e.itemsMap)for(a in e.itemsMap)t[a]||(l[a]=!0);};if("object"===c(h)&&h.path===e&&"object"===c(h.common)||(h={path:e,common:{}},o[e]=h),h.remote={revision:n,timestamp:s.now()},m(e))for(a in f(h.common),f(h.remote),h.remote.itemsMap={},t)h.remote.itemsMap[a]=!0;else h.remote.body=t,h.remote.contentType=r,(u=o[i])&&u.local&&u.local.itemsMap&&(a=e.substring(i.length),u.local.itemsMap[a]=!0,g(u.local.itemsMap,u.common.itemsMap)&&delete u.local);return o[e]=s.autoMerge(h),{toBeSaved:o,missingChildren:l}}))}},{key:"completePush",value:function(e,t,r,n){var o=this;return this.rs.local.getNodes([e]).then((function(i){var s=i[e];if(!s.push)throw o.stopped=!0,new Error("completePush called but no push version!");return r?(P("[Sync] We have a conflict"),s.remote&&s.remote.revision===n||(s.remote={revision:n||"conflict",timestamp:o.now()},delete s.push),i[e]=o.autoMerge(s)):(s.common={revision:n,timestamp:o.now()},"put"===t?(s.common.body=s.push.body,s.common.contentType=s.push.contentType,g(s.local.body,s.push.body)&&s.local.contentType===s.push.contentType&&delete s.local,delete s.push):"delete"===t&&(!1===s.local.body?i[e]=void 0:delete s.push)),o.rs.local.setNodes(o.flush(i))}))}},{key:"dealWithFailure",value:function(e){var t=this;return this.rs.local.getNodes([e]).then((function(r){if(r[e])return delete r[e].push,t.rs.local.setNodes(t.flush(r))}))}},{key:"interpretStatus",value:function(e){var t={statusCode:e,successful:void 0,conflict:void 0,unAuth:void 0,notFound:void 0,changed:void 0,networkProblems:void 0};if("offline"===e||"timeout"===e)return t.successful=!1,t.networkProblems=!0,t;var r=Math.floor(e/100);return t.successful=2===r||304===e||412===e||404===e,t.conflict=412===e,t.unAuth=401===e&&this.rs.remote.token!==E.IMPLIED_FAKE_TOKEN||402===e||403===e,t.notFound=404===e,t.changed=304!==e,t}},{key:"handleGetResponse",value:function(e,t,r,n,o){var i=this;return t.notFound&&(r=!!m(e)&&{}),t.changed?this.completeFetch(e,r,n,o).then((function(t){return m(e)?i.corruptServerItemsMap(r)?(P("[Sync] WARNING: Discarding corrupt folder description from server for "+e),!1):i.markChildren(e,r,t.toBeSaved,t.missingChildren).then((function(){return !0})):i.rs.local.setNodes(i.flush(t.toBeSaved)).then((function(){return !0}))})):this.updateCommonTimestamp(e,o).then((function(){return !0}))}},{key:"handleResponse",value:function(t,r,n){var o,i=this,s=this.interpretStatus(n.statusCode);if(s.successful){if("get"===r)return this.handleGetResponse(t,s,n.body,n.contentType,n.revision);if("put"===r||"delete"===r)return this.completePush(t,r,s.conflict,n.revision).then((function(){return !0}));throw new Error("cannot handle response for unknown action ".concat(r))}return o=s.unAuth?new E.Unauthorized:s.networkProblems?new e.SyncError("Network request failed."):new Error("HTTP response code "+s.statusCode+" received."),this.dealWithFailure(t).then((function(){throw i.rs._emit("error",o),o}))}},{key:"finishTask",value:function(e){var t=this;if(void 0!==e.action)return e.promise.then((function(r){return t.handleResponse(e.path,e.action,r)}),(function(r){return P("[Sync] wireclient rejects its promise!",e.path,e.action,r),t.handleResponse(e.path,e.action,{statusCode:"offline"})})).then((function(r){if(delete t._timeStarted[e.path],delete t._running[e.path],r&&t._tasks[e.path]){for(var n=0;n<t._tasks[e.path].length;n++)t._tasks[e.path][n]();delete t._tasks[e.path];}t.rs._emit("sync-req-done"),t.collectTasks(!1).then((function(){!t.hasTasks()||t.stopped?(P("[Sync] Sync is done! Reschedule?",Object.getOwnPropertyNames(t._tasks).length,t.stopped),t.done||(t.done=!0,t.rs._emit("sync-done"))):setTimeout((function(){t.doTasks();}),10);}));}),(function(r){P("[Sync] Error",r),delete t._timeStarted[e.path],delete t._running[e.path],t.rs._emit("sync-req-done"),t.done||(t.done=!0,t.rs._emit("sync-done"));}));delete this._running[e.path];}},{key:"doTasks",value:function(){var e,t,r=0;if((e=(this.rs.remote.connected?this.rs.remote.online?this.numThreads:1:0)-Object.getOwnPropertyNames(this._running).length)<=0)return !0;for(t in this._tasks)if(!this._running[t]&&(this._timeStarted[t]=this.now(),this._running[t]=this.doTask(t),this._running[t].then(this.finishTask.bind(this)),++r>=e))return !0;return r>=e}},{key:"collectTasks",value:function(e){var t=this;return this.hasTasks()||this.stopped?Promise.resolve():this.collectDiffTasks().then((function(r){return r||!1===e?Promise.resolve():t.collectRefreshTasks()}),(function(e){throw e}))}},{key:"addTask",value:function(e,t){this._tasks[e]||(this._tasks[e]=[]),"function"==typeof t&&this._tasks[e].push(t);}},{key:"sync",value:function(){var e=this;return this.done=!1,this.doTasks()?Promise.resolve():this.collectTasks().then((function(){try{e.doTasks();}catch(e){P("[Sync] doTasks error",e);}}),(function(e){throw P("[Sync] Sync error",e),new Error("Local cache unavailable")}))}}])&&h(t.prototype,r),n&&h(t,n),e}();k.SyncError=function(e){function t(e){var r;l(this,t),(r=n(this,u(t).call(this))).name="SyncError";var o="Sync failed: ";return "object"===c(e)&&"message"in e?(o+=e.message,r.stack=e.stack,r.originalError=e):o+=e,r.message=o,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&a(e,t);}(t,e),t}(o(Error)),e.exports=k;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(0),i=r(3),s=r(1),a=o.isFolder,u=o.isDocument,c=o.deepClone;function l(e){if("object"===n(e)&&"string"==typeof e.path)if(a(e.path)){if(e.local&&e.local.itemsMap)return e.local;if(e.common&&e.common.itemsMap)return e.common}else{if(e.local){if(e.local.body&&e.local.contentType)return e.local;if(!1===e.local.body)return}if(e.common&&e.common.body&&e.common.contentType)return e.common;if(e.body&&e.contentType)return {body:e.body,contentType:e.contentType}}}function h(e,t){var r;for(r in e){if(e[r]&&e[r].remote)return !0;var n=l(e[r]);if(n&&n.timestamp&&(new Date).getTime()-n.timestamp<=t)return !1;if(!n)return !0}return !0}var f=o.pathsFromRoot;function d(e){var t={path:e,common:{}};return a(e)&&(t.common.itemsMap={}),t}function p(e,t){return e.common||(e.common={itemsMap:{}}),e.common.itemsMap||(e.common.itemsMap={}),e.local||(e.local=c(e.common)),e.local.itemsMap||(e.local.itemsMap=e.common.itemsMap),e.local.itemsMap[t]=!0,e}var m={get:function(e,t,r){return "number"==typeof t?this.getNodes(f(e)).then((function(n){var o=l(n[e]);return h(n,t)?r(e):o?{statusCode:200,body:o.body||o.itemsMap,contentType:o.contentType}:{statusCode:404}})):this.getNodes([e]).then((function(t){var r=l(t[e]);if(r){if(a(e))for(var n in r.itemsMap)r.itemsMap.hasOwnProperty(n)&&!1===r.itemsMap[n]&&delete r.itemsMap[n];return {statusCode:200,body:r.body||r.itemsMap,contentType:r.contentType}}return {statusCode:404}}))},put:function(e,t,r){var n=f(e);return this._updateNodes(n,(function(e,n){try{for(var o=0,i=e.length;o<i;o++){var a=e[o],u=n[a],c=void 0;if(u||(n[a]=u=d(a)),0===o)c=l(u),u.local={body:t,contentType:r,previousBody:c?c.body:void 0,previousContentType:c?c.contentType:void 0};else u=p(u,e[o-1].substring(a.length));}return n}catch(e){throw s("[Cachinglayer] Error during PUT",n,e),e}}))},delete:function(e){var t=f(e);return this._updateNodes(t,(function(e,t){for(var r=0,n=e.length;r<n;r++){var o=e[r],i=t[o],s=void 0;if(i)if(0===r)s=l(i),i.local={body:!1,previousBody:s?s.body:void 0,previousContentType:s?s.contentType:void 0};else{i.local||(i.local=c(i.common));var a=e[r-1].substring(o.length);if(delete i.local.itemsMap[a],Object.getOwnPropertyNames(i.local.itemsMap).length>0)break}else console.error("Cannot delete non-existing node "+o);}return t}))},flush:function(e){var t=this;return t._getAllDescendentPaths(e).then((function(e){return t.getNodes(e)})).then((function(e){for(var r in e){var n=e[r];n&&n.common&&n.local&&t._emitChange({path:n.path,origin:"local",oldValue:!1===n.local.body?void 0:n.local.body,newValue:!1===n.common.body?void 0:n.common.body}),e[r]=void 0;}return t.setNodes(e)}))},_emitChange:function(e){i.changeEvents[e.origin]&&this._emit("change",e);},fireInitial:function(){if(i.changeEvents.local){var e=this;e.forAllNodes((function(t){var r;u(t.path)&&(r=l(t))&&e._emitChange({path:t.path,origin:"local",oldValue:void 0,oldContentType:void 0,newValue:r.body,newContentType:r.contentType});})).then((function(){e._emit("local-events-done");}));}},onDiff:function(e){this.diffHandler=e;},migrate:function(e){return "object"!==n(e)||e.common||(e.common={},"string"==typeof e.path?"/"===e.path.substr(-1)&&"object"===n(e.body)&&(e.common.itemsMap=e.body):(e.local||(e.local={}),e.local.body=e.body,e.local.contentType=e.contentType)),e},_updateNodesRunning:!1,_updateNodesQueued:[],_updateNodes:function(e,t){return new Promise(function(r,n){this._doUpdateNodes(e,t,{resolve:r,reject:n});}.bind(this))},_doUpdateNodes:function(e,t,r){var n=this;n._updateNodesRunning?n._updateNodesQueued.push({paths:e,cb:t,promise:r}):(n._updateNodesRunning=!0,n.getNodes(e).then((function(i){var s,a=c(i),l=[],h=o.equal;for(var f in i=t(e,i))h(s=i[f],a[f])?delete i[f]:u(f)&&(h(s.local.body,s.local.previousBody)&&s.local.contentType===s.local.previousContentType||l.push({path:f,origin:"window",oldValue:s.local.previousBody,newValue:!1===s.local.body?void 0:s.local.body,oldContentType:s.local.previousContentType,newContentType:s.local.contentType}),delete s.local.previousBody,delete s.local.previousContentType);n.setNodes(i).then((function(){n._emitChangeEvents(l),r.resolve({statusCode:200});}));})).then((function(){return Promise.resolve()}),(function(e){r.reject(e);})).then((function(){n._updateNodesRunning=!1;var e=n._updateNodesQueued.shift();e&&n._doUpdateNodes(e.paths,e.cb,e.promise);})));},_emitChangeEvents:function(e){for(var t=0,r=e.length;t<r;t++)this._emitChange(e[t]),this.diffHandler&&this.diffHandler(e[t].path);},_getAllDescendentPaths:function(e){var t=this;return a(e)?t.getNodes([e]).then((function(r){var n=[e],o=l(r[e]),i=Object.keys(o.itemsMap).map((function(r){return t._getAllDescendentPaths(e+r).then((function(e){for(var t=0,r=e.length;t<r;t++)n.push(e[t]);}))}));return Promise.all(i).then((function(){return n}))})):Promise.resolve([e])},_getInternals:function(){return {getLatest:l,makeNode:d,isOutdated:h}}};e.exports=function(e){for(var t in m)e[t]=m[t];};},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i=r(0),s=r(11),a=r(13),u=r(14),c=r(5),l=r(3),h=r(4),f=r(7),d=r(1),p=r(27),m=i.getGlobalContext(),y=r(2),g=i.getJSONFromLocalStorage;function v(e){return 403!==e.statusCode&&401!==e.statusCode||this._emit("error",new h.Unauthorized),Promise.resolve(e)}var b=function(e){"object"===n(e)&&i.extend(l,e),y(this,"ready","authing","connecting","connected","disconnected","not-connected","conflict","error","features-loaded","sync-interval-change","sync-req-done","sync-done","wire-busy","wire-done","network-offline","network-online"),this._pending=[],this._setGPD({get:this._pendingGPD("get"),put:this._pendingGPD("put"),delete:this._pendingGPD("delete")}),this._cleanups=[],this._pathHandlers={change:{}},this.apiKeys={},(o=i.localStorageAvailable())&&(this.apiKeys=g("remotestorage:api-keys")||{},this.setBackend(localStorage.getItem("remotestorage:backend")||"remotestorage"));var t=this.on;this.on=function(e,r){if(this._allLoaded)switch(e){case"features-loaded":setTimeout(r,0);break;case"ready":this.remote&&setTimeout(r,0);break;case"connected":this.remote&&this.remote.connected&&setTimeout(r,0);break;case"not-connected":this.remote&&!this.remote.connected&&setTimeout(r,0);}return t.call(this,e,r)},this._init(),this.fireInitial=function(){this.local&&setTimeout(this.local.fireInitial.bind(this.local),0);}.bind(this),this.on("ready",this.fireInitial.bind(this)),this.loadModules();};function _(e){return "number"==typeof e&&e>1e3&&e<36e5}b.Authorize=h,b.SyncError=f.SyncError,b.Unauthorized=h.Unauthorized,b.DiscoveryError=u.DiscoveryError,b.prototype={loadModules:function(){l.modules.forEach(this.addModule.bind(this));},authorize:function(e){this.access.setStorageType(this.remote.storageApi),void 0===e.scope&&(e.scope=this.access.scopeParameter),e.redirectUri=m.cordova?l.cordovaRedirectUri:String(h.getLocation()),void 0===e.clientId&&(e.clientId=e.redirectUri.match(/^(https?:\/\/[^/]+)/)[0]),h(this,e);},impliedauth:function(e,t){e=this.remote.storageApi,t=String(document.location),d("ImpliedAuth proceeding due to absent authURL; storageApi = "+e+" redirectUri = "+t),this.remote.configure({token:h.IMPLIED_FAKE_TOKEN}),document.location=t;},connect:function(e,t){var r=this;if(this.setBackend("remotestorage"),e.indexOf("@")<0)this._emit("error",new b.DiscoveryError("User address doesn't contain an @."));else{if(m.cordova){if("string"!=typeof l.cordovaRedirectUri)return void this._emit("error",new b.DiscoveryError("Please supply a custom HTTPS redirect URI for your Cordova app"));if(!m.cordova.InAppBrowser)return void this._emit("error",new b.DiscoveryError("Please include the InAppBrowser Cordova plugin to enable OAuth"))}this.remote.configure({userAddress:e}),this._emit("connecting");var n=setTimeout(function(){this._emit("error",new b.DiscoveryError("No storage information found for this user address."));}.bind(this),l.discoveryTimeout);u(e).then((function(o){if(clearTimeout(n),r._emit("authing"),o.userAddress=e,r.remote.configure(o),!r.remote.connected)if(o.authURL)if(void 0===t)r.authorize({authURL:o.authURL});else{if("string"!=typeof t)throw new Error("Supplied bearer token must be a string");d("Skipping authorization sequence and connecting with known token"),r.remote.configure({token:t});}else r.impliedauth();}),(function(){clearTimeout(n),r._emit("error",new b.DiscoveryError("No storage information found for this user address."));}));}},reconnect:function(){this.remote.configure({token:null}),"remotestorage"===this.backend?this.connect(this.remote.userAddress):this.remote.connect();},disconnect:function(){this.remote&&this.remote.configure({userAddress:null,href:null,storageApi:null,token:null,properties:null}),this._setGPD({get:this._pendingGPD("get"),put:this._pendingGPD("put"),delete:this._pendingGPD("delete")});var e=this._cleanups.length,t=0,r=function(){++t>=e&&(this._init(),d("Done cleaning up, emitting disconnected and disconnect events"),this._emit("disconnected"));}.bind(this);e>0?this._cleanups.forEach(function(e){var t=e(this);"object"===n(t)&&"function"==typeof t.then?t.then(r):r();}.bind(this)):r();},setBackend:function(e){this.backend=e,o&&(e?localStorage.setItem("remotestorage:backend",e):localStorage.removeItem("remotestorage:backend"));},onChange:function(e,t){this._pathHandlers.change[e]||(this._pathHandlers.change[e]=[]),this._pathHandlers.change[e].push(t);},enableLog:function(){l.logging=!0;},disableLog:function(){l.logging=!1;},log:function(){d.apply(b,arguments);},setApiKeys:function(e){var t=this,r=["googledrive","dropbox"];if("object"!==n(e)||!Object.keys(e).every((function(e){return r.includes(e)})))return console.error("setApiKeys() was called with invalid arguments"),!1;Object.keys(e).forEach((function(r){var n=e[r];if(n){switch(r){case"dropbox":t.apiKeys.dropbox={appKey:n},void 0!==t.dropbox&&t.dropbox.clientId===n||s._rs_init(t);break;case"googledrive":t.apiKeys.googledrive={clientId:n},void 0!==t.googledrive&&t.googledrive.clientId===n||a._rs_init(t);}return !0}delete t.apiKeys[r];})),o&&localStorage.setItem("remotestorage:api-keys",JSON.stringify(this.apiKeys));},setCordovaRedirectUri:function(e){if("string"!=typeof e||!e.match(/http(s)?:\/\//))throw new Error("Cordova redirect URI must be a URI string");l.cordovaRedirectUri=e;},_init:p.loadFeatures,features:p.features,loadFeature:p.loadFeature,featureSupported:p.featureSupported,featureDone:p.featureDone,featuresDone:p.featuresDone,featuresLoaded:p.featuresLoaded,featureInitialized:p.featureInitialized,featureFailed:p.featureFailed,hasFeature:p.hasFeature,_setCachingModule:p._setCachingModule,_collectCleanupFunctions:p._collectCleanupFunctions,_fireReady:p._fireReady,initFeature:p.initFeature,_setGPD:function(e,t){function r(e){return function(){return e.apply(t,arguments).then(v.bind(this))}}this.get=r(e.get),this.put=r(e.put),this.delete=r(e.delete);},_pendingGPD:function(e){return function(){var t=Array.prototype.slice.call(arguments);return new Promise(function(r,n){this._pending.push({method:e,args:t,promise:{resolve:r,reject:n}});}.bind(this))}.bind(this)},_processPending:function(){this._pending.forEach(function(e){try{this[e.method].apply(this,e.args).then(e.promise.resolve,e.promise.reject);}catch(t){e.promise.reject(t);}}.bind(this)),this._pending=[];},_bindChange:function(e){e.on("change",this._dispatchEvent.bind(this,"change"));},_dispatchEvent:function(e,t){var r=this;Object.keys(this._pathHandlers[e]).forEach((function(n){var o=n.length;t.path.substr(0,o)===n&&r._pathHandlers[e][n].forEach((function(e){var o={};for(var i in t)o[i]=t[i];o.relativePath=t.path.replace(new RegExp("^"+n),"");try{e(o);}catch(e){console.error("'change' handler failed: ",e,e.stack),r._emit("error",e);}}));}));},scope:function(e){if("string"!=typeof e)throw"Argument 'path' of baseClient.scope must be a string";if(!this.access.checkPathPermission(e,"r")){var t=e.replace(/(['\\])/g,"\\$1");console.warn("WARNING: please call remoteStorage.access.claim('"+t+"', 'r') (read only) or remoteStorage.access.claim('"+t+"', 'rw') (read/write) first");}return new c(this,e)},getSyncInterval:function(){return l.syncInterval},setSyncInterval:function(e){if(!_(e))throw e+" is not a valid sync interval";var t=l.syncInterval;l.syncInterval=parseInt(e,10),this._emit("sync-interval-change",{oldValue:t,newValue:e});},getBackgroundSyncInterval:function(){return l.backgroundSyncInterval},setBackgroundSyncInterval:function(e){if(!_(e))throw e+" is not a valid sync interval";var t=l.backgroundSyncInterval;l.backgroundSyncInterval=parseInt(e,10),this._emit("sync-interval-change",{oldValue:t,newValue:e});},getCurrentSyncInterval:function(){return l.isBackground?l.backgroundSyncInterval:l.syncInterval},getRequestTimeout:function(){return l.requestTimeout},setRequestTimeout:function(e){l.requestTimeout=parseInt(e,10);},syncCycle:function(){this.sync&&!this.sync.stopped&&(this.on("sync-done",function(){d("[Sync] Sync done. Setting timer to",this.getCurrentSyncInterval()),this.sync&&!this.sync.stopped&&(this._syncTimer&&(clearTimeout(this._syncTimer),this._syncTimer=void 0),this._syncTimer=setTimeout(this.sync.sync.bind(this.sync),this.getCurrentSyncInterval()));}.bind(this)),this.sync.sync());},startSync:function(){return l.cache?(this.sync.stopped=!1,this.syncStopped=!1,this.sync.sync()):(console.warn("Nothing to sync, because caching is disabled."),Promise.resolve())},stopSync:function(){clearTimeout(this._syncTimer),this._syncTimer=void 0,this.sync?(d("[Sync] Stopping sync"),this.sync.stopped=!0):(d("[Sync] Will instantiate sync stopped"),this.syncStopped=!0);}},b.util=i,Object.defineProperty(b.prototype,"connected",{get:function(){return this.remote.connected}});var w=r(15);Object.defineProperty(b.prototype,"access",{get:function(){var e=new w;return Object.defineProperty(this,"access",{value:e}),e},configurable:!0});var P=r(16);Object.defineProperty(b.prototype,"caching",{configurable:!0,get:function(){var e=new P;return Object.defineProperty(this,"caching",{value:e}),e}}),e.exports=b,r(32);},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")();}catch(e){"object"==typeof window&&(r=window);}e.exports=r;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i=r(4),s=r(5),a=r(6),u=r(0),c=r(2),l=r(24),h=r(7),f="remotestorage:dropbox",d=u.isFolder,p=u.cleanPath,m=u.shouldBeTreatedAsBinary,y=u.getJSONFromLocalStorage,g=u.getTextFromArrayBuffer,v=function(e){return p("/remotestorage/"+e).replace(/\/$/,"")},b=function(e,t){return new RegExp("^"+t.join("\\/")+"(\\/|$)").test(e.error_summary)},_=function(e){return e instanceof ArrayBuffer||a.isArrayBufferView(e)},w=function(e){if(this.rs=e,this.connected=!1,this.rs=e,this._initialFetchDone=!1,c(this,"connected","not-connected"),this.clientId=e.apiKeys.dropbox.appKey,this._revCache=new l("rev"),this._fetchDeltaCursor=null,this._fetchDeltaPromise=null,this._itemRefs={},o=u.localStorageAvailable()){var t=y(f);t&&this.configure(t),this._itemRefs=y("".concat(f,":shares"))||{};}this.connected&&setTimeout(this._emit.bind(this),0,"connected");};function P(e){e._dropboxOrigSync||(e._dropboxOrigSync=e.sync.sync.bind(e.sync),e.sync.sync=function(){return this.dropbox.fetchDelta.apply(this.dropbox,arguments).then(e._dropboxOrigSync,(function(t){e._emit("error",new h.SyncError(t)),e._emit("sync-done");}))}.bind(e));}function E(e){e._dropboxOrigSyncCycle&&(e.syncCycle=e._dropboxOrigSyncCycle,delete e._dropboxOrigSyncCycle);}function S(e){!function(e){e._origRemote||(e._origRemote=e.remote,e.remote=e.dropbox);}(e),e.sync?P(e):function(e){var t=arguments;e._dropboxOrigSyncCycle||(e._dropboxOrigSyncCycle=e.syncCycle,e.syncCycle=function(){if(!e.sync)throw new Error("expected sync to be initialized by now");P(e),e._dropboxOrigSyncCycle(t),E(e);});}(e),function(e){e._origBaseClientGetItemURL||(e._origBaseClientGetItemURL=s.prototype.getItemURL,s.prototype.getItemURL=function(){throw new Error("getItemURL is not implemented for Dropbox yet")});}(e);}function T(e){!function(e){e._origRemote&&(e.remote=e._origRemote,delete e._origRemote);}(e),function(e){e._dropboxOrigSync&&(e.sync.sync=e._dropboxOrigSync,delete e._dropboxOrigSync);}(e),function(e){e._origBaseClientGetItemURL&&(s.prototype.getItemURL=e._origBaseClientGetItemURL,delete e._origBaseClientGetItemURL);}(e),E(e);}w.prototype={online:!0,connect:function(){this.rs.setBackend("dropbox"),this.token?S(this.rs):this.rs.authorize({authURL:"https://www.dropbox.com/oauth2/authorize",scope:"",clientId:this.clientId});},configure:function(e){void 0!==e.userAddress&&(this.userAddress=e.userAddress),void 0!==e.token&&(this.token=e.token);var t=function(){o&&localStorage.setItem(f,JSON.stringify({userAddress:this.userAddress,token:this.token}));},r=function(){this.connected=!1,o&&localStorage.removeItem(f);};this.token?(this.connected=!0,this.userAddress?(this._emit("connected"),t.apply(this)):this.info().then(function(e){this.userAddress=e.email,this._emit("connected"),t.apply(this);}.bind(this)).catch(function(){r.apply(this),this.rs._emit("error",new Error("Could not fetch user info."));}.bind(this))):r.apply(this);},stopWaitingForToken:function(){this.connected||this._emit("not-connected");},_getFolder:function(e){var t=this._revCache,r=this,n=function(n){var i,s;if(200!==n.status&&409!==n.status)return Promise.reject("Unexpected response status: "+n.status);try{i=JSON.parse(n.responseText);}catch(e){return Promise.reject(e)}return 409===n.status?b(i,["path","not_found"])?Promise.resolve({}):Promise.reject(new Error("API returned an error: "+i.error_summary)):(s=i.entries.reduce((function(n,o){var i="folder"===o[".tag"],s=o.path_lower.split("/").slice(-1)[0]+(i?"/":"");return i?n[s]={ETag:t.get(e+s)}:(n[s]={ETag:o.rev},r._revCache.set(e+s,o.rev)),n}),{}),i.has_more?o(i.cursor).then((function(e){return Object.assign(s,e)})):Promise.resolve(s))},o=function(e){var t={body:{cursor:e}};return r._request("POST","https://api.dropboxapi.com/2/files/list_folder/continue",t).then(n)};return this._request("POST","https://api.dropboxapi.com/2/files/list_folder",{body:{path:v(e)}}).then(n).then((function(r){return Promise.resolve({statusCode:200,body:r,contentType:"application/json; charset=UTF-8",revision:t.get(e)})}))},get:function(e,t){var r=this;if(!this.connected)return Promise.reject("not connected (path: "+e+")");var n=this,o=this._revCache.get(e);if(null===o)return Promise.resolve({statusCode:404});if(t&&t.ifNoneMatch){if(!this._initialFetchDone)return this.fetchDelta().then((function(){return r.get(e,t)}));if(o&&o===t.ifNoneMatch)return Promise.resolve({statusCode:304})}if("/"===e.substr(-1))return this._getFolder(e,t);var i={headers:{"Dropbox-API-Arg":JSON.stringify({path:v(e)})},responseType:"arraybuffer"};return t&&t.ifNoneMatch&&(i.headers["If-None-Match"]=t.ifNoneMatch),this._request("GET","https://content.dropboxapi.com/2/files/download",i).then((function(t){var r,o,i,s,a=t.status;return 200!==a&&409!==a?Promise.resolve({statusCode:a}):(r=t.getResponseHeader("Dropbox-API-Result"),g(t.response,"UTF-8").then((function(u){o=u,409===a&&(r=o);try{r=JSON.parse(r);}catch(e){return Promise.reject(e)}if(409===a)return b(r,["path","not_found"])?{statusCode:404}:Promise.reject(new Error('API error while downloading file ("'+e+'"): '+r.error_summary));if(i=t.getResponseHeader("Content-Type"),s=r.rev,n._revCache.set(e,s),n._shareIfNeeded(e),m(u,i))o=t.response;else try{o=JSON.parse(o),i="application/json; charset=UTF-8";}catch(e){}return {statusCode:a,body:o,contentType:i,revision:s}})))}))},put:function(e,t,r,n){var o=this;if(!this.connected)throw new Error("not connected (path: "+e+")");var i=this._revCache.get(e);if(n&&n.ifMatch&&i&&i!==n.ifMatch)return Promise.resolve({statusCode:412,revision:i});if(n&&"*"===n.ifNoneMatch&&i&&"rev"!==i)return Promise.resolve({statusCode:412,revision:i});if(!r.match(/charset=/)&&_(t)&&(r+="; charset=binary"),t.length>157286400)return Promise.reject(new Error("Cannot upload file larger than 150MB"));var s=n&&(n.ifMatch||"*"===n.ifNoneMatch),a={body:t,contentType:r,path:e};return (s?this._getMetadata(e).then((function(e){return n&&"*"===n.ifNoneMatch&&e?Promise.resolve({statusCode:412,revision:e.rev}):n&&n.ifMatch&&e&&e.rev!==n.ifMatch?Promise.resolve({statusCode:412,revision:e.rev}):o._uploadSimple(a)})):o._uploadSimple(a)).then((function(t){return o._shareIfNeeded(e),t}))},delete:function(e,t){var r=this;if(!this.connected)throw new Error("not connected (path: "+e+")");var n=this._revCache.get(e);return t&&t.ifMatch&&n&&t.ifMatch!==n?Promise.resolve({statusCode:412,revision:n}):t&&t.ifMatch?this._getMetadata(e).then((function(n){return t&&t.ifMatch&&n&&n.rev!==t.ifMatch?Promise.resolve({statusCode:412,revision:n.rev}):r._deleteSimple(e)})):this._deleteSimple(e)},_shareIfNeeded:function(e){e.match(/^\/public\/.*[^/]$/)&&void 0===this._itemRefs[e]&&this.share(e);},share:function(e){var t=this,r={body:{path:v(e)}};return this._request("POST","https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",r).then((function(r){if(200!==r.status&&409!==r.status)return Promise.reject(new Error("Invalid response status:"+r.status));var n;try{n=JSON.parse(r.responseText);}catch(e){return Promise.reject(new Error("Invalid response body: "+r.responseText))}return 409===r.status?b(n,["shared_link_already_exists"])?t._getSharedLink(e):Promise.reject(new Error("API error: "+n.error_summary)):Promise.resolve(n.url)})).then((function(r){return t._itemRefs[e]=r,o&&localStorage.setItem(f+":shares",JSON.stringify(t._itemRefs)),Promise.resolve(r)}),(function(t){return t.message='Sharing Dropbox file or folder ("'+e+'") failed: '+t.message,Promise.reject(t)}))},info:function(){return this._request("POST","https://api.dropboxapi.com/2/users/get_current_account",{}).then((function(e){var t=e.responseText;try{t=JSON.parse(t);}catch(e){return Promise.reject(new Error("Could not query current account info: Invalid API response: "+t))}return Promise.resolve({email:t.email})}))},_request:function(e,t,r){var o=this;return r.headers||(r.headers={}),r.headers.Authorization="Bearer "+this.token,"object"!==n(r.body)||_(r.body)||(r.body=JSON.stringify(r.body),r.headers["Content-Type"]="application/json; charset=UTF-8"),this.rs._emit("wire-busy",{method:e,isFolder:d(t)}),a.request.call(this,e,t,r).then((function(n){return n&&503===n.status?(o.online&&(o.online=!1,o.rs._emit("network-offline")),setTimeout(o._request(e,t,r),3210)):(o.online||(o.online=!0,o.rs._emit("network-online")),o.rs._emit("wire-done",{method:e,isFolder:d(t),success:!0}),Promise.resolve(n))}),(function(r){return o.online&&(o.online=!1,o.rs._emit("network-offline")),o.rs._emit("wire-done",{method:e,isFolder:d(t),success:!1}),Promise.reject(r)}))},fetchDelta:function(){var e=this;if(this._fetchDeltaPromise)return this._fetchDeltaPromise;var t=Array.prototype.slice.call(arguments),r=this,o=function e(n){var o,s="https://api.dropboxapi.com/2/files/list_folder";return "string"==typeof n?(s+="/continue",o={cursor:n}):o={path:"/remotestorage",recursive:!0,include_deleted:!0},r._request("POST",s,{body:o}).then((function(o){if(401===o.status)return r.rs._emit("error",new i.Unauthorized),Promise.resolve(t);if(200!==o.status&&409!==o.status)return Promise.reject(new Error("Invalid response status: "+o.status));var s;try{s=JSON.parse(o.responseText);}catch(e){return Promise.reject(new Error("Invalid response body: "+o.responseText))}if(409===o.status){if(!b(s,["path","not_found"]))return Promise.reject(new Error("API returned an error: "+s.error_summary));s={cursor:null,entries:[],has_more:!1};}if(n||r._revCache.deactivatePropagation(),s.entries.forEach((function(e){var t=e.path_lower.substr("/remotestorage".length);"deleted"===e[".tag"]?(r._revCache.delete(t),r._revCache.delete(t+"/")):"file"===e[".tag"]&&r._revCache.set(t,e.rev);})),r._fetchDeltaCursor=s.cursor,s.has_more)return e(s.cursor);r._revCache.activatePropagation(),r._initialFetchDone=!0;})).catch((function(e){return "timeout"===e||e instanceof ProgressEvent?Promise.resolve():Promise.reject(e)}))};return this._fetchDeltaPromise=o(r._fetchDeltaCursor).catch((function(t){return "object"===n(t)&&"message"in t?t.message="Dropbox: fetchDelta: "+t.message:t="Dropbox: fetchDelta: ".concat(t),e._fetchDeltaPromise=null,Promise.reject(t)})).then((function(){return e._fetchDeltaPromise=null,Promise.resolve(t)})),this._fetchDeltaPromise},_getMetadata:function(e){var t={path:v(e)};return this._request("POST","https://api.dropboxapi.com/2/files/get_metadata",{body:t}).then((function(e){if(200!==e.status&&409!==e.status)return Promise.reject(new Error("Invalid response status:"+e.status));var t;try{t=JSON.parse(e.responseText);}catch(t){return Promise.reject(new Error("Invalid response body: "+e.responseText))}return 409===e.status?b(t,["path","not_found"])?Promise.resolve():Promise.reject(new Error("API error: "+t.error_summary)):Promise.resolve(t)})).then(void 0,(function(t){return t.message='Could not load metadata for file or folder ("'+e+'"): '+t.message,Promise.reject(t)}))},_uploadSimple:function(e){var t=this,r={path:v(e.path),mode:{".tag":"overwrite"},mute:!0};return e.ifMatch&&(r.mode={".tag":"update",update:e.ifMatch}),this._request("POST","https://content.dropboxapi.com/2/files/upload",{body:e.body,headers:{"Content-Type":"application/octet-stream","Dropbox-API-Arg":JSON.stringify(r)}}).then((function(r){if(200!==r.status&&409!==r.status)return Promise.resolve({statusCode:r.status});var n=r.responseText;try{n=JSON.parse(n);}catch(e){return Promise.reject(new Error("Invalid API result: "+n))}return 409===r.status?b(n,["path","conflict"])?t._getMetadata(e.path).then((function(e){return Promise.resolve({statusCode:412,revision:e.rev})})):Promise.reject(new Error("API error: "+n.error_summary)):(t._revCache.set(e.path,n.rev),Promise.resolve({statusCode:r.status,revision:n.rev}))}))},_deleteSimple:function(e){var t=this,r={path:v(e)};return this._request("POST","https://api.dropboxapi.com/2/files/delete",{body:r}).then((function(e){if(200!==e.status&&409!==e.status)return Promise.resolve({statusCode:e.status});var t=e.responseText;try{t=JSON.parse(t);}catch(e){return Promise.reject(new Error("Invalid response body: "+t))}return 409===e.status?b(t,["path_lookup","not_found"])?Promise.resolve({statusCode:404}):Promise.reject(new Error("API error: "+t.error_summary)):Promise.resolve({statusCode:200})})).then((function(r){return 200!==r.statusCode&&404!==r.statusCode||(t._revCache.delete(e),delete t._itemRefs[e]),Promise.resolve(r)}),(function(t){return t.message='Could not delete Dropbox file or folder ("'+e+'"): '+t.message,Promise.reject(t)}))},_getSharedLink:function(e){var t={body:{path:v(e),direct_only:!0}};return this._request("POST","https://api.dropbox.com/2/sharing/list_shared_links",t).then((function(e){if(200!==e.status&&409!==e.status)return Promise.reject(new Error("Invalid response status: "+e.status));var t;try{t=JSON.parse(e.responseText);}catch(t){return Promise.reject(new Error("Invalid response body: "+e.responseText))}return 409===e.status?Promise.reject(new Error("API error: "+e.error_summary)):t.links.length?Promise.resolve(t.links[0].url):Promise.reject(new Error("No links returned"))}),(function(t){return t.message='Could not get link to a shared file or folder ("'+e+'"): '+t.message,Promise.reject(t)}))}},w._rs_init=function(e){o=u.localStorageAvailable(),e.apiKeys.dropbox&&(e.dropbox=new w(e)),"dropbox"===e.backend&&S(e);},w._rs_supported=function(){return !0},w._rs_cleanup=function(e){T(e),o&&localStorage.removeItem(f),e.setBackend(void 0);},e.exports=w;},function(e,t,r){var n=r(2),o="undefined"!=typeof window?"browser":"node",i={},s=function(){return i};s.isBrowser=function(){return "browser"===o},s.isNode=function(){return "node"===o},s.goBackground=function(){s._emit("background");},s.goForeground=function(){s._emit("foreground");},s._rs_init=function(){function e(){document[i.hiddenProperty]?s.goBackground():s.goForeground();}n(s,"background","foreground"),"browser"===o&&(void 0!==document.hidden?(i.hiddenProperty="hidden",i.visibilityChangeEvent="visibilitychange"):void 0!==document.mozHidden?(i.hiddenProperty="mozHidden",i.visibilityChangeEvent="mozvisibilitychange"):void 0!==document.msHidden?(i.hiddenProperty="msHidden",i.visibilityChangeEvent="msvisibilitychange"):void 0!==document.webkitHidden&&(i.hiddenProperty="webkitHidden",i.visibilityChangeEvent="webkitvisibilitychange"),document.addEventListener(i.visibilityChangeEvent,e,!1),e());},s._rs_cleanup=function(){},e.exports=s;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i=r(5),s=r(6),a=r(2),u=r(0),c="https://www.googleapis.com",l="remotestorage:googledrive",h=u.isFolder,f=u.cleanPath,d=u.shouldBeTreatedAsBinary,p=u.getJSONFromLocalStorage,m=u.getTextFromArrayBuffer;function y(e){return "/"===e.substr(-1)&&(e=e.substr(0,e.length-1)),decodeURIComponent(e)}function g(e){return e.replace(/[^\/]+\/?$/,"")}function v(e){var t=e.split("/");return "/"===e.substr(-1)?t[t.length-2]+"/":t[t.length-1]}function b(e){return f("".concat("/remotestorage","/").concat(e))}function _(e){return e.replace(/^["'](.*)["']$/,"$1")}var w=function(e){this.maxAge=e,this._items={};};w.prototype={get:function(e){var t=this._items[e],r=(new Date).getTime();return t&&t.t>=r-this.maxAge?t.v:void 0},set:function(e,t){this._items[e]={v:t,t:(new Date).getTime()};}};var P=function(e,t){if(a(this,"connected","not-connected"),this.rs=e,this.clientId=t,this._fileIdCache=new w(300),o=u.localStorageAvailable()){var r=p(l);r&&this.configure(r);}};P.prototype={connected:!1,online:!0,configure:function(e){var t=this;void 0!==e.userAddress&&(this.userAddress=e.userAddress),void 0!==e.token&&(this.token=e.token);var r=function(){o&&localStorage.setItem(l,JSON.stringify({userAddress:this.userAddress,token:this.token}));},n=function(){this.connected=!1,delete this.token,o&&localStorage.removeItem(l);};this.token?(this.connected=!0,this.userAddress?(this._emit("connected"),r.apply(this)):this.info().then((function(e){t.userAddress=e.user.emailAddress,t._emit("connected"),r.apply(t);})).catch((function(){n.apply(t),t.rs._emit("error",new Error("Could not fetch user info."));}))):n.apply(this);},connect:function(){this.rs.setBackend("googledrive"),this.rs.authorize({authURL:"https://accounts.google.com/o/oauth2/auth",scope:"https://www.googleapis.com/auth/drive",clientId:this.clientId});},stopWaitingForToken:function(){this.connected||this._emit("not-connected");},get:function(e,t){return "/"===e.substr(-1)?this._getFolder(b(e),t):this._getFile(b(e),t)},put:function(e,t,r,n){var o=this,i=b(e);function s(e){if(e.status>=200&&e.status<300){var t=JSON.parse(e.responseText),r=_(t.etag);return Promise.resolve({statusCode:200,contentType:t.mimeType,revision:r})}return 412===e.status?Promise.resolve({statusCode:412,revision:"conflict"}):Promise.reject("PUT failed with status "+e.status+" ("+e.responseText+")")}return this._getFileId(i).then((function(e){return e?n&&"*"===n.ifNoneMatch?s({status:412}):o._updateFile(e,i,t,r,n).then(s):o._createFile(i,t,r,n).then(s)}))},delete:function(e,t){var r=this,o=b(e);return this._getFileId(o).then((function(e){return e?r._getMeta(e).then((function(o){var i;return "object"===n(o)&&"string"==typeof o.etag&&(i=_(o.etag)),t&&t.ifMatch&&t.ifMatch!==i?{statusCode:412,revision:i}:r._request("DELETE",c+"/drive/v2/files/"+e,{}).then((function(e){return 200===e.status||204===e.status?{statusCode:200}:Promise.reject("Delete failed: "+e.status+" ("+e.responseText+")")}))})):Promise.resolve({statusCode:200})}))},info:function(){return this._request("GET","https://www.googleapis.com/drive/v2/about?fields=user",{}).then((function(e){try{var t=JSON.parse(e.responseText);return Promise.resolve(t)}catch(e){return Promise.reject(e)}}))},_updateFile:function(e,t,r,n,o){var i=this,s={mimeType:n},a={"Content-Type":"application/json; charset=UTF-8"};return o&&o.ifMatch&&(a["If-Match"]='"'+o.ifMatch+'"'),this._request("PUT",c+"/upload/drive/v2/files/"+e+"?uploadType=resumable",{body:JSON.stringify(s),headers:a}).then((function(e){return 412===e.status?e:i._request("PUT",e.getResponseHeader("Location"),{body:n.match(/^application\/json/)?JSON.stringify(r):r})}))},_createFile:function(e,t,r){var n=this;return this._getParentId(e).then((function(o){var i={title:y(v(e)),mimeType:r,parents:[{kind:"drive#fileLink",id:o}]};return n._request("POST",c+"/upload/drive/v2/files?uploadType=resumable",{body:JSON.stringify(i),headers:{"Content-Type":"application/json; charset=UTF-8"}}).then((function(e){return n._request("POST",e.getResponseHeader("Location"),{body:r.match(/^application\/json/)?JSON.stringify(t):t})}))}))},_getFile:function(e,t){var r=this;return this._getFileId(e).then((function(e){return r._getMeta(e).then((function(e){var o;if("object"===n(e)&&"string"==typeof e.etag&&(o=_(e.etag)),t&&t.ifNoneMatch&&o===t.ifNoneMatch)return Promise.resolve({statusCode:304});if(!e.downloadUrl){if(!e.exportLinks||!e.exportLinks["text/html"])return Promise.resolve({statusCode:200,body:"",contentType:e.mimeType,revision:o});e.mimeType+=";export=text/html",e.downloadUrl=e.exportLinks["text/html"];}return r._request("GET",e.downloadUrl,{responseType:"arraybuffer"}).then((function(t){return m(t.response,"UTF-8").then((function(r){var n=r;if(e.mimeType.match(/^application\/json/))try{n=JSON.parse(n);}catch(e){}else d(r,e.mimeType)&&(n=t.response);return {statusCode:200,body:n,contentType:e.mimeType,revision:o}}))}))}))}))},_getFolder:function(e){var t=this;return this._getFileId(e).then((function(r){var n,o,i,s;return r?(n="'"+r+"' in parents",t._request("GET",c+"/drive/v2/files?q="+encodeURIComponent(n)+"&fields="+encodeURIComponent("items(downloadUrl,etag,fileSize,id,mimeType,title)")+"&maxResults=1000",{}).then((function(r){if(200!==r.status)return Promise.reject("request failed or something: "+r.status);try{o=JSON.parse(r.responseText);}catch(e){return Promise.reject("non-JSON response from GoogleDrive")}s={};var n=!0,a=!1,u=void 0;try{for(var c,l=o.items[Symbol.iterator]();!(n=(c=l.next()).done);n=!0){var h=c.value;i=_(h.etag),"application/vnd.google-apps.folder"===h.mimeType?(t._fileIdCache.set(e+h.title+"/",h.id),s[h.title+"/"]={ETag:i}):(t._fileIdCache.set(e+h.title,h.id),s[h.title]={ETag:i,"Content-Type":h.mimeType,"Content-Length":h.fileSize});}}catch(e){a=!0,u=e;}finally{try{n||null==l.return||l.return();}finally{if(a)throw u}}return Promise.resolve({statusCode:200,body:s,contentType:"application/json; charset=UTF-8",revision:void 0})}))):Promise.resolve({statusCode:404})}))},_getParentId:function(e){var t=this,r=g(e);return this._getFileId(r).then((function(e){return e?Promise.resolve(e):t._createFolder(r)}))},_createFolder:function(e){var t=this;return this._getParentId(e).then((function(r){return t._request("POST",c+"/drive/v2/files",{body:JSON.stringify({title:y(v(e)),mimeType:"application/vnd.google-apps.folder",parents:[{id:r}]}),headers:{"Content-Type":"application/json; charset=UTF-8"}}).then((function(e){var t=JSON.parse(e.responseText);return Promise.resolve(t.id)}))}))},_getFileId:function(e){var t,r=this;return "/"===e?Promise.resolve("root"):(t=this._fileIdCache.get(e))?Promise.resolve(t):this._getFolder(g(e)).then((function(){return (t=r._fileIdCache.get(e))?Promise.resolve(t):"/"===e.substr(-1)?r._createFolder(e).then((function(){return r._getFileId(e)})):Promise.resolve()}))},_getMeta:function(e){return this._request("GET",c+"/drive/v2/files/"+e,{}).then((function(t){return 200===t.status?Promise.resolve(JSON.parse(t.responseText)):Promise.reject("request (getting metadata for "+e+") failed with status: "+t.status)}))},_request:function(e,t,r){var n=this;return r.headers||(r.headers={}),r.headers.Authorization="Bearer "+this.token,this.rs._emit("wire-busy",{method:e,isFolder:h(t)}),s.request.call(this,e,t,r).then((function(r){return r&&401===r.status?void n.connect():(n.online||(n.online=!0,n.rs._emit("network-online")),n.rs._emit("wire-done",{method:e,isFolder:h(t),success:!0}),Promise.resolve(r))}),(function(r){return n.online&&(n.online=!1,n.rs._emit("network-offline")),n.rs._emit("wire-done",{method:e,isFolder:h(t),success:!1}),Promise.reject(r)}))}},P._rs_init=function(e){var t,r=e.apiKeys.googledrive;r&&(e.googledrive=new P(e,r.clientId),"googledrive"===e.backend&&(e._origRemote=e.remote,e.remote=e.googledrive,(t=e)._origBaseClientGetItemURL||(t._origBaseClientGetItemURL=i.prototype.getItemURL,i.prototype.getItemURL=function(){throw new Error("getItemURL is not implemented for Google Drive yet")})));},P._rs_supported=function(){return !0},P._rs_cleanup=function(e){var t;e.setBackend(void 0),e._origRemote&&(e.remote=e._origRemote,delete e._origRemote),(t=e)._origBaseClientGetItemURL&&(i.prototype.getItemURL=t._origBaseClientGetItemURL,delete t._origBaseClientGetItemURL);},e.exports=P;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i=r(1),s=r(0),a=r(25),u={},c=function(e){return new Promise((function(t,r){return e in u?t(u[e]):new a({tls_only:!1,uri_fallback:!0,request_timeout:5e3}).lookup(e,(function(s,a){if(s)return r(s);if("object"!==n(a.idx.links.remotestorage)||"number"!=typeof a.idx.links.remotestorage.length||a.idx.links.remotestorage.length<=0)return i("[Discover] WebFinger record for "+e+" does not have remotestorage defined in the links section ",JSON.stringify(a.json)),r("WebFinger record for "+e+" does not have remotestorage defined in the links section.");var c=a.idx.links.remotestorage[0],l=c.properties["http://tools.ietf.org/html/rfc6749#section-4.2"]||c.properties["auth-endpoint"],h=c.properties["http://remotestorage.io/spec/version"]||c.type;return u[e]={href:c.href,storageApi:h,authURL:l,properties:c.properties},o&&(localStorage["remotestorage:discover"]=JSON.stringify({cache:u})),t(u[e])}))}))};(c.DiscoveryError=function(e){this.name="DiscoveryError",this.message=e,this.stack=(new Error).stack;}).prototype=Object.create(Error.prototype),c.DiscoveryError.prototype.constructor=c.DiscoveryError,c._rs_init=function(){if(o=s.localStorageAvailable()){var e;try{e=JSON.parse(localStorage["remotestorage:discover"]);}catch(e){}e&&(u=e.cache);}},c._rs_supported=function(){return !!s.globalContext.XMLHttpRequest},c._rs_cleanup=function(){o&&delete localStorage["remotestorage:discover"];},e.exports=c;},function(e,t){var r=function(){this.reset();};r.prototype={claim:function(e,t){if("string"!=typeof e||-1!==e.indexOf("/")||0===e.length)throw new Error("Scope should be a non-empty string without forward slashes");if(!t.match(/^rw?$/))throw new Error("Mode should be either 'r' or 'rw'");this._adjustRootPaths(e),this.scopeModeMap[e]=t;},get:function(e){return this.scopeModeMap[e]},remove:function(e){var t,r={};for(t in this.scopeModeMap)r[t]=this.scopeModeMap[t];for(t in this.reset(),delete r[e],r)this.set(t,r[t]);},checkPermission:function(e,t){var r=this.get(e);return r&&("r"===t||"rw"===r)},checkPathPermission:function(e,t){return !!this.checkPermission("*",t)||!!this.checkPermission(this._getModuleName(e),t)},reset:function(){this.rootPaths=[],this.scopeModeMap={};},_getModuleName:function(e){if("/"!==e[0])throw new Error("Path should start with a slash");var t=e.replace(/^\/public/,"").match(/^\/([^/]*)\//);return t?t[1]:"*"},_adjustRootPaths:function(e){"*"in this.scopeModeMap||"*"===e?this.rootPaths=["/"]:e in this.scopeModeMap||(this.rootPaths.push("/"+e+"/"),this.rootPaths.push("/public/"+e+"/"));},_scopeNameForParameter:function(e){if("*"===e.name&&this.storageType){if("2012.04"===this.storageType)return "";if(this.storageType.match(/remotestorage-0[01]/))return "root"}return e.name},setStorageType:function(e){this.storageType=e;}},Object.defineProperty(r.prototype,"scopes",{get:function(){return Object.keys(this.scopeModeMap).map(function(e){return {name:e,mode:this.scopeModeMap[e]}}.bind(this))}}),Object.defineProperty(r.prototype,"scopeParameter",{get:function(){return this.scopes.map(function(e){return this._scopeNameForParameter(e)+":"+e.mode}.bind(this)).join(" ")}}),r._rs_init=function(){},e.exports=r;},function(e,t,r){var n=r(0),o=r(1),i=n.containingFolder,s=function(){this.reset();};s.prototype={pendingActivations:[],set:function(e,t){if("string"!=typeof e)throw new Error("path should be a string");if(!n.isFolder(e))throw new Error("path should be a folder");if(this._remoteStorage&&this._remoteStorage.access&&!this._remoteStorage.access.checkPathPermission(e,"r"))throw new Error('No access to path "'+e+'". You have to claim access to it first.');if(!t.match(/^(FLUSH|SEEN|ALL)$/))throw new Error("strategy should be 'FLUSH', 'SEEN', or 'ALL'");this._rootPaths[e]=t,"ALL"===t&&(this.activateHandler?this.activateHandler(e):this.pendingActivations.push(e));},enable:function(e){this.set(e,"ALL");},disable:function(e){this.set(e,"FLUSH");},onActivate:function(e){var t;for(o("[Caching] Setting activate handler",e,this.pendingActivations),this.activateHandler=e,t=0;t<this.pendingActivations.length;t++)e(this.pendingActivations[t]);delete this.pendingActivations;},checkPath:function(e){return void 0!==this._rootPaths[e]?this._rootPaths[e]:"/"===e?"SEEN":this.checkPath(i(e))},reset:function(){this._rootPaths={},this._remoteStorage=null;}},s._rs_init=function(e){this._remoteStorage=e;},e.exports=s;},function(e,t,r){e.exports=r(9);},function(e,t,r){(function(e){
    /*!
     * The buffer module from node.js, for the browser.
     *
     * @author   Feross Aboukhadijeh <http://feross.org>
     * @license  MIT
     */
    var n=r(19),o=r(20),i=r(21);function s(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function a(e,t){if(s()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,r){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,r);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return h(this,e)}return c(this,e,t,r)}function c(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return "undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=f(e,t);return e}(e,t,r,n):"string"==typeof t?function(e,t,r){"string"==typeof r&&""!==r||(r="utf8");if(!u.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|p(t,r),o=(e=a(e,n)).write(t,r);o!==n&&(e=e.slice(0,o));return e}(e,t,r):function(e,t){if(u.isBuffer(t)){var r=0|d(t.length);return 0===(e=a(e,r)).length?e:(t.copy(e,0,0,r),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return "number"!=typeof t.length||(n=t.length)!=n?a(e,0):f(e,t);if("Buffer"===t.type&&i(t.data))return f(e,t.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function h(e,t){if(l(t),e=a(e,t<0?0:0|d(t)),!u.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}function f(e,t){var r=t.length<0?0:0|d(t.length);e=a(e,r);for(var n=0;n<r;n+=1)e[n]=255&t[n];return e}function d(e){if(e>=s())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s().toString(16)+" bytes");return 0|e}function p(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return B(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return q(e).length;default:if(n)return B(e).length;t=(""+t).toLowerCase(),n=!0;}}function m(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return "";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return "";if((r>>>=0)<=(t>>>=0))return "";for(e||(e="utf8");;)switch(e){case"hex":return O(this,t,r);case"utf8":case"utf-8":return A(this,t,r);case"ascii":return R(this,t,r);case"latin1":case"binary":return k(this,t,r);case"base64":return T(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0;}}function y(e,t,r){var n=e[t];e[t]=e[r],e[r]=n;}function g(e,t,r,n,o){if(0===e.length)return -1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return -1;r=e.length-1;}else if(r<0){if(!o)return -1;r=0;}if("string"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:v(e,t,r,n,o);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):v(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function v(e,t,r,n,o){var i,s=1,a=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return -1;s=2,a/=2,u/=2,r/=2;}function c(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(o){var l=-1;for(i=r;i<a;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===u)return l*s}else-1!==l&&(i-=i-l),l=-1;}else for(r+u>a&&(r=a-u),i=r;i>=0;i--){for(var h=!0,f=0;f<u;f++)if(c(e,i+f)!==c(t,f)){h=!1;break}if(h)return i}return -1}function b(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");n>i/2&&(n=i/2);for(var s=0;s<n;++s){var a=parseInt(t.substr(2*s,2),16);if(isNaN(a))return s;e[r+s]=a;}return s}function _(e,t,r,n){return J(B(t,e.length-r),e,r,n)}function w(e,t,r,n){return J(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function P(e,t,r,n){return w(e,t,r,n)}function E(e,t,r,n){return J(q(t),e,r,n)}function S(e,t,r,n){return J(function(e,t){for(var r,n,o,i=[],s=0;s<e.length&&!((t-=2)<0);++s)r=e.charCodeAt(s),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function T(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function A(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var i,s,a,u,c=e[o],l=null,h=c>239?4:c>223?3:c>191?2:1;if(o+h<=r)switch(h){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[o+1]))&&(u=(31&c)<<6|63&i)>127&&(l=u);break;case 3:i=e[o+1],s=e[o+2],128==(192&i)&&128==(192&s)&&(u=(15&c)<<12|(63&i)<<6|63&s)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[o+1],s=e[o+2],a=e[o+3],128==(192&i)&&128==(192&s)&&128==(192&a)&&(u=(15&c)<<18|(63&i)<<12|(63&s)<<6|63&a)>65535&&u<1114112&&(l=u);}null===l?(l=65533,h=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),o+=h;}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return !1}}(),t.kMaxLength=s(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,r){return c(null,e,t,r)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,r){return function(e,t,r,n){return l(t),t<=0?a(e,t):void 0!==r?"string"==typeof n?a(e,t).fill(r,n):a(e,t).fill(r):a(e,t)}(null,e,t,r)},u.allocUnsafe=function(e){return h(null,e)},u.allocUnsafeSlow=function(e){return h(null,e)},u.isBuffer=function(e){return !(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,n=t.length,o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return !0;default:return !1}},u.concat=function(e,t){if(!i(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=u.allocUnsafe(t),o=0;for(r=0;r<e.length;++r){var s=e[r];if(!u.isBuffer(s))throw new TypeError('"list" argument must be an Array of Buffers');s.copy(n,o),o+=s.length;}return n},u.byteLength=p,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)y(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?A(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,r,n,o){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return -1;if(t>=r)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(n>>>=0),s=(r>>>=0)-(t>>>=0),a=Math.min(i,s),c=this.slice(n,o),l=e.slice(t,r),h=0;h<a;++h)if(c[h]!==l[h]){i=c[h],s=l[h];break}return i<s?-1:s<i?1:0},u.prototype.includes=function(e,t,r){return -1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0);}var o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=!1;;)switch(n){case"hex":return b(this,e,t,r);case"utf8":case"utf-8":return _(this,e,t,r);case"ascii":return w(this,e,t,r);case"latin1":case"binary":return P(this,e,t,r);case"base64":return E(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0;}},u.prototype.toJSON=function(){return {type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function R(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function k(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function O(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var o="",i=t;i<r;++i)o+=F(e[i]);return o}function I(e,t,r){for(var n=e.slice(t,r),o="",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}function C(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function M(e,t,r,n,o,i){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function N(e,t,r,n){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-r,2);o<i;++o)e[r+o]=(t&255<<8*(n?o:1-o))>>>8*(n?o:1-o);}function x(e,t,r,n){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-r,4);o<i;++o)e[r+o]=t>>>8*(n?o:3-o)&255;}function U(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function j(e,t,r,n,i){return i||U(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function L(e,t,r,n,i){return i||U(e,0,r,8),o.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=u.prototype;else{var o=t-e;r=new u(o,void 0);for(var i=0;i<o;++i)r[i]=this[i+e];}return r},u.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||C(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n},u.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||C(e,t,this.length);for(var n=this[e+--t],o=1;t>0&&(o*=256);)n+=this[e+--t]*o;return n},u.prototype.readUInt8=function(e,t){return t||C(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||C(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||C(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||C(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||C(e,t,this.length);for(var n=t,o=1,i=this[e+--n];n>0&&(o*=256);)i+=this[e+--n]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},u.prototype.readInt8=function(e,t){return t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||C(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){t||C(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||C(e,4,this.length),o.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||C(e,4,this.length),o.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||C(e,8,this.length),o.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||C(e,8,this.length),o.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||M(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||M(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):N(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):N(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):x(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):x(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);M(this,e,t,r,o-1,-o);}var i=0,s=1,a=0;for(this[t]=255&e;++i<r&&(s*=256);)e<0&&0===a&&0!==this[t+i-1]&&(a=1),this[t+i]=(e/s>>0)-a&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);M(this,e,t,r,o-1,-o);}var i=r-1,s=1,a=0;for(this[t+i]=255&e;--i>=0&&(s*=256);)e<0&&0===a&&0!==this[t+i+1]&&(a=1),this[t+i]=(e/s>>0)-a&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):N(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):N(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):x(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||M(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):x(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,r){return j(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return j(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return L(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return L(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var o,i=n-r;if(this===e&&r<t&&t<n)for(o=i-1;o>=0;--o)e[o+t]=this[o+r];else if(i<1e3||!u.TYPED_ARRAY_SUPPORT)for(o=0;o<i;++o)e[o+t]=this[o+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+i),t);return i},u.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o);}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{var s=u.isBuffer(e)?e:B(new u(e,n).toString()),a=s.length;for(i=0;i<r-t;++i)this[i+t]=s[i%a];}return this};var D=/[^+\/0-9A-Za-z-_]/g;function F(e){return e<16?"0"+e.toString(16):e.toString(16)}function B(e,t){var r;t=t||1/0;for(var n=e.length,o=null,i=[],s=0;s<n;++s){if((r=e.charCodeAt(s))>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(s+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320);}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r);}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128);}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128);}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128);}}return i}function q(e){return n.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(D,"")).length<2)return "";for(;e.length%4!=0;)e+="=";return e}(e))}function J(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}}).call(this,r(10));},function(e,t,r){t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){var t,r,n=c(e),s=n[0],a=n[1],u=new i(function(e,t,r){return 3*(t+r)/4-r}(0,s,a)),l=0,h=a>0?s-4:s;for(r=0;r<h;r+=4)t=o[e.charCodeAt(r)]<<18|o[e.charCodeAt(r+1)]<<12|o[e.charCodeAt(r+2)]<<6|o[e.charCodeAt(r+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===a&&(t=o[e.charCodeAt(r)]<<2|o[e.charCodeAt(r+1)]>>4,u[l++]=255&t);1===a&&(t=o[e.charCodeAt(r)]<<10|o[e.charCodeAt(r+1)]<<4|o[e.charCodeAt(r+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,r=e.length,o=r%3,i=[],s=0,a=r-o;s<a;s+=16383)i.push(l(e,s,s+16383>a?a:s+16383));1===o?(t=e[r-1],i.push(n[t>>2]+n[t<<4&63]+"==")):2===o&&(t=(e[r-2]<<8)+e[r-1],i.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return i.join("")};for(var n=[],o=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",a=0,u=s.length;a<u;++a)n[a]=s[a],o[s.charCodeAt(a)]=a;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return -1===r&&(r=t),[r,r===t?0:4-r%4]}function l(e,t,r){for(var o,i,s=[],a=t;a<r;a+=3)o=(e[a]<<16&16711680)+(e[a+1]<<8&65280)+(255&e[a+2]),s.push(n[(i=o)>>18&63]+n[i>>12&63]+n[i>>6&63]+n[63&i]);return s.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63;},function(e,t){t.read=function(e,t,r,n,o){var i,s,a=8*o-n-1,u=(1<<a)-1,c=u>>1,l=-7,h=r?o-1:0,f=r?-1:1,d=e[t+h];for(h+=f,i=d&(1<<-l)-1,d>>=-l,l+=a;l>0;i=256*i+e[t+h],h+=f,l-=8);for(s=i&(1<<-l)-1,i>>=-l,l+=n;l>0;s=256*s+e[t+h],h+=f,l-=8);if(0===i)i=1-c;else{if(i===u)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,n),i-=c;}return (d?-1:1)*s*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var s,a,u,c=8*i-o-1,l=(1<<c)-1,h=l>>1,f=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:i-1,p=n?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(a=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-s))<1&&(s--,u*=2),(t+=s+h>=1?f/u:f*Math.pow(2,1-h))*u>=2&&(s++,u/=2),s+h>=l?(a=0,s=l):s+h>=1?(a=(t*u-1)*Math.pow(2,o),s+=h):(a=t*Math.pow(2,h-1)*Math.pow(2,o),s=0));o>=8;e[r+d]=255&a,d+=p,a/=256,o-=8);for(s=s<<o|a,c+=o;c>0;e[r+d]=255&s,d+=p,s/=256,c-=8);e[r+d-p]|=128*m;};},function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return "[object Array]"==r.call(e)};},function(e,t,r){var n,o,i;o=[],void 0===(i="function"==typeof(n=function(){var e,t,r,n;Object.keys||(Object.keys=(e=Object.prototype.hasOwnProperty,t=!{toString:null}.propertyIsEnumerable("toString"),n=(r=["toString","toLocaleString","valueOf","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","constructor"]).length,function(o){if("object"!=typeof o&&"function"!=typeof o||null===o)throw new TypeError("Object.keys called on non-object");var i=[];for(var s in o)e.call(o,s)&&i.push(s);if(t)for(var a=0;a<n;a++)e.call(o,r[a])&&i.push(r[a]);return i})),Object.create||(Object.create=function(){function e(){}return function(t){if(1!==arguments.length)throw new Error("Object.create implementation only accepts one parameter.");return e.prototype=t,new e}}()),Array.isArray||(Array.isArray=function(e){return "[object Array]"===Object.prototype.toString.call(e)}),Array.prototype.indexOf||(Array.prototype.indexOf=function(e){if(null===this)throw new TypeError;var t=Object(this),r=t.length>>>0;if(0===r)return -1;var n=0;if(arguments.length>1&&((n=Number(arguments[1]))!=n?n=0:0!==n&&n!==1/0&&n!==-1/0&&(n=(n>0||-1)*Math.floor(Math.abs(n)))),n>=r)return -1;for(var o=n>=0?n:Math.max(r-Math.abs(n),0);o<r;o++)if(o in t&&t[o]===e)return o;return -1}),Object.isFrozen||(Object.isFrozen=function(e){for(var t="tv4_test_frozen_key";e.hasOwnProperty(t);)t+=Math.random();try{return e[t]=!0,delete e[t],!1}catch(e){return !0}});var o={"+":!0,"#":!0,".":!0,"/":!0,";":!0,"?":!0,"&":!0},i={"*":!0};function s(e){return encodeURI(e).replace(/%25[0-9][0-9]/g,(function(e){return "%"+e.substring(3)}))}function a(e){var t="";o[e.charAt(0)]&&(t=e.charAt(0),e=e.substring(1));var r="",n="",a=!0,u=!1,c=!1;"+"===t?a=!1:"."===t?(n=".",r="."):"/"===t?(n="/",r="/"):"#"===t?(n="#",a=!1):";"===t?(n=";",r=";",u=!0,c=!0):"?"===t?(n="?",r="&",u=!0):"&"===t&&(n="&",r="&",u=!0);for(var l=[],h=e.split(","),f=[],d={},p=0;p<h.length;p++){var m=h[p],y=null;if(-1!==m.indexOf(":")){var g=m.split(":");m=g[0],y=parseInt(g[1],10);}for(var v={};i[m.charAt(m.length-1)];)v[m.charAt(m.length-1)]=!0,m=m.substring(0,m.length-1);var b={truncate:y,name:m,suffices:v};f.push(b),d[m]=b,l.push(m);}var _=function(e){for(var t="",o=0,i=0;i<f.length;i++){var l=f[i],h=e(l.name);if(null==h||Array.isArray(h)&&0===h.length||"object"==typeof h&&0===Object.keys(h).length)o++;else if(t+=i===o?n:r||",",Array.isArray(h)){u&&(t+=l.name+"=");for(var d=0;d<h.length;d++)d>0&&(t+=l.suffices["*"]&&r||",",l.suffices["*"]&&u&&(t+=l.name+"=")),t+=a?encodeURIComponent(h[d]).replace(/!/g,"%21"):s(h[d]);}else if("object"==typeof h){u&&!l.suffices["*"]&&(t+=l.name+"=");var p=!0;for(var m in h)p||(t+=l.suffices["*"]&&r||","),p=!1,t+=a?encodeURIComponent(m).replace(/!/g,"%21"):s(m),t+=l.suffices["*"]?"=":",",t+=a?encodeURIComponent(h[m]).replace(/!/g,"%21"):s(h[m]);}else u&&(t+=l.name,c&&""===h||(t+="=")),null!=l.truncate&&(h=h.substring(0,l.truncate)),t+=a?encodeURIComponent(h).replace(/!/g,"%21"):s(h);}return t};return _.varNames=l,{prefix:n,substitution:_}}function u(e){if(!(this instanceof u))return new u(e);for(var t=e.split("{"),r=[t.shift()],n=[],o=[],i=[];t.length>0;){var s=t.shift(),c=s.split("}")[0],l=s.substring(c.length+1),h=a(c);o.push(h.substitution),n.push(h.prefix),r.push(l),i=i.concat(h.substitution.varNames);}this.fill=function(e){for(var t=r[0],n=0;n<o.length;n++)t+=(0, o[n])(e),t+=r[n+1];return t},this.varNames=i,this.template=e;}u.prototype={toString:function(){return this.template},fillFromObject:function(e){return this.fill((function(t){return e[t]}))}};var c=function(e,t,r,n,o){if(this.missing=[],this.missingMap={},this.formatValidators=e?Object.create(e.formatValidators):{},this.schemas=e?Object.create(e.schemas):{},this.collectMultiple=t,this.errors=[],this.handleError=t?this.collectError:this.returnError,n&&(this.checkRecursive=!0,this.scanned=[],this.scannedFrozen=[],this.scannedFrozenSchemas=[],this.scannedFrozenValidationErrors=[],this.validatedSchemasKey="tv4_validation_id",this.validationErrorsKey="tv4_validation_errors_id"),o&&(this.trackUnknownProperties=!0,this.knownPropertyPaths={},this.unknownPropertyPaths={}),this.errorReporter=r||g("en"),"string"==typeof this.errorReporter)throw new Error("debug");if(this.definedKeywords={},e)for(var i in e.definedKeywords)this.definedKeywords[i]=e.definedKeywords[i].slice(0);};function l(e,t){if(e===t)return !0;if(e&&t&&"object"==typeof e&&"object"==typeof t){if(Array.isArray(e)!==Array.isArray(t))return !1;if(Array.isArray(e)){if(e.length!==t.length)return !1;for(var r=0;r<e.length;r++)if(!l(e[r],t[r]))return !1}else{var n;for(n in e)if(void 0===t[n]&&void 0!==e[n])return !1;for(n in t)if(void 0===e[n]&&void 0!==t[n])return !1;for(n in e)if(!l(e[n],t[n]))return !1}return !0}return !1}c.prototype.defineKeyword=function(e,t){this.definedKeywords[e]=this.definedKeywords[e]||[],this.definedKeywords[e].push(t);},c.prototype.createError=function(e,t,r,n,o,i,s){var a=new P(e,t,r,n,o);return a.message=this.errorReporter(a,i,s),a},c.prototype.returnError=function(e){return e},c.prototype.collectError=function(e){return e&&this.errors.push(e),null},c.prototype.prefixErrors=function(e,t,r){for(var n=e;n<this.errors.length;n++)this.errors[n]=this.errors[n].prefixWith(t,r);return this},c.prototype.banUnknownProperties=function(e,t){for(var r in this.unknownPropertyPaths){var n=this.createError(v.UNKNOWN_PROPERTY,{path:r},r,"",null,e,t),o=this.handleError(n);if(o)return o}return null},c.prototype.addFormat=function(e,t){if("object"==typeof e){for(var r in e)this.addFormat(r,e[r]);return this}this.formatValidators[e]=t;},c.prototype.resolveRefs=function(e,t){if(void 0!==e.$ref){if((t=t||{})[e.$ref])return this.createError(v.CIRCULAR_REFERENCE,{urls:Object.keys(t).join(", ")},"","",null,void 0,e);t[e.$ref]=!0,e=this.getSchema(e.$ref,t);}return e},c.prototype.getSchema=function(e,t){var r;if(void 0!==this.schemas[e])return r=this.schemas[e],this.resolveRefs(r,t);var n=e,o="";if(-1!==e.indexOf("#")&&(o=e.substring(e.indexOf("#")+1),n=e.substring(0,e.indexOf("#"))),"object"==typeof this.schemas[n]){r=this.schemas[n];var i=decodeURIComponent(o);if(""===i)return this.resolveRefs(r,t);if("/"!==i.charAt(0))return;for(var s=i.split("/").slice(1),a=0;a<s.length;a++){var u=s[a].replace(/~1/g,"/").replace(/~0/g,"~");if(void 0===r[u]){r=void 0;break}r=r[u];}if(void 0!==r)return this.resolveRefs(r,t)}void 0===this.missing[n]&&(this.missing.push(n),this.missing[n]=n,this.missingMap[n]=n);},c.prototype.searchSchemas=function(e,t){if(Array.isArray(e))for(var r=0;r<e.length;r++)this.searchSchemas(e[r],t);else if(e&&"object"==typeof e)for(var n in"string"==typeof e.id&&function(e,t){if(t.substring(0,e.length)===e){var r=t.substring(e.length);if(t.length>0&&"/"===t.charAt(e.length-1)||"#"===r.charAt(0)||"?"===r.charAt(0))return !0}return !1}(t,e.id)&&void 0===this.schemas[e.id]&&(this.schemas[e.id]=e),e)if("enum"!==n)if("object"==typeof e[n])this.searchSchemas(e[n],t);else if("$ref"===n){var o=m(e[n]);o&&void 0===this.schemas[o]&&void 0===this.missingMap[o]&&(this.missingMap[o]=o);}},c.prototype.addSchema=function(e,t){if("string"!=typeof e||void 0===t){if("object"!=typeof e||"string"!=typeof e.id)return;e=(t=e).id;}e===m(e)+"#"&&(e=m(e)),this.schemas[e]=t,delete this.missingMap[e],y(t,e),this.searchSchemas(t,e);},c.prototype.getSchemaMap=function(){var e={};for(var t in this.schemas)e[t]=this.schemas[t];return e},c.prototype.getSchemaUris=function(e){var t=[];for(var r in this.schemas)e&&!e.test(r)||t.push(r);return t},c.prototype.getMissingUris=function(e){var t=[];for(var r in this.missingMap)e&&!e.test(r)||t.push(r);return t},c.prototype.dropSchemas=function(){this.schemas={},this.reset();},c.prototype.reset=function(){this.missing=[],this.missingMap={},this.errors=[];},c.prototype.validateAll=function(e,t,r,n,o){var i;if(!(t=this.resolveRefs(t)))return null;if(t instanceof P)return this.errors.push(t),t;var s,a=this.errors.length,u=null,c=null;if(this.checkRecursive&&e&&"object"==typeof e){if(i=!this.scanned.length,e[this.validatedSchemasKey]){var l=e[this.validatedSchemasKey].indexOf(t);if(-1!==l)return this.errors=this.errors.concat(e[this.validationErrorsKey][l]),null}if(Object.isFrozen(e)&&-1!==(s=this.scannedFrozen.indexOf(e))){var h=this.scannedFrozenSchemas[s].indexOf(t);if(-1!==h)return this.errors=this.errors.concat(this.scannedFrozenValidationErrors[s][h]),null}if(this.scanned.push(e),Object.isFrozen(e))-1===s&&(s=this.scannedFrozen.length,this.scannedFrozen.push(e),this.scannedFrozenSchemas.push([])),u=this.scannedFrozenSchemas[s].length,this.scannedFrozenSchemas[s][u]=t,this.scannedFrozenValidationErrors[s][u]=[];else{if(!e[this.validatedSchemasKey])try{Object.defineProperty(e,this.validatedSchemasKey,{value:[],configurable:!0}),Object.defineProperty(e,this.validationErrorsKey,{value:[],configurable:!0});}catch(t){e[this.validatedSchemasKey]=[],e[this.validationErrorsKey]=[];}c=e[this.validatedSchemasKey].length,e[this.validatedSchemasKey][c]=t,e[this.validationErrorsKey][c]=[];}}var f=this.errors.length,d=this.validateBasic(e,t,o)||this.validateNumeric(e,t,o)||this.validateString(e,t,o)||this.validateArray(e,t,o)||this.validateObject(e,t,o)||this.validateCombinations(e,t,o)||this.validateHypermedia(e,t,o)||this.validateFormat(e,t,o)||this.validateDefinedKeywords(e,t,o)||null;if(i){for(;this.scanned.length;)delete this.scanned.pop()[this.validatedSchemasKey];this.scannedFrozen=[],this.scannedFrozenSchemas=[];}if(d||f!==this.errors.length)for(;r&&r.length||n&&n.length;){var p=r&&r.length?""+r.pop():null,m=n&&n.length?""+n.pop():null;d&&(d=d.prefixWith(p,m)),this.prefixErrors(f,p,m);}return null!==u?this.scannedFrozenValidationErrors[s][u]=this.errors.slice(a):null!==c&&(e[this.validationErrorsKey][c]=this.errors.slice(a)),this.handleError(d)},c.prototype.validateFormat=function(e,t){if("string"!=typeof t.format||!this.formatValidators[t.format])return null;var r=this.formatValidators[t.format].call(null,e,t);return "string"==typeof r||"number"==typeof r?this.createError(v.FORMAT_CUSTOM,{message:r},"","/format",null,e,t):r&&"object"==typeof r?this.createError(v.FORMAT_CUSTOM,{message:r.message||"?"},r.dataPath||"",r.schemaPath||"/format",null,e,t):null},c.prototype.validateDefinedKeywords=function(e,t,r){for(var n in this.definedKeywords)if(void 0!==t[n])for(var o=this.definedKeywords[n],i=0;i<o.length;i++){var s=(0, o[i])(e,t[n],t,r);if("string"==typeof s||"number"==typeof s)return this.createError(v.KEYWORD_CUSTOM,{key:n,message:s},"","",null,e,t).prefixWith(null,n);if(s&&"object"==typeof s){var a=s.code;if("string"==typeof a){if(!v[a])throw new Error("Undefined error code (use defineError): "+a);a=v[a];}else"number"!=typeof a&&(a=v.KEYWORD_CUSTOM);var u="object"==typeof s.message?s.message:{key:n,message:s.message||"?"},c=s.schemaPath||"/"+n.replace(/~/g,"~0").replace(/\//g,"~1");return this.createError(a,u,s.dataPath||null,c,null,e,t)}}return null},c.prototype.validateBasic=function(e,t,r){var n;return (n=this.validateType(e,t,r))?n.prefixWith(null,"type"):(n=this.validateEnum(e,t,r))?n.prefixWith(null,"type"):null},c.prototype.validateType=function(e,t){if(void 0===t.type)return null;var r=typeof e;null===e?r="null":Array.isArray(e)&&(r="array");var n=t.type;Array.isArray(n)||(n=[n]);for(var o=0;o<n.length;o++){var i=n[o];if(i===r||"integer"===i&&"number"===r&&e%1==0)return null}return this.createError(v.INVALID_TYPE,{type:r,expected:n.join("/")},"","",null,e,t)},c.prototype.validateEnum=function(e,t){if(void 0===t.enum)return null;for(var r=0;r<t.enum.length;r++)if(l(e,t.enum[r]))return null;return this.createError(v.ENUM_MISMATCH,{value:"undefined"!=typeof JSON?JSON.stringify(e):e},"","",null,e,t)},c.prototype.validateNumeric=function(e,t,r){return this.validateMultipleOf(e,t,r)||this.validateMinMax(e,t,r)||this.validateNaN(e,t,r)||null};var h=Math.pow(2,-51),f=1-h;function d(e){var t=String(e).replace(/^\s+|\s+$/g,"").match(/^([^:\/?#]+:)?(\/\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\/?#]*)(?::(\d*))?))?([^?#]*)(\?[^#]*)?(#[\s\S]*)?/);return t?{href:t[0]||"",protocol:t[1]||"",authority:t[2]||"",host:t[3]||"",hostname:t[4]||"",port:t[5]||"",pathname:t[6]||"",search:t[7]||"",hash:t[8]||""}:null}function p(e,t){return t=d(t||""),e=d(e||""),t&&e?(t.protocol||e.protocol)+(t.protocol||t.authority?t.authority:e.authority)+(r=t.protocol||t.authority||"/"===t.pathname.charAt(0)?t.pathname:t.pathname?(e.authority&&!e.pathname?"/":"")+e.pathname.slice(0,e.pathname.lastIndexOf("/")+1)+t.pathname:e.pathname,n=[],r.replace(/^(\.\.?(\/|$))+/,"").replace(/\/(\.(\/|$))+/g,"/").replace(/\/\.\.$/,"/../").replace(/\/?[^\/]*/g,(function(e){"/.."===e?n.pop():n.push(e);})),n.join("").replace(/^\//,"/"===r.charAt(0)?"/":""))+(t.protocol||t.authority||t.pathname?t.search:t.search||e.search)+t.hash:null;var r,n;}function m(e){return e.split("#")[0]}function y(e,t){if(e&&"object"==typeof e)if(void 0===t?t=e.id:"string"==typeof e.id&&(t=p(t,e.id),e.id=t),Array.isArray(e))for(var r=0;r<e.length;r++)y(e[r],t);else for(var n in"string"==typeof e.$ref&&(e.$ref=p(t,e.$ref)),e)"enum"!==n&&y(e[n],t);}function g(e){var t=E[e=e||"en"];return function(e){var r=t[e.code]||w[e.code];if("string"!=typeof r)return "Unknown error code "+e.code+": "+JSON.stringify(e.messageParams);var n=e.params;return r.replace(/\{([^{}]*)\}/g,(function(e,t){var r=n[t];return "string"==typeof r||"number"==typeof r?r:e}))}}c.prototype.validateMultipleOf=function(e,t){var r=t.multipleOf||t.divisibleBy;if(void 0===r)return null;if("number"==typeof e){var n=e/r%1;if(n>=h&&n<f)return this.createError(v.NUMBER_MULTIPLE_OF,{value:e,multipleOf:r},"","",null,e,t)}return null},c.prototype.validateMinMax=function(e,t){if("number"!=typeof e)return null;if(void 0!==t.minimum){if(e<t.minimum)return this.createError(v.NUMBER_MINIMUM,{value:e,minimum:t.minimum},"","/minimum",null,e,t);if(t.exclusiveMinimum&&e===t.minimum)return this.createError(v.NUMBER_MINIMUM_EXCLUSIVE,{value:e,minimum:t.minimum},"","/exclusiveMinimum",null,e,t)}if(void 0!==t.maximum){if(e>t.maximum)return this.createError(v.NUMBER_MAXIMUM,{value:e,maximum:t.maximum},"","/maximum",null,e,t);if(t.exclusiveMaximum&&e===t.maximum)return this.createError(v.NUMBER_MAXIMUM_EXCLUSIVE,{value:e,maximum:t.maximum},"","/exclusiveMaximum",null,e,t)}return null},c.prototype.validateNaN=function(e,t){return "number"!=typeof e?null:!0===isNaN(e)||e===1/0||e===-1/0?this.createError(v.NUMBER_NOT_A_NUMBER,{value:e},"","/type",null,e,t):null},c.prototype.validateString=function(e,t,r){return this.validateStringLength(e,t,r)||this.validateStringPattern(e,t,r)||null},c.prototype.validateStringLength=function(e,t){return "string"!=typeof e?null:void 0!==t.minLength&&e.length<t.minLength?this.createError(v.STRING_LENGTH_SHORT,{length:e.length,minimum:t.minLength},"","/minLength",null,e,t):void 0!==t.maxLength&&e.length>t.maxLength?this.createError(v.STRING_LENGTH_LONG,{length:e.length,maximum:t.maxLength},"","/maxLength",null,e,t):null},c.prototype.validateStringPattern=function(e,t){if("string"!=typeof e||"string"!=typeof t.pattern&&!(t.pattern instanceof RegExp))return null;var r;if(t.pattern instanceof RegExp)r=t.pattern;else{var n,o="",i=t.pattern.match(/^\/(.+)\/([img]*)$/);i?(n=i[1],o=i[2]):n=t.pattern,r=new RegExp(n,o);}return r.test(e)?null:this.createError(v.STRING_PATTERN,{pattern:t.pattern},"","/pattern",null,e,t)},c.prototype.validateArray=function(e,t,r){return Array.isArray(e)&&(this.validateArrayLength(e,t,r)||this.validateArrayUniqueItems(e,t,r)||this.validateArrayItems(e,t,r))||null},c.prototype.validateArrayLength=function(e,t){var r;return void 0!==t.minItems&&e.length<t.minItems&&(r=this.createError(v.ARRAY_LENGTH_SHORT,{length:e.length,minimum:t.minItems},"","/minItems",null,e,t),this.handleError(r))?r:void 0!==t.maxItems&&e.length>t.maxItems&&(r=this.createError(v.ARRAY_LENGTH_LONG,{length:e.length,maximum:t.maxItems},"","/maxItems",null,e,t),this.handleError(r))?r:null},c.prototype.validateArrayUniqueItems=function(e,t){if(t.uniqueItems)for(var r=0;r<e.length;r++)for(var n=r+1;n<e.length;n++)if(l(e[r],e[n])){var o=this.createError(v.ARRAY_UNIQUE,{match1:r,match2:n},"","/uniqueItems",null,e,t);if(this.handleError(o))return o}return null},c.prototype.validateArrayItems=function(e,t,r){if(void 0===t.items)return null;var n,o;if(Array.isArray(t.items)){for(o=0;o<e.length;o++)if(o<t.items.length){if(n=this.validateAll(e[o],t.items[o],[o],["items",o],r+"/"+o))return n}else if(void 0!==t.additionalItems)if("boolean"==typeof t.additionalItems){if(!t.additionalItems&&(n=this.createError(v.ARRAY_ADDITIONAL_ITEMS,{},"/"+o,"/additionalItems",null,e,t),this.handleError(n)))return n}else if(n=this.validateAll(e[o],t.additionalItems,[o],["additionalItems"],r+"/"+o))return n}else for(o=0;o<e.length;o++)if(n=this.validateAll(e[o],t.items,[o],["items"],r+"/"+o))return n;return null},c.prototype.validateObject=function(e,t,r){return "object"!=typeof e||null===e||Array.isArray(e)?null:this.validateObjectMinMaxProperties(e,t,r)||this.validateObjectRequiredProperties(e,t,r)||this.validateObjectProperties(e,t,r)||this.validateObjectDependencies(e,t,r)||null},c.prototype.validateObjectMinMaxProperties=function(e,t){var r,n=Object.keys(e);return void 0!==t.minProperties&&n.length<t.minProperties&&(r=this.createError(v.OBJECT_PROPERTIES_MINIMUM,{propertyCount:n.length,minimum:t.minProperties},"","/minProperties",null,e,t),this.handleError(r))?r:void 0!==t.maxProperties&&n.length>t.maxProperties&&(r=this.createError(v.OBJECT_PROPERTIES_MAXIMUM,{propertyCount:n.length,maximum:t.maxProperties},"","/maxProperties",null,e,t),this.handleError(r))?r:null},c.prototype.validateObjectRequiredProperties=function(e,t){if(void 0!==t.required)for(var r=0;r<t.required.length;r++){var n=t.required[r];if(void 0===e[n]){var o=this.createError(v.OBJECT_REQUIRED,{key:n},"","/required/"+r,null,e,t);if(this.handleError(o))return o}}return null},c.prototype.validateObjectProperties=function(e,t,r){var n;for(var o in e){var i=r+"/"+o.replace(/~/g,"~0").replace(/\//g,"~1"),s=!1;if(void 0!==t.properties&&void 0!==t.properties[o]&&(s=!0,n=this.validateAll(e[o],t.properties[o],[o],["properties",o],i)))return n;if(void 0!==t.patternProperties)for(var a in t.patternProperties)if(new RegExp(a).test(o)&&(s=!0,n=this.validateAll(e[o],t.patternProperties[a],[o],["patternProperties",a],i)))return n;if(s)this.trackUnknownProperties&&(this.knownPropertyPaths[i]=!0,delete this.unknownPropertyPaths[i]);else if(void 0!==t.additionalProperties){if(this.trackUnknownProperties&&(this.knownPropertyPaths[i]=!0,delete this.unknownPropertyPaths[i]),"boolean"==typeof t.additionalProperties){if(!t.additionalProperties&&(n=this.createError(v.OBJECT_ADDITIONAL_PROPERTIES,{key:o},"","/additionalProperties",null,e,t).prefixWith(o,null),this.handleError(n)))return n}else if(n=this.validateAll(e[o],t.additionalProperties,[o],["additionalProperties"],i))return n}else this.trackUnknownProperties&&!this.knownPropertyPaths[i]&&(this.unknownPropertyPaths[i]=!0);}return null},c.prototype.validateObjectDependencies=function(e,t,r){var n;if(void 0!==t.dependencies)for(var o in t.dependencies)if(void 0!==e[o]){var i=t.dependencies[o];if("string"==typeof i){if(void 0===e[i]&&(n=this.createError(v.OBJECT_DEPENDENCY_KEY,{key:o,missing:i},"","",null,e,t).prefixWith(null,o).prefixWith(null,"dependencies"),this.handleError(n)))return n}else if(Array.isArray(i))for(var s=0;s<i.length;s++){var a=i[s];if(void 0===e[a]&&(n=this.createError(v.OBJECT_DEPENDENCY_KEY,{key:o,missing:a},"","/"+s,null,e,t).prefixWith(null,o).prefixWith(null,"dependencies"),this.handleError(n)))return n}else if(n=this.validateAll(e,i,[],["dependencies",o],r))return n}return null},c.prototype.validateCombinations=function(e,t,r){return this.validateAllOf(e,t,r)||this.validateAnyOf(e,t,r)||this.validateOneOf(e,t,r)||this.validateNot(e,t,r)||null},c.prototype.validateAllOf=function(e,t,r){if(void 0===t.allOf)return null;for(var n,o=0;o<t.allOf.length;o++){var i=t.allOf[o];if(n=this.validateAll(e,i,[],["allOf",o],r))return n}return null},c.prototype.validateAnyOf=function(e,t,r){if(void 0===t.anyOf)return null;var n,o,i=[],s=this.errors.length;this.trackUnknownProperties&&(n=this.unknownPropertyPaths,o=this.knownPropertyPaths);for(var a=!0,u=0;u<t.anyOf.length;u++){this.trackUnknownProperties&&(this.unknownPropertyPaths={},this.knownPropertyPaths={});var c=t.anyOf[u],l=this.errors.length,h=this.validateAll(e,c,[],["anyOf",u],r);if(null===h&&l===this.errors.length){if(this.errors=this.errors.slice(0,s),this.trackUnknownProperties){for(var f in this.knownPropertyPaths)o[f]=!0,delete n[f];for(var d in this.unknownPropertyPaths)o[d]||(n[d]=!0);a=!1;continue}return null}h&&i.push(h.prefixWith(null,""+u).prefixWith(null,"anyOf"));}return this.trackUnknownProperties&&(this.unknownPropertyPaths=n,this.knownPropertyPaths=o),a?(i=i.concat(this.errors.slice(s)),this.errors=this.errors.slice(0,s),this.createError(v.ANY_OF_MISSING,{},"","/anyOf",i,e,t)):void 0},c.prototype.validateOneOf=function(e,t,r){if(void 0===t.oneOf)return null;var n,o,i=null,s=[],a=this.errors.length;this.trackUnknownProperties&&(n=this.unknownPropertyPaths,o=this.knownPropertyPaths);for(var u=0;u<t.oneOf.length;u++){this.trackUnknownProperties&&(this.unknownPropertyPaths={},this.knownPropertyPaths={});var c=t.oneOf[u],l=this.errors.length,h=this.validateAll(e,c,[],["oneOf",u],r);if(null===h&&l===this.errors.length){if(null!==i)return this.errors=this.errors.slice(0,a),this.createError(v.ONE_OF_MULTIPLE,{index1:i,index2:u},"","/oneOf",null,e,t);if(i=u,this.trackUnknownProperties){for(var f in this.knownPropertyPaths)o[f]=!0,delete n[f];for(var d in this.unknownPropertyPaths)o[d]||(n[d]=!0);}}else h&&s.push(h);}return this.trackUnknownProperties&&(this.unknownPropertyPaths=n,this.knownPropertyPaths=o),null===i?(s=s.concat(this.errors.slice(a)),this.errors=this.errors.slice(0,a),this.createError(v.ONE_OF_MISSING,{},"","/oneOf",s,e,t)):(this.errors=this.errors.slice(0,a),null)},c.prototype.validateNot=function(e,t,r){if(void 0===t.not)return null;var n,o,i=this.errors.length;this.trackUnknownProperties&&(n=this.unknownPropertyPaths,o=this.knownPropertyPaths,this.unknownPropertyPaths={},this.knownPropertyPaths={});var s=this.validateAll(e,t.not,null,null,r),a=this.errors.slice(i);return this.errors=this.errors.slice(0,i),this.trackUnknownProperties&&(this.unknownPropertyPaths=n,this.knownPropertyPaths=o),null===s&&0===a.length?this.createError(v.NOT_PASSED,{},"","/not",null,e,t):null},c.prototype.validateHypermedia=function(e,t,r){if(!t.links)return null;for(var n,o=0;o<t.links.length;o++){var i=t.links[o];if("describedby"===i.rel){for(var s=new u(i.href),a=!0,c=0;c<s.varNames.length;c++)if(!(s.varNames[c]in e)){a=!1;break}if(a){var l={$ref:s.fillFromObject(e)};if(n=this.validateAll(e,l,[],["links",o],r))return n}}}};var v={INVALID_TYPE:0,ENUM_MISMATCH:1,ANY_OF_MISSING:10,ONE_OF_MISSING:11,ONE_OF_MULTIPLE:12,NOT_PASSED:13,NUMBER_MULTIPLE_OF:100,NUMBER_MINIMUM:101,NUMBER_MINIMUM_EXCLUSIVE:102,NUMBER_MAXIMUM:103,NUMBER_MAXIMUM_EXCLUSIVE:104,NUMBER_NOT_A_NUMBER:105,STRING_LENGTH_SHORT:200,STRING_LENGTH_LONG:201,STRING_PATTERN:202,OBJECT_PROPERTIES_MINIMUM:300,OBJECT_PROPERTIES_MAXIMUM:301,OBJECT_REQUIRED:302,OBJECT_ADDITIONAL_PROPERTIES:303,OBJECT_DEPENDENCY_KEY:304,ARRAY_LENGTH_SHORT:400,ARRAY_LENGTH_LONG:401,ARRAY_UNIQUE:402,ARRAY_ADDITIONAL_ITEMS:403,FORMAT_CUSTOM:500,KEYWORD_CUSTOM:501,CIRCULAR_REFERENCE:600,UNKNOWN_PROPERTY:1e3},b={};for(var _ in v)b[v[_]]=_;var w={INVALID_TYPE:"Invalid type: {type} (expected {expected})",ENUM_MISMATCH:"No enum match for: {value}",ANY_OF_MISSING:'Data does not match any schemas from "anyOf"',ONE_OF_MISSING:'Data does not match any schemas from "oneOf"',ONE_OF_MULTIPLE:'Data is valid against more than one schema from "oneOf": indices {index1} and {index2}',NOT_PASSED:'Data matches schema from "not"',NUMBER_MULTIPLE_OF:"Value {value} is not a multiple of {multipleOf}",NUMBER_MINIMUM:"Value {value} is less than minimum {minimum}",NUMBER_MINIMUM_EXCLUSIVE:"Value {value} is equal to exclusive minimum {minimum}",NUMBER_MAXIMUM:"Value {value} is greater than maximum {maximum}",NUMBER_MAXIMUM_EXCLUSIVE:"Value {value} is equal to exclusive maximum {maximum}",NUMBER_NOT_A_NUMBER:"Value {value} is not a valid number",STRING_LENGTH_SHORT:"String is too short ({length} chars), minimum {minimum}",STRING_LENGTH_LONG:"String is too long ({length} chars), maximum {maximum}",STRING_PATTERN:"String does not match pattern: {pattern}",OBJECT_PROPERTIES_MINIMUM:"Too few properties defined ({propertyCount}), minimum {minimum}",OBJECT_PROPERTIES_MAXIMUM:"Too many properties defined ({propertyCount}), maximum {maximum}",OBJECT_REQUIRED:"Missing required property: {key}",OBJECT_ADDITIONAL_PROPERTIES:"Additional properties not allowed",OBJECT_DEPENDENCY_KEY:"Dependency failed - key must exist: {missing} (due to key: {key})",ARRAY_LENGTH_SHORT:"Array is too short ({length}), minimum {minimum}",ARRAY_LENGTH_LONG:"Array is too long ({length}), maximum {maximum}",ARRAY_UNIQUE:"Array items are not unique (indices {match1} and {match2})",ARRAY_ADDITIONAL_ITEMS:"Additional items not allowed",FORMAT_CUSTOM:"Format validation failed ({message})",KEYWORD_CUSTOM:"Keyword failed: {key} ({message})",CIRCULAR_REFERENCE:"Circular $refs: {urls}",UNKNOWN_PROPERTY:"Unknown property (not in schema)"};function P(e,t,r,n,o){if(Error.call(this),void 0===e)throw new Error("No error code supplied: "+n);this.message="",this.params=t,this.code=e,this.dataPath=r||"",this.schemaPath=n||"",this.subErrors=o||null;var i=new Error(this.message);if(this.stack=i.stack||i.stacktrace,!this.stack)try{throw i}catch(i){this.stack=i.stack||i.stacktrace;}}P.prototype=Object.create(Error.prototype),P.prototype.constructor=P,P.prototype.name="ValidationError",P.prototype.prefixWith=function(e,t){if(null!==e&&(e=e.replace(/~/g,"~0").replace(/\//g,"~1"),this.dataPath="/"+e+this.dataPath),null!==t&&(t=t.replace(/~/g,"~0").replace(/\//g,"~1"),this.schemaPath="/"+t+this.schemaPath),null!==this.subErrors)for(var r=0;r<this.subErrors.length;r++)this.subErrors[r].prefixWith(e,t);return this};var E={},S=function e(t){var r,n,o=new c,i={setErrorReporter:function(e){return "string"==typeof e?this.language(e):(n=e,!0)},addFormat:function(){o.addFormat.apply(o,arguments);},language:function(e){return e?(E[e]||(e=e.split("-")[0]),!!E[e]&&(r=e,e)):r},addLanguage:function(e,t){var r;for(r in v)t[r]&&!t[v[r]]&&(t[v[r]]=t[r]);var n=e.split("-")[0];if(E[n])for(r in E[e]=Object.create(E[n]),t)void 0===E[n][r]&&(E[n][r]=t[r]),E[e][r]=t[r];else E[e]=t,E[n]=t;return this},freshApi:function(t){var r=e();return t&&r.language(t),r},validate:function(e,t,i,s){var a=g(r),u=new c(o,!1,n?function(e,t,r){return n(e,t,r)||a(e,t,r)}:a,i,s);"string"==typeof t&&(t={$ref:t}),u.addSchema("",t);var l=u.validateAll(e,t,null,null,"");return !l&&s&&(l=u.banUnknownProperties(e,t)),this.error=l,this.missing=u.missing,this.valid=null===l,this.valid},validateResult:function(){var e={toString:function(){return this.valid?"valid":this.error.message}};return this.validate.apply(e,arguments),e},validateMultiple:function(e,t,i,s){var a=g(r),u=new c(o,!0,n?function(e,t,r){return n(e,t,r)||a(e,t,r)}:a,i,s);"string"==typeof t&&(t={$ref:t}),u.addSchema("",t),u.validateAll(e,t,null,null,""),s&&u.banUnknownProperties(e,t);var l={toString:function(){return this.valid?"valid":this.error.message}};return l.errors=u.errors,l.missing=u.missing,l.valid=0===l.errors.length,l},addSchema:function(){return o.addSchema.apply(o,arguments)},getSchema:function(){return o.getSchema.apply(o,arguments)},getSchemaMap:function(){return o.getSchemaMap.apply(o,arguments)},getSchemaUris:function(){return o.getSchemaUris.apply(o,arguments)},getMissingUris:function(){return o.getMissingUris.apply(o,arguments)},dropSchemas:function(){o.dropSchemas.apply(o,arguments);},defineKeyword:function(){o.defineKeyword.apply(o,arguments);},defineError:function(e,t,r){if("string"!=typeof e||!/^[A-Z]+(_[A-Z]+)*$/.test(e))throw new Error("Code name must be a string in UPPER_CASE_WITH_UNDERSCORES");if("number"!=typeof t||t%1!=0||t<1e4)throw new Error("Code number must be an integer > 10000");if(void 0!==v[e])throw new Error("Error already defined: "+e+" as "+v[e]);if(void 0!==b[t])throw new Error("Error code already used: "+b[t]+" as "+t);for(var n in v[e]=t,b[t]=e,w[e]=w[t]=r,E){var o=E[n];o[e]&&(o[t]=o[t]||o[e]);}},reset:function(){o.reset(),this.error=null,this.missing=[],this.valid=!0;},missing:[],error:null,valid:!0,normSchema:y,resolveUrl:p,getDocumentUri:m,errorCodes:v};return i.language(t||"en"),i}();return S.addLanguage("en-gb",w),S.tv4=S,S})?n.apply(t,o):n)||(e.exports=i);},function(e,t){var r={uris:{},schemas:{},aliases:{},declare:function(e,t,r,n){var o=e+"/"+t;if(n.extends){var i,s=n.extends.split("/");i=1===s.length?e+"/"+s.shift():s.join("/");var a=this.uris[i];if(!a)throw"Type '"+o+"' tries to extend unknown schema '"+i+"'";n.extends=this.schemas[a];}this.uris[o]=r,this.aliases[r]=o,this.schemas[r]=n;},resolveAlias:function(e){return this.uris[e]},getSchema:function(e){return this.schemas[e]},inScope:function(e){var t=e.length,r={};for(var n in this.uris)if(n.substr(0,t+1)===e+"/"){var o=this.uris[n];r[o]=this.schemas[o];}return r}},n=function(e){var t=new Error("Schema not found: "+e);return t.name="SchemaNotFound",t};n.prototype=Error.prototype,r.SchemaNotFound=n,e.exports=r;},function(e,t){function r(e){this.defaultValue=e,this._canPropagate=!1,this._storage={},this._itemsRev={},this.activatePropagation();}r.prototype={get:function(e){e=e.toLowerCase();var t=this._storage[e];return void 0===t&&(t=this.defaultValue,this._storage[e]=t),t},set:function(e,t){return e=e.toLowerCase(),this._storage[e]===t?t:(this._storage[e]=t,t||delete this._itemsRev[e],this._updateParentFolderItemRev(e,t),this._canPropagate&&this._propagate(e),t)},delete:function(e){return this.set(e,null)},deactivatePropagation:function(){return this._canPropagate=!1,!0},activatePropagation:function(){return !!this._canPropagate||(this._generateFolderRev("/"),this._canPropagate=!0,!0)},_hashCode:function(e){var t,r=0;if(0===e.length)return r;for(t=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t),r|=0;return r},_generateHash:function(e){var t=e.sort().join("|");return ""+this._hashCode(t)},_updateParentFolderItemRev:function(e,t){if("/"!==e){var r=this._getParentFolder(e);this._itemsRev[r]||(this._itemsRev[r]={});var n=this._itemsRev[r];t?n[e]=t:delete n[e],this._updateParentFolderItemRev(r,this.defaultValue);}},_getParentFolder:function(e){return e.substr(0,e.lastIndexOf("/",e.length-2)+1)},_propagate:function(e){if("/"!==e){var t=this._getParentFolder(e),r=this._itemsRev[t],n=[];for(var o in r)n.push(r[o]);var i=this._generateHash(n);this.set(t,i);}},_generateFolderRev:function(e){var t=this._itemsRev[e],r=this.defaultValue;if(t){var n=[];for(var o in t){var i=void 0;i="/"===o.substr(-1)?this._generateFolderRev(o):t[o],n.push(i);}n.length>0&&(r=this._generateHash(n));}return this.set(e,r),r}},e.exports=r;},function(e,t,r){var n;
    /*!
     * webfinger.js
     *   version 2.7.0
     *   http://github.com/silverbucket/webfinger.js
     *
     * Developed and Maintained by:
     *   Nick Jennings <nick@silverbucket.net> 2012
     *
     * webfinger.js is released under the AGPL (see LICENSE).
     *
     * You don't have to do anything special to choose one license or the other and you don't
     * have to notify anyone which license you are using.
     * Please see the corresponding license file for details of these licenses.
     * You are free to use, modify and distribute this software, but all copyright
     * information must remain.
     *
     */"function"!=typeof fetch&&"function"!=typeof XMLHttpRequest&&(XMLHttpRequest=r(26)),function(r){var o={"http://webfist.org/spec/rel":"webfist","http://webfinger.net/rel/avatar":"avatar",remotestorage:"remotestorage","http://tools.ietf.org/id/draft-dejong-remotestorage":"remotestorage",remoteStorage:"remotestorage","http://www.packetizer.com/rel/share":"share","http://webfinger.net/rel/profile-page":"profile",me:"profile",vcard:"vcard",blog:"blog","http://packetizer.com/rel/blog":"blog","http://schemas.google.com/g/2010#updates-from":"updates","https://camlistore.org/rel/server":"camilstore"},i={avatar:[],remotestorage:[],blog:[],vcard:[],updates:[],share:[],profile:[],webfist:[],camlistore:[]},s=["webfinger","host-meta","host-meta.json"];function a(e){return e.toString=function(){return this.message},e}function u(e){"object"!=typeof e&&(e={}),this.config={tls_only:void 0===e.tls_only||e.tls_only,webfist_fallback:void 0!==e.webfist_fallback&&e.webfist_fallback,uri_fallback:void 0!==e.uri_fallback&&e.uri_fallback,request_timeout:void 0!==e.request_timeout?e.request_timeout:1e4};}u.prototype.__fetchJRD=function(e,t,r){if("function"==typeof fetch)return this.__fetchJRD_fetch(e,t,r);if("function"==typeof XMLHttpRequest)return this.__fetchJRD_XHR(e,t,r);throw new Error("add a polyfill for fetch or XMLHttpRequest")},u.prototype.__fetchJRD_fetch=function(e,t,r){var n,o=this;"function"==typeof AbortController&&(n=new AbortController);var i=fetch(e,{headers:{Accept:"application/jrd+json, application/json"},signal:n?n.signal:void 0}).then((function(t){if(t.ok)return t.text();throw 404===t.status?a({message:"resource not found",url:e,status:t.status}):a({message:"error during request",url:e,status:t.status})}),(function(t){throw a({message:"error during request",url:e,status:void 0,err:t})})).then((function(t){if(o.__isValidJSON(t))return t;throw a({message:"invalid json",url:e,status:void 0})})),s=new Promise((function(t,r){setTimeout((function(){r(a({message:"request timed out",url:e,status:void 0})),n&&n.abort();}),o.config.request_timeout);}));Promise.race([i,s]).then((function(e){r(e);})).catch((function(e){t(e);}));},u.prototype.__fetchJRD_XHR=function(e,t,r){var n=this,o=!1,i=new XMLHttpRequest;function s(){if(!o){if(o=!0,200===i.status)return n.__isValidJSON(i.responseText)?r(i.responseText):t(a({message:"invalid json",url:e,status:i.status}));if(404===i.status)return t(a({message:"resource not found",url:e,status:i.status}));if(i.status>=301&&i.status<=302){var s=i.getResponseHeader("Location");return function(e){return "string"==typeof e&&"https"===e.split("://")[0]}(s)?u():t(a({message:"no redirect URL found",url:e,status:i.status}))}return t(a({message:"error during request",url:e,status:i.status}))}}function u(){i.onreadystatechange=function(){4===i.readyState&&s();},i.onload=function(){s();},i.ontimeout=function(){return t(a({message:"request timed out",url:e,status:i.status}))},i.open("GET",e,!0),i.timeout=n.config.request_timeout,i.setRequestHeader("Accept","application/jrd+json, application/json"),i.send();}return u()},u.prototype.__isValidJSON=function(e){try{JSON.parse(e);}catch(e){return !1}return !0},u.prototype.__isLocalhost=function(e){return /^localhost(\.localdomain)?(\:[0-9]+)?$/.test(e)},u.prototype.__processJRD=function(e,t,r,n){var s=JSON.parse(t);if("object"!=typeof s||"object"!=typeof s.links)return void 0!==s.error?r(a({message:s.error,request:e})):r(a({message:"unknown response from server",request:e}));var u=s.links;Array.isArray(u)||(u=[]);var c={object:s,json:t,idx:{}};c.idx.properties={name:void 0},c.idx.links=JSON.parse(JSON.stringify(i)),u.map((function(e,t){if(o.hasOwnProperty(e.rel)&&c.idx.links[o[e.rel]]){var r={};Object.keys(e).map((function(t,n){r[t]=e[t];})),c.idx.links[o[e.rel]].push(r);}}));var l=JSON.parse(t).properties;for(var h in l)l.hasOwnProperty(h)&&"http://packetizer.com/ns/name"===h&&(c.idx.properties.name=l[h]);return n(c)},u.prototype.lookup=function(e,t){if("string"!=typeof e)throw new Error("first parameter must be a user address");if("function"!=typeof t)throw new Error("second parameter must be a callback");var r=this,n="";n=e.indexOf("://")>-1?e.replace(/ /g,"").split("/")[2]:e.replace(/ /g,"").split("@")[1];var o=0,i="https";function a(){var t="";return e.split("://")[1]||(t="acct:"),i+"://"+n+"/.well-known/"+s[o]+"?resource="+t+e}function u(e){if(r.config.uri_fallback&&"webfist.org"!==n&&o!==s.length-1)return o+=1,c();if(!r.config.tls_only&&"https"===i)return o=0,i="http",c();if(!r.config.webfist_fallback||"webfist.org"===n)return t(e);o=0,i="http",n="webfist.org";var u=a();r.__fetchJRD(u,t,(function(e){r.__processJRD(u,e,t,(function(e){"object"==typeof e.idx.links.webfist&&"string"==typeof e.idx.links.webfist[0].href&&r.__fetchJRD(e.idx.links.webfist[0].href,t,(function(e){r.__processJRD(u,e,t,(function(e){return t(null,t)}));}));}));}));}function c(){var e=a();r.__fetchJRD(e,u,(function(n){r.__processJRD(e,n,t,(function(e){t(null,e);}));}));}return(r.__isLocalhost(n)&&(i="http"),setTimeout(c,0))},u.prototype.lookupLink=function(e,t,r){if(!i.hasOwnProperty(t))return r("unsupported rel "+t);this.lookup(e,(function(e,n){var o=n.idx.links[t];return e?r(e):0===o.length?r('no links found with rel="'+t+'"'):r(null,o[0])}));},void 0===(n=function(){return u}.apply(t,[]))||(e.exports=n);}();},function(e,t){e.exports=XMLHttpRequest;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(0),i=r(1),s=r(28),a=r(3),u={features:[],featuresDone:0,readyFired:!1,loadFeatures:function(){var e=this;for(var t in this.features=[],this.featuresDone=0,this.readyFired=!1,this.featureModules={WireClient:r(6),Dropbox:r(11),GoogleDrive:r(13),Access:r(15),Discover:r(14),Authorize:r(4),BaseClient:r(5),Env:r(12)},a.cache&&o.extend(this.featureModules,{Caching:r(16),IndexedDB:r(29),LocalStorage:r(30),InMemoryStorage:r(31),Sync:r(7)}),a.disableFeatures.forEach((function(t){e.featureModules[t]&&delete e.featureModules[t];})),this._allLoaded=!1,this.featureModules)this.loadFeature(t);},hasFeature:function(e){for(var t=this.features.length-1;t>=0;t--)if(this.features[t].name===e)return this.features[t].supported;return !1},loadFeature:function(e){var t=this,r=this.featureModules[e],o=!r._rs_supported||r._rs_supported();i("[RemoteStorage] [FEATURE ".concat(e,"] initializing ...")),"object"===n(o)?o.then((function(){t.featureSupported(e,!0),t.initFeature(e);}),(function(){t.featureSupported(e,!1);})):"boolean"==typeof o?(this.featureSupported(e,o),o&&this.initFeature(e)):this.featureSupported(e,!1);},initFeature:function(e){var t,r=this,o=this.featureModules[e];try{t=o._rs_init(this);}catch(t){return void this.featureFailed(e,t)}"object"===n(t)&&"function"==typeof t.then?t.then((function(){r.featureInitialized(e);}),(function(t){r.featureFailed(e,t);})):this.featureInitialized(e);},featureFailed:function(e,t){i("[RemoteStorage] [FEATURE ".concat(e,"] initialization failed (").concat(t,")")),this.featureDone();},featureSupported:function(e,t){i("[RemoteStorage] [FEATURE ".concat(e,"]  ").concat(t?"":" not"," supported")),t||this.featureDone();},featureInitialized:function(e){i("[RemoteStorage] [FEATURE ".concat(e,"] initialized.")),this.features.push({name:e,init:this.featureModules[e]._rs_init,supported:!0,cleanup:this.featureModules[e]._rs_cleanup}),this.featureDone();},featureDone:function(){this.featuresDone++,this.featuresDone===Object.keys(this.featureModules).length&&setTimeout(this.featuresLoaded.bind(this),0);},_setCachingModule:function(){var e=this;["IndexedDB","LocalStorage","InMemoryStorage"].some((function(t){if(e.features.some((function(e){return e.name===t})))return e.features.local=e.featureModules[t],!0}));},_fireReady:function(){try{this.readyFired||(this._emit("ready"),this.readyFired=!0);}catch(e){console.error("'ready' failed: ",e,e.stack),this._emit("error",e);}},featuresLoaded:function(){var e=this;i("[REMOTESTORAGE] All features loaded !"),this._setCachingModule(),this.local=a.cache&&this.features.local&&new this.features.local,this.local&&this.remote?(this._setGPD(s,this),this._bindChange(this.local)):this.remote&&this._setGPD(this.remote,this.remote),this.remote&&(this.remote.on("connected",(function(){e._fireReady(),e._emit("connected");})),this.remote.on("not-connected",(function(){e._fireReady(),e._emit("not-connected");})),this.remote.connected&&(this._fireReady(),this._emit("connected")),this.hasFeature("Authorize")||this.remote.stopWaitingForToken()),this._collectCleanupFunctions();try{this._allLoaded=!0,this._emit("features-loaded");}catch(e){o.logError(e),this._emit("error",e);}this._processPending();},_collectCleanupFunctions:function(){this._cleanups=[];for(var e=0;e<this.features.length;e++){var t=this.features[e].cleanup;"function"==typeof t&&this._cleanups.push(t);}}};e.exports=u;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=r(1);function i(e){return "dropbox"===this.backend&&e.match(/^\/public\/.*[^\/]$/)}var s={get:function(e,t){if(this.local){if(void 0===t)t="object"===n((r=this).remote)&&r.remote.connected&&r.remote.online?2*r.getSyncInterval():(o("Not setting default maxAge, because remote is offline or not connected"),!1);else if("number"!=typeof t&&!1!==t)return Promise.reject("Argument 'maxAge' must be 'false' or a number");return this.local.get(e,t,this.sync.queueGetRequest.bind(this.sync))}return this.remote.get(e);var r;},put:function(e,t,r){return i.bind(this)(e)?s._wrapBusyDone.call(this,this.remote.put(e,t,r)):this.local?this.local.put(e,t,r):s._wrapBusyDone.call(this,this.remote.put(e,t,r))},delete:function(e){return this.local?this.local.delete(e):s._wrapBusyDone.call(this,this.remote.delete(e))},_wrapBusyDone:function(e){var t=this;return this._emit("wire-busy"),e.then((function(e){return t._emit("wire-done",{success:!0}),Promise.resolve(e)}),(function(e){return t._emit("wire-done",{success:!1}),Promise.reject(e)}))}};e.exports=s;},function(e,t,r){function n(e){return (n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o,i=r(1),s=r(8),a=r(2),u=r(0),c=function(e){this.db=e||o,this.db?(s(this),a(this,"change","local-events-done"),this.getsRunning=0,this.putsRunning=0,this.changesQueued={},this.changesRunning={}):i("[IndexedDB] Failed to open DB");};c.prototype={getNodes:function(e){for(var t=[],r={},n=0,o=e.length;n<o;n++)void 0!==this.changesQueued[e[n]]?r[e[n]]=u.deepClone(this.changesQueued[e[n]]||void 0):void 0!==this.changesRunning[e[n]]?r[e[n]]=u.deepClone(this.changesRunning[e[n]]||void 0):t.push(e[n]);return t.length>0?this.getNodesFromDb(t).then((function(e){for(var t in r)e[t]=r[t];return e})):Promise.resolve(r)},setNodes:function(e){for(var t in e)this.changesQueued[t]=e[t]||!1;return this.maybeFlush(),Promise.resolve()},maybeFlush:function(){0===this.putsRunning?this.flushChangesQueued():this.commitSlownessWarning||(this.commitSlownessWarning=setInterval((function(){console.warn("WARNING: waited more than 10 seconds for previous commit to finish");}),1e4));},flushChangesQueued:function(){this.commitSlownessWarning&&(clearInterval(this.commitSlownessWarning),this.commitSlownessWarning=null),Object.keys(this.changesQueued).length>0&&(this.changesRunning=this.changesQueued,this.changesQueued={},this.setNodesInDb(this.changesRunning).then(this.flushChangesQueued.bind(this)));},getNodesFromDb:function(e){var t=this;return new Promise((function(r,n){var o=t.db.transaction(["nodes"],"readonly"),i=o.objectStore("nodes"),s={};t.getsRunning++,e.map((function(e){i.get(e).onsuccess=function(t){s[e]=t.target.result;};})),o.oncomplete=function(){r(s),this.getsRunning--;}.bind(t),o.onerror=o.onabort=function(){n("get transaction error/abort"),this.getsRunning--;}.bind(t);}))},setNodesInDb:function(e){var t=this;return new Promise((function(r,o){var s=t.db.transaction(["nodes"],"readwrite"),a=s.objectStore("nodes"),u=(new Date).getTime();for(var c in t.putsRunning++,i("[IndexedDB] Starting put",e,t.putsRunning),e){var l=e[c];if("object"===n(l))try{a.put(l);}catch(e){throw i("[IndexedDB] Error while putting",l,e),e}else try{a.delete(c);}catch(e){throw i("[IndexedDB] Error while removing",a,l,e),e}}s.oncomplete=function(){this.putsRunning--,i("[IndexedDB] Finished put",e,this.putsRunning,(new Date).getTime()-u+"ms"),r();}.bind(t),s.onerror=function(){this.putsRunning--,o("transaction error");}.bind(t),s.onabort=function(){o("transaction abort"),this.putsRunning--;}.bind(t);}))},reset:function(e){var t=this,r=this.db.name;this.db.close(),c.clean(this.db.name,(function(){c.open(r,(function(r,n){r?i("[IndexedDB] Error while resetting local storage",r):t.db=n,"function"==typeof e&&e(self);}));}));},forAllNodes:function(e){var t=this;return new Promise((function(r){t.db.transaction(["nodes"],"readonly").objectStore("nodes").openCursor().onsuccess=function(n){var o=n.target.result;o?(e(t.migrate(o.value)),o.continue()):r();};}))},closeDB:function(){0===this.putsRunning?this.db.close():setTimeout(this.closeDB.bind(this),100);}},c.open=function(e,t){var r=setTimeout((function(){t("timeout trying to open db");}),1e4);try{var n=indexedDB.open(e,2);n.onerror=function(){i("[IndexedDB] Opening DB failed",n),clearTimeout(r),t(n.error);},n.onupgradeneeded=function(e){var t=n.result;i("[IndexedDB] Upgrade: from ",e.oldVersion," to ",e.newVersion),1!==e.oldVersion&&(i("[IndexedDB] Creating object store: nodes"),t.createObjectStore("nodes",{keyPath:"path"})),i("[IndexedDB] Creating object store: changes"),t.createObjectStore("changes",{keyPath:"path"});},n.onsuccess=function(){clearTimeout(r);var o=n.result;if(!o.objectStoreNames.contains("nodes")||!o.objectStoreNames.contains("changes"))return i("[IndexedDB] Missing object store. Resetting the database."),void c.clean(e,(function(){c.open(e,t);}));t(null,n.result);};}catch(n){i("[IndexedDB] Failed to open database: "+n),i("[IndexedDB] Resetting database and trying again."),clearTimeout(r),c.clean(e,(function(){c.open(e,t);}));}},c.clean=function(e,t){var r=indexedDB.deleteDatabase(e);r.onsuccess=function(){i("[IndexedDB] Done removing DB"),t();},r.onerror=r.onabort=function(t){console.error('Failed to remove database "'+e+'"',t);};},c._rs_init=function(e){return new Promise((function(t,r){c.open("remotestorage",(function(n,i){n?r(n):(o=i,i.onerror=function(){e._emit("error",n);},t());}));}))},c._rs_supported=function(){return new Promise((function(e,t){var r=u.getGlobalContext(),n=!1;if("undefined"!=typeof navigator&&navigator.userAgent.match(/Android (2|3|4\.[0-3])/)&&(navigator.userAgent.match(/Chrome|Firefox/)||(n=!0)),"indexedDB"in r&&!n)try{var o=indexedDB.open("rs-check");o.onerror=function(){t();},o.onsuccess=function(){o.result.close(),indexedDB.deleteDatabase("rs-check"),e();};}catch(e){t();}else t();}))},c._rs_cleanup=function(e){return new Promise((function(t){e.local&&e.local.closeDB(),c.clean("remotestorage",t);}))},e.exports=c;},function(e,t,r){var n=r(8),o=r(1),i=r(2),s=r(0),a="remotestorage:cache:nodes:",u=function(){n(this),o("[LocalStorage] Registering events"),i(this,"change","local-events-done");};function c(e){return e.substr(0,a.length)===a||"remotestorage:cache:changes:"===e.substr(0,"remotestorage:cache:changes:".length)}u.prototype={getNodes:function(e){for(var t={},r=0,n=e.length;r<n;r++)try{t[e[r]]=JSON.parse(localStorage[a+e[r]]);}catch(n){t[e[r]]=void 0;}return Promise.resolve(t)},setNodes:function(e){for(var t in e)localStorage[a+t]=JSON.stringify(e[t]);return Promise.resolve()},forAllNodes:function(e){for(var t,r=0,n=localStorage.length;r<n;r++)if(localStorage.key(r).substr(0,a.length)===a){try{t=this.migrate(JSON.parse(localStorage[localStorage.key(r)]));}catch(e){t=void 0;}t&&e(t);}return Promise.resolve()}},u._rs_init=function(){},u._rs_supported=function(){return s.localStorageAvailable()},u._rs_cleanup=function(){for(var e=[],t=0,r=localStorage.length;t<r;t++){var n=localStorage.key(t);c(n)&&e.push(n);}e.forEach((function(e){o("[LocalStorage] Removing",e),delete localStorage[e];}));},e.exports=u;},function(e,t,r){var n=r(2),o=r(1),i=r(8),s=function(){i(this),o("[InMemoryStorage] Registering events"),n(this,"change","local-events-done"),this._storage={};};s.prototype={getNodes:function(e){for(var t={},r=0,n=e.length;r<n;r++)t[e[r]]=this._storage[e[r]];return Promise.resolve(t)},setNodes:function(e){for(var t in e)void 0===e[t]?delete this._storage[t]:this._storage[t]=e[t];return Promise.resolve()},forAllNodes:function(e){for(var t in this._storage)e(this.migrate(this._storage[t]));return Promise.resolve()}},s._rs_init=function(){},s._rs_supported=function(){return !0},s._rs_cleanup=function(){},e.exports=s;},function(e,t,r){var n=r(5),o=r(9);o.prototype.addModule=function(e){var t=e.name,r=e.builder;if(Object.defineProperty(this,t,{configurable:!0,get:function(){var e=this._loadModule(t,r);return Object.defineProperty(this,t,{value:e}),e}}),-1!==t.indexOf("-")){var n=t.replace(/\-[a-z]/g,(function(e){return e[1].toUpperCase()}));Object.defineProperty(this,n,{get:function(){return this[t]}});}},o.prototype._loadModule=function(e,t){if(t)return t(new n(this,"/"+e+"/"),new n(this,"/public/"+e+"/")).exports;throw"Unknown module: "+e};}])}));

    });

    var RemoteStorage = unwrapExports(remotestorage);
    var remotestorage_1 = remotestorage.RemoteStorage;

    var main$b = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKLanguageSwitcherCodesMap () {
    		return {
    			en: 'English',
    			fr: 'Français',
    			es: 'Español',
    			pt: 'Português',
    		};
    	},

    	OLSKLanguageSwitcherLauncherFakeItemProxy () {
    		return {
    			LCHRecipeName: 'OLSKLanguageSwitcherLauncherFakeItemProxy',
    			LCHRecipeCallback () {},
    		};
    	},

    	OLSKLanguageSwitcherLauncherItemSwitch (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamLanguageCode !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamRouteConstant !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKCanonical !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: ['OLSKLanguageSwitcherLauncherItemSwitch', params.ParamLanguageCode].join('-'),
    			LCHRecipeName: mod.OLSKLanguageSwitcherCodesMap()[params.ParamLanguageCode],
    			LCHRecipeCallback () {
    				(debug.DebugWindow || window).location.href = params.OLSKCanonical(params.ParamRouteConstant, {
    					OLSKRoutingLanguage: params.ParamLanguageCode,
    				});
    			},
    			LCHRecipeIsExcluded () {
    				return !!params.ParamAuthorized;
    			},
    		};
    	},

    	OLSKLanguageSwitcherRecipes (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!Array.isArray(params.ParamLanguageCodes)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamCurrentLanguage !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamSpecUI !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			mod.OLSKLanguageSwitcherLauncherFakeItemProxy(),
    		].concat(params.ParamLanguageCodes.filter(function (e) {
    			return e !== params.ParamCurrentLanguage;
    		}).map(function (ParamLanguageCode) {
    			return mod.OLSKLanguageSwitcherLauncherItemSwitch(Object.assign(Object.assign(Object.assign({}, params), {}), {
    				ParamLanguageCode,
    			}))
    		})).filter(function (e) {
    			if (params.ParamSpecUI) {
    				return true;
    			}

    			return !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);
    		});
    	},

    };

    Object.assign(exports, mod);
    });

    var inherits_browser = createCommonjsModule(function (module) {
    if (typeof Object.create === 'function') {
      // implementation from standard node.js 'util' module
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
              value: ctor,
              enumerable: false,
              writable: true,
              configurable: true
            }
          });
        }
      };
    } else {
      // old school shim for old browsers
      module.exports = function inherits(ctor, superCtor) {
        if (superCtor) {
          ctor.super_ = superCtor;
          var TempCtor = function () {};
          TempCtor.prototype = superCtor.prototype;
          ctor.prototype = new TempCtor();
          ctor.prototype.constructor = ctor;
        }
      };
    }
    });

    // var  EventEmitter = require('events').EventEmitter

    var queue = Queue;
    var default_1 = Queue;

    function Queue (options) {
      if (!(this instanceof Queue)) {
        return new Queue(options)
      }

      this.emit = function () {}; // EventEmitter.call( this)
      options = options || {};
      this.concurrency = options.concurrency || Infinity;
      this.timeout = options.timeout || 0;
      this.autostart = options.autostart || false;
      this.results = options.results || null;
      this.pending = 0;
      this.session = 0;
      this.running = false;
      this.jobs = [];
      this.timers = {};
    }
    // inherits( Queue, EventEmitter)

    var arrayMethods = [
      'pop',
      'shift',
      'indexOf',
      'lastIndexOf'
    ];

    arrayMethods.forEach(function (method) {
      Queue.prototype[method] = function () {
        return Array.prototype[method].apply(this.jobs, arguments)
      };
    });

    Queue.prototype.slice = function (begin, end) {
      this.jobs = this.jobs.slice(begin, end);
      return this
    };

    Queue.prototype.reverse = function () {
      this.jobs.reverse();
      return this
    };

    var arrayAddMethods = [
      'push',
      'unshift',
      'splice'
    ];

    arrayAddMethods.forEach(function (method) {
      Queue.prototype[method] = function () {
        var methodResult = Array.prototype[method].apply(this.jobs, arguments);
        if (this.autostart) {
          this.start();
        }
        return methodResult
      };
    });

    Object.defineProperty(Queue.prototype, 'length', {
      get: function () {
        return this.pending + this.jobs.length
      }
    });

    Queue.prototype.start = function (cb) {
      if (cb) {
        callOnErrorOrEnd.call(this, cb);
      }

      this.running = true;

      if (this.pending >= this.concurrency) {
        return
      }

      if (this.jobs.length === 0) {
        if (this.pending === 0) {
          done.call(this);
        }
        return
      }

      var self = this;
      var job = this.jobs.shift();
      var once = true;
      var session = this.session;
      var timeoutId = null;
      var didTimeout = false;
      var resultIndex = null;
      var timeout = job.hasOwnProperty('timeout') ? job.timeout : this.timeout;

      function next (err, result) {
        if (once && self.session === session) {
          once = false;
          self.pending--;
          if (timeoutId !== null) {
            delete self.timers[timeoutId];
            clearTimeout(timeoutId);
          }

          if (err) {
            self.emit('error', err, job);
          } else if (didTimeout === false) {
            if (resultIndex !== null) {
              self.results[resultIndex] = Array.prototype.slice.call(arguments, 1);
            }
            self.emit('success', result, job);
          }

          if (self.session === session) {
            if (self.pending === 0 && self.jobs.length === 0) {
              done.call(self);
            } else if (self.running) {
              self.start();
            }
          }
        }
      }

      if (timeout) {
        timeoutId = setTimeout(function () {
          didTimeout = true;
          if (self.listeners('timeout').length > 0) {
            self.emit('timeout', next, job);
          } else {
            next();
          }
        }, timeout);
        this.timers[timeoutId] = timeoutId;
      }

      if (this.results) {
        resultIndex = this.results.length;
        this.results[resultIndex] = null;
      }

      this.pending++;
      self.emit('start', job);
      var promise = job(next);
      if (promise && promise.then && typeof promise.then === 'function') {
        promise.then(function (result) {
          return next(null, result)
        }).catch(function (err) {
          return next(err || true)
        });
      }

      if (this.running && this.jobs.length > 0) {
        this.start();
      }
    };

    Queue.prototype.stop = function () {
      this.running = false;
    };

    Queue.prototype.end = function (err) {
      clearTimers.call(this);
      this.jobs.length = 0;
      this.pending = 0;
      done.call(this, err);
    };

    function clearTimers () {
      for (var key in this.timers) {
        var timeoutId = this.timers[key];
        delete this.timers[key];
        clearTimeout(timeoutId);
      }
    }

    function callOnErrorOrEnd (cb) {
      var self = this;
      this.on('error', onerror);
      this.on('end', onend);

      function onerror (err) { self.end(err); }
      function onend (err) {
        self.removeListener('error', onerror);
        self.removeListener('end', onend);
        cb(err, this.results);
      }
    }

    function done (err) {
      this.session++;
      this.running = false;
      this.emit('end', err);
    }
    queue.default = default_1;

    var main$c = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKQueueAPI (inputData = {}) {
    		if (typeof inputData !== 'undefined') {
    			if (typeof inputData !== 'object' || inputData === null) {
    				throw new Error('OLSKErrorInputNotValid');
    			}
    		}

    		return {

    			OLSKQueueAdd (inputData) {
    				if (typeof inputData !== 'function') {
    					throw new Error('OLSKErrorInputNotValid');
    				}

    				const _this = this;

    				return new Promise(function (res, rej) {
    					_this._OLSKQueueObject.push(async function (_queue_callback) {
    						try {
    							return _queue_callback(null, res(await inputData()));
    						} catch (error) {
    							return rej(error);
    						}
    					});
    				});
    			},
    			
    			_OLSKQueueObject: this._DataFoilQueue(Object.assign(mod._DataQueueConfig(), inputData)),
    		};
    	},

    	// DATA

    	_DataFoilQueue: queue,

    	_DataQueueConfig () {
    		return {
    			concurrency: 1,
    			autostart: true,
    		};
    	},

    };

    Object.assign(exports, mod);
    });

    var main$d = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKTransportExportBasename (debug = {}) {
    		return (debug.DebugWindow || window).location.hostname + '-' + (debug.DebugDate || Date).now();
    	},

    	OLSKTransportExportJSONFilename (debug = {}) {
    		return this.OLSKTransportExportBasename(debug) + '.json';
    	},

    	OLSKTransportLauncherFakeItemProxy () {
    		return {
    			LCHRecipeName: 'OLSKTransportLauncherFakeItemProxy',
    			LCHRecipeCallback () {},
    		};
    	},

    	_AlertIfNotValid (text, params, debug = {}) {
    		if (!text.trim()) {
    			return (debug.DebugWindow || window).alert(params.OLSKLocalized('OLSKTransportLauncherItemImportJSONErrorNotFilledAlertText'));
    		}

    		if (!text.startsWith('{') || !text.endsWith('}')) {
    			return (debug.DebugWindow || window).alert(params.OLSKLocalized('OLSKTransportLauncherItemImportJSONErrorNotValidAlertText'));
    		}

    		try {
    			return params.OLSKTransportDispatchImportJSON(JSON.parse(text));
    		} catch {
    			return (debug.DebugWindow || window).alert(params.OLSKLocalized('OLSKTransportLauncherItemImportJSONErrorNotValidAlertText'));
    		}
    	},

    	OLSKTransportLauncherItemImportJSON (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof params.OLSKTransportDispatchImportJSON !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKTransportLauncherItemImportJSON',
    			LCHRecipeName: params.OLSKLocalized('OLSKTransportLauncherItemImportJSONText'),
    			async LCHRecipeCallback () {
    				const text = await this.api.LCHReadTextFile({
    					accept: '.json',
    				});

    				return mod._AlertIfNotValid(text, params, debug);
    			},
    		};
    	},

    	OLSKTransportLauncherItemExportJSON (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof params.OLSKTransportDispatchExportInput !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKTransportLauncherItemExportJSON',
    			LCHRecipeName: params.OLSKLocalized('OLSKTransportLauncherItemExportJSONText'),
    			async LCHRecipeCallback (inputData) {
    				return this.api.LCHSaveFile(JSON.stringify(inputData || await params.OLSKTransportDispatchExportInput()), mod.OLSKTransportExportJSONFilename(debug));
    			},
    		};
    	},

    	OLSKTransportLauncherFakeItemImportSerialized (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKTransportDispatchImportJSON !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'OLSKTransportLauncherFakeItemImportSerialized',
    			LCHRecipeCallback () {
    				return mod._AlertIfNotValid((debug.DebugWindow || window).prompt(), params);
    			},
    		};
    	},

    	OLSKTransportLauncherFakeItemExportSerialized (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKTransportDispatchExportInput !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeSignature: 'OLSKTransportLauncherFakeItemExportSerialized',
    			LCHRecipeName: 'OLSKTransportLauncherFakeItemExportSerialized',
    			async LCHRecipeCallback (inputData) {
    				return (debug.DebugWindow || window).alert(JSON.stringify({
    					OLSKDownloadName: mod.OLSKTransportExportJSONFilename(debug),
    					OLSKDownloadData: JSON.stringify(inputData || await params.OLSKTransportDispatchExportInput()),
    				}));
    			},
    		};
    	},

    	OLSKTransportRecipes (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamSpecUI !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			mod.OLSKTransportLauncherFakeItemProxy(),
    			mod.OLSKTransportLauncherItemImportJSON(params),
    			mod.OLSKTransportLauncherItemExportJSON(params),
    			mod.OLSKTransportLauncherFakeItemImportSerialized(params),
    			mod.OLSKTransportLauncherFakeItemExportSerialized(params),
    		].filter(function (e) {
    			if (params.ParamSpecUI) {
    				return true;
    			}

    			return !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);
    		});
    	},

    };

    Object.assign(exports, mod);
    });

    var main$e = createCommonjsModule(function (module, exports) {
    const uPromise = function (inputData) {
    	if (inputData instanceof Promise) {
    		return inputData;
    	}

    	return {
    		then (res) {
    			return res(inputData);
    		},
    	};
    };

    const mod = {

    	OLSKHashString (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Object.entries(inputData).map(function (e) {
    			return e.join('=');
    		}).join('&');
    	},

    	OLSKHashObject (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Object.fromEntries((new URLSearchParams(inputData.replace(/^#+/, ''))).entries());
    	},

    	OLSKHashSetup (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKHashDispatchInitialize !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKHashDispatchChange !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return uPromise(params.OLSKHashDispatchInitialize(mod.OLSKHashObject((debug.window || window).location.hash))).then(function () {
    			return (debug.window || window).addEventListener('hashchange', params.OLSKHashDispatchChange, false);
    		});
    	},

    };

    Object.assign(exports, mod);
    });

    var main$f = createCommonjsModule(function (module, exports) {
    const uIsFilled = function (inputData) {
    	return typeof inputData === 'string' && inputData.trim() !== '';
    };

    const uIsDate = function (inputData) {
    	return (inputData instanceof Date) && !Number.isNaN(inputData.getTime());
    };

    const uRandomElement = function () {
    	const array = [].concat(...arguments);
    	return array[Date.now() % array.length];
    };

    const mod = {

    	OLSKPactAuthTypeEmail () {
    		return 'OLSK_PACT_AUTH_TYPE_EMAIL';
    	},

    	OLSKPactAuthTypeRemoteStorage () {
    		return 'OLSK_PACT_AUTH_TYPE_REMOTE_STORAGE';
    	},

    	OLSKPactAuthTypeFission () {
    		return 'OLSK_PACT_AUTH_TYPE_FISSION';
    	},

    	OLSKPactAuthTypes () {
    		return [
    			mod.OLSKPactAuthTypeEmail(),
    			mod.OLSKPactAuthTypeRemoteStorage(),
    			mod.OLSKPactAuthTypeFission(),
    		];
    	},

    	OLSKPactAuthIdentityIsCloudAddress (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return !!inputData.match(/\w+\@\w+\.\w+/);
    	},

    	OLSKPactAuthModelErrors (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const outputData = {};
    		const _error = function (param1, param2) {
    			if (!param2) {
    				return;
    			}

    			outputData[param1] = (outputData[param1] || []).concat(param2);
    		};

    		if (!mod.OLSKPactAuthTypes().includes(inputData.OLSKPactAuthType)) {
    			_error('OLSKPactAuthType', 'OLSKErrorNotAuthType');
    		}

    		if (!uIsFilled(inputData.OLSKPactAuthIdentity)) {
    			_error('OLSKPactAuthIdentity', 'OLSKErrorNotFilled');
    		}

    		if (!uIsFilled(inputData.OLSKPactAuthProof)) {
    			_error('OLSKPactAuthProof', 'OLSKErrorNotFilled');
    		}

    		if (inputData.OLSKPactAuthType === mod.OLSKPactAuthTypeRemoteStorage()) {
    			if (!mod.OLSKPactAuthIdentityIsCloudAddress(inputData.OLSKPactAuthIdentity)) {
    				_error('OLSKPactAuthIdentity', 'OLSKErrorNotValid');
    			}

    			const metadata = inputData.OLSKPactAuthMetadata;

    			_error('OLSKPactAuthMetadata', (function() {
    				if (typeof metadata !== 'object' || metadata === null) {
    					return 'OLSKErrorNotObject';
    				}

    				if (!uIsFilled(metadata.OLSKPactAuthMetadataModuleName)) {
    					return 'OLSKErrorNotValid';
    				}

    				if (!uIsFilled(metadata.OLSKPactAuthMetadataFolderPath)) {
    					return 'OLSKErrorNotValid';
    				}

    				if (!metadata.OLSKPactAuthMetadataFolderPath.slice(0, -1).trim()) {
    					return 'OLSKErrorNotValid';
    				}

    				if (metadata.OLSKPactAuthMetadataFolderPath.slice(-1) !== '/') {
    					return 'OLSKErrorNotValid';
    				}
    			})());
    		}

    		if (inputData.OLSKPactAuthType === mod.OLSKPactAuthTypeEmail()) {
    			if (!outputData.OLSKPactAuthIdentity && !mod.OLSKPactAuthIdentityIsCloudAddress(inputData.OLSKPactAuthIdentity)) {
    				_error('OLSKPactAuthIdentity', 'OLSKErrorNotValid');
    			}
    		}

    		return Object.entries(outputData).length ? outputData : null;
    	},

    	OLSKPactPayProcessorStripe () {
    		return 'OLSK_PACT_PAY_PROCESSOR_STRIPE';
    	},

    	OLSKPactPayProcessorPayPal () {
    		return 'OLSK_PACT_PAY_PROCESSOR_PAYPAL';
    	},

    	OLSKPactPayProcessors () {
    		return [
    			mod.OLSKPactPayProcessorStripe(),
    			mod.OLSKPactPayProcessorPayPal(),
    		];
    	},

    	OLSKPactPayModelErrors (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const outputData = {};
    		const _error = function (param1, param2) {
    			if (!param2) {
    				return;
    			}

    			outputData[param1] = (outputData[param1] || []).concat(param2);
    		};

    		if (!uIsFilled(inputData.OLSKPactPayIdentity)) {
    			_error('OLSKPactPayIdentity', 'OLSKErrorNotFilled');
    		}

    		if (!uIsFilled(inputData.OLSKPactPayClue)) {
    			_error('OLSKPactPayClue', 'OLSKErrorNotFilled');
    		}

    		return Object.entries(outputData).length ? outputData : null;
    	},

    	OLSKPactMetadataCompress (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('RCSErrorInputNotValid');
    		}

    		const result = {};

    		if (inputData.OLSKPactIntentIdentity) {
    			result.a = inputData.OLSKPactIntentIdentity;
    		}

    		if (inputData.OLSKPactIntentClue) {
    			result.b = inputData.OLSKPactIntentClue;
    		}

    		if (inputData.OLSKPactIntentProject) {
    			result.c = inputData.OLSKPactIntentProject;
    		}

    		if (inputData.OLSKPactIntentVoucher) {
    			result.d = inputData.OLSKPactIntentVoucher;
    		}

    		return JSON.stringify(result);
    	},

    	OLSKPactMetadataDecompress (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const result = {};

    		try {
    			Object.assign(result, JSON.parse(inputData));
    		} catch {
    			console.log('OLSKPactMetadataDecompressFailedParse');
    		}

    		return {
    			OLSKPactIntentIdentity: result.a,
    			OLSKPactIntentClue: result.b,
    			OLSKPactIntentProject: result.c,
    			OLSKPactIntentVoucher: result.d,
    		};
    	},

    	OLSKPactGrantFrequencyOptionYearly () {
    		return 'OLSK_PACT_GRANT_FREQUENCY_YEARLY';
    	},

    	OLSKPactGrantFrequencyOptionMonthly () {
    		return 'OLSK_PACT_GRANT_FREQUENCY_MONTHLY';
    	},

    	OLSKPactGrantFrequencyOptionOnce () {
    		return 'OLSK_PACT_GRANT_FREQUENCY_ONCE';
    	},

    	OLSKPactGrantFrequencyOptions () {
    		return [
    			mod.OLSKPactGrantFrequencyOptionYearly(),
    			mod.OLSKPactGrantFrequencyOptionMonthly(),
    			mod.OLSKPactGrantFrequencyOptionOnce(),
    		];
    	},

    	OLSKPactIntentModelIsValid (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('RCSErrorInputNotValid');
    		}

    		if (typeof inputData.OLSKPactIntentIdentity !== 'string') {
    			return false;
    		}

    		if (parseInt(inputData.OLSKPactIntentAmount) !== inputData.OLSKPactIntentAmount) {
    			return false;
    		}

    		if (!mod.OLSKPactGrantFrequencyOptions().includes(inputData.OLSKPactIntentFrequency)) {
    			return false;
    		}

    		if (typeof inputData.OLSKPactIntentClue !== 'string') {
    			return false;
    		}

    		if (typeof inputData.OLSKPactIntentProject !== 'string') {
    			return false;
    		}

    		return true;
    	},

    	OLSKPactGrantModelErrors (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const outputData = {};
    		const _error = function (param1, param2) {
    			if (!param2) {
    				return;
    			}

    			outputData[param1] = (outputData[param1] || []).concat(param2);
    		};

    		if (!Array.isArray(inputData.OLSKPactGrantPublicNumbers)) {
    			_error('OLSKPactGrantPublicNumbers', 'OLSKErrorNotArray');
    		} else if (!inputData.OLSKPactGrantPublicNumbers.length) {
    			_error('OLSKPactGrantPublicNumbers', 'OLSKErrorNotFilled');
    		}

    		if (!uIsFilled(inputData.OLSKPactGrantProject)) {
    			_error('OLSKPactGrantProject', 'OLSKErrorNotFilled');
    		}

    		if (!uIsDate(inputData.OLSKPactGrantStartDate)) {
    			_error('OLSKPactGrantStartDate', 'OLSKErrorNotDate');
    		}

    		if (!uIsDate(inputData.OLSKPactGrantEndDate)) {
    			_error('OLSKPactGrantEndDate', 'OLSKErrorNotDate');
    		}

    		if (typeof inputData.OLSKPactGrantContribution !== 'number') {
    			_error('OLSKPactGrantContribution', 'OLSKErrorNotNumber');
    		}

    		if (!mod.OLSKPactGrantFrequencyOptions().includes(inputData.OLSKPactGrantFrequencyOption)) {
    			_error('OLSKPactGrantFrequencyOption', 'OLSKErrorNotValid');
    		}

    		if (!mod.OLSKPactPayProcessors().includes(inputData.OLSKPactGrantProcessor)) {
    			_error('OLSKPactGrantProcessor', 'OLSKErrorNotValid');
    		}

    		if (!uIsFilled(inputData.OLSKPactGrantProcessorReference)) {
    			_error('OLSKPactGrantProcessorReference', 'OLSKErrorNotFilled');
    		}

    		if (typeof inputData.OLSKPactGrantActive !== 'boolean') {
    			_error('OLSKPactGrantActive', 'OLSKErrorNotBoolean');
    		}
    		
    		if (inputData.OLSKPactGrantVoucher) {
    			if (!uIsFilled(inputData.OLSKPactGrantVoucher)) {
    				_error('OLSKPactGrantVoucher', 'OLSKErrorNotFilled');
    			}
    		}

    		return Object.entries(outputData).length ? outputData : null;
    	},

    	OLSKPactPayMatchProcessor (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (inputData.startsWith('I-')) {
    			return mod.OLSKPactPayProcessorPayPal();
    		}

    		if (inputData.startsWith('sub_')) {
    			return mod.OLSKPactPayProcessorStripe();
    		}

    		throw new Error('OLSKErrorInputNotValid');
    	},

    	// DATA

    	OLSKPactDataGrantObjectValid (inputData) {
    		return Object.assign({
    			OLSKPactGrantPublicNumbers: [Math.random().toString()],
    			OLSKPactGrantProject: Math.random().toString(),
    			OLSKPactGrantStartDate: new Date(),
    			OLSKPactGrantEndDate: new Date(),
    			OLSKPactGrantContribution: 100,
    			OLSKPactGrantFrequencyOption: uRandomElement(mod.OLSKPactGrantFrequencyOptions()),
    			OLSKPactGrantProcessor: uRandomElement(mod.OLSKPactPayProcessors()),
    			OLSKPactGrantProcessorReference: Math.random().toString(),
    			OLSKPactGrantActive: true,
    		}, inputData);
    	},

    };

    Object.assign(exports, mod);
    });

    var cryptico_1 = createCommonjsModule(function (module) {
    // Copyright (c) 2005  Tom Wu
    // All Rights Reserved.
    // See "LICENSE" for details.
    // Basic JavaScript BN library - subset useful for RSA encryption.

    // Bits per digit
    var dbits;

    // (public) Constructor

    function BigInteger(a, b, c) {
        if (a != null) if ("number" == typeof a) this.fromNumber(a, b, c);
        else if (b == null && "string" != typeof a) this.fromString(a, 256);
        else this.fromString(a, b);
    }

    // return new, unset BigInteger

    function nbi() {
        return new BigInteger(null);
    }

    // am: Compute w_j += (x*this_i), propagate carries,
    // c is initial carry, returns final carry.
    // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
    // We need to select the fastest one that works in this environment.
    // am1: use a single mult and divide to get the high bits,
    // max digit bits should be 26 because
    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)

    function am1(i, x, w, j, c, n) {
        while (--n >= 0) {
            var v = x * this[i++] + w[j] + c;
            c = Math.floor(v / 0x4000000);
            w[j++] = v & 0x3ffffff;
        }
        return c;
    }
    // am2 avoids a big mult-and-extract completely.
    // Max digit bits should be <= 30 because we do bitwise ops
    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)

    function am2(i, x, w, j, c, n) {
        var xl = x & 0x7fff,
            xh = x >> 15;
        while (--n >= 0) {
            var l = this[i] & 0x7fff;
            var h = this[i++] >> 15;
            var m = xh * l + h * xl;
            l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
            c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
            w[j++] = l & 0x3fffffff;
        }
        return c;
    }
    // Alternately, set max digit bits to 28 since some
    // browsers slow down when dealing with 32-bit numbers.

    function am3(i, x, w, j, c, n) {
        var xl = x & 0x3fff,
            xh = x >> 14;
        while (--n >= 0) {
            var l = this[i] & 0x3fff;
            var h = this[i++] >> 14;
            var m = xh * l + h * xl;
            l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
            c = (l >> 28) + (m >> 14) + xh * h;
            w[j++] = l & 0xfffffff;
        }
        return c;
    }
    if ( (navigator.appName == "Microsoft Internet Explorer")) {
        BigInteger.prototype.am = am2;
        dbits = 30;
    }
    else if ( (navigator.appName != "Netscape")) {
        BigInteger.prototype.am = am1;
        dbits = 26;
    }
    else { // Mozilla/Netscape seems to prefer am3
        BigInteger.prototype.am = am3;
        dbits = 28;
    }

    BigInteger.prototype.DB = dbits;
    BigInteger.prototype.DM = ((1 << dbits) - 1);
    BigInteger.prototype.DV = (1 << dbits);

    var BI_FP = 52;
    BigInteger.prototype.FV = Math.pow(2, BI_FP);
    BigInteger.prototype.F1 = BI_FP - dbits;
    BigInteger.prototype.F2 = 2 * dbits - BI_FP;

    // Digit conversions
    var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
    var BI_RC = new Array();
    var rr, vv;
    rr = "0".charCodeAt(0);
    for (vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
    rr = "a".charCodeAt(0);
    for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
    rr = "A".charCodeAt(0);
    for (vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;

    function int2char(n) {
        return BI_RM.charAt(n);
    }

    function intAt(s, i) {
        var c = BI_RC[s.charCodeAt(i)];
        return (c == null) ? -1 : c;
    }

    // (protected) copy this to r

    function bnpCopyTo(r) {
        for (var i = this.t - 1; i >= 0; --i) r[i] = this[i];
        r.t = this.t;
        r.s = this.s;
    }

    // (protected) set from integer value x, -DV <= x < DV

    function bnpFromInt(x) {
        this.t = 1;
        this.s = (x < 0) ? -1 : 0;
        if (x > 0) this[0] = x;
        else if (x < -1) this[0] = x + DV;
        else this.t = 0;
    }

    // return bigint initialized to value

    function nbv(i) {
        var r = nbi();
        r.fromInt(i);
        return r;
    }

    // (protected) set from string and radix

    function bnpFromString(s, b) {
        var k;
        if (b == 16) k = 4;
        else if (b == 8) k = 3;
        else if (b == 256) k = 8; // byte array
        else if (b == 2) k = 1;
        else if (b == 32) k = 5;
        else if (b == 4) k = 2;
        else {
            this.fromRadix(s, b);
            return;
        }
        this.t = 0;
        this.s = 0;
        var i = s.length,
            mi = false,
            sh = 0;
        while (--i >= 0) {
            var x = (k == 8) ? s[i] & 0xff : intAt(s, i);
            if (x < 0) {
                if (s.charAt(i) == "-") mi = true;
                continue;
            }
            mi = false;
            if (sh == 0) this[this.t++] = x;
            else if (sh + k > this.DB) {
                this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;
                this[this.t++] = (x >> (this.DB - sh));
            }
            else this[this.t - 1] |= x << sh;
            sh += k;
            if (sh >= this.DB) sh -= this.DB;
        }
        if (k == 8 && (s[0] & 0x80) != 0) {
            this.s = -1;
            if (sh > 0) this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;
        }
        this.clamp();
        if (mi) BigInteger.ZERO.subTo(this, this);
    }

    // (protected) clamp off excess high words

    function bnpClamp() {
        var c = this.s & this.DM;
        while (this.t > 0 && this[this.t - 1] == c)--this.t;
    }

    // (public) return string representation in given radix

    function bnToString(b) {
        if (this.s < 0) return "-" + this.negate().toString(b);
        var k;
        if (b == 16) k = 4;
        else if (b == 8) k = 3;
        else if (b == 2) k = 1;
        else if (b == 32) k = 5;
        else if (b == 64) k = 6;
        else if (b == 4) k = 2;
        else return this.toRadix(b);
        var km = (1 << k) - 1,
            d, m = false,
            r = "",
            i = this.t;
        var p = this.DB - (i * this.DB) % k;
        if (i-- > 0) {
            if (p < this.DB && (d = this[i] >> p) > 0) {
                m = true;
                r = int2char(d);
            }
            while (i >= 0) {
                if (p < k) {
                    d = (this[i] & ((1 << p) - 1)) << (k - p);
                    d |= this[--i] >> (p += this.DB - k);
                }
                else {
                    d = (this[i] >> (p -= k)) & km;
                    if (p <= 0) {
                        p += this.DB;
                        --i;
                    }
                }
                if (d > 0) m = true;
                if (m) r += int2char(d);
            }
        }
        return m ? r : "0";
    }

    // (public) -this

    function bnNegate() {
        var r = nbi();
        BigInteger.ZERO.subTo(this, r);
        return r;
    }

    // (public) |this|

    function bnAbs() {
        return (this.s < 0) ? this.negate() : this;
    }

    // (public) return + if this > a, - if this < a, 0 if equal

    function bnCompareTo(a) {
        var r = this.s - a.s;
        if (r != 0) return r;
        var i = this.t;
        r = i - a.t;
        if (r != 0) return r;
        while (--i >= 0) if ((r = this[i] - a[i]) != 0) return r;
        return 0;
    }

    // returns bit length of the integer x

    function nbits(x) {
        var r = 1,
            t;
        if ((t = x >>> 16) != 0) {
            x = t;
            r += 16;
        }
        if ((t = x >> 8) != 0) {
            x = t;
            r += 8;
        }
        if ((t = x >> 4) != 0) {
            x = t;
            r += 4;
        }
        if ((t = x >> 2) != 0) {
            x = t;
            r += 2;
        }
        if ((t = x >> 1) != 0) {
            x = t;
            r += 1;
        }
        return r;
    }

    // (public) return the number of bits in "this"

    function bnBitLength() {
        if (this.t <= 0) return 0;
        return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));
    }

    // (protected) r = this << n*DB

    function bnpDLShiftTo(n, r) {
        var i;
        for (i = this.t - 1; i >= 0; --i) r[i + n] = this[i];
        for (i = n - 1; i >= 0; --i) r[i] = 0;
        r.t = this.t + n;
        r.s = this.s;
    }

    // (protected) r = this >> n*DB

    function bnpDRShiftTo(n, r) {
        for (var i = n; i < this.t; ++i) r[i - n] = this[i];
        r.t = Math.max(this.t - n, 0);
        r.s = this.s;
    }

    // (protected) r = this << n

    function bnpLShiftTo(n, r) {
        var bs = n % this.DB;
        var cbs = this.DB - bs;
        var bm = (1 << cbs) - 1;
        var ds = Math.floor(n / this.DB),
            c = (this.s << bs) & this.DM,
            i;
        for (i = this.t - 1; i >= 0; --i) {
            r[i + ds + 1] = (this[i] >> cbs) | c;
            c = (this[i] & bm) << bs;
        }
        for (i = ds - 1; i >= 0; --i) r[i] = 0;
        r[ds] = c;
        r.t = this.t + ds + 1;
        r.s = this.s;
        r.clamp();
    }

    // (protected) r = this >> n

    function bnpRShiftTo(n, r) {
        r.s = this.s;
        var ds = Math.floor(n / this.DB);
        if (ds >= this.t) {
            r.t = 0;
            return;
        }
        var bs = n % this.DB;
        var cbs = this.DB - bs;
        var bm = (1 << bs) - 1;
        r[0] = this[ds] >> bs;
        for (var i = ds + 1; i < this.t; ++i) {
            r[i - ds - 1] |= (this[i] & bm) << cbs;
            r[i - ds] = this[i] >> bs;
        }
        if (bs > 0) r[this.t - ds - 1] |= (this.s & bm) << cbs;
        r.t = this.t - ds;
        r.clamp();
    }

    // (protected) r = this - a

    function bnpSubTo(a, r) {
        var i = 0,
            c = 0,
            m = Math.min(a.t, this.t);
        while (i < m) {
            c += this[i] - a[i];
            r[i++] = c & this.DM;
            c >>= this.DB;
        }
        if (a.t < this.t) {
            c -= a.s;
            while (i < this.t) {
                c += this[i];
                r[i++] = c & this.DM;
                c >>= this.DB;
            }
            c += this.s;
        }
        else {
            c += this.s;
            while (i < a.t) {
                c -= a[i];
                r[i++] = c & this.DM;
                c >>= this.DB;
            }
            c -= a.s;
        }
        r.s = (c < 0) ? -1 : 0;
        if (c < -1) r[i++] = this.DV + c;
        else if (c > 0) r[i++] = c;
        r.t = i;
        r.clamp();
    }

    // (protected) r = this * a, r != this,a (HAC 14.12)
    // "this" should be the larger one if appropriate.

    function bnpMultiplyTo(a, r) {
        var x = this.abs(),
            y = a.abs();
        var i = x.t;
        r.t = i + y.t;
        while (--i >= 0) r[i] = 0;
        for (i = 0; i < y.t; ++i) r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
        r.s = 0;
        r.clamp();
        if (this.s != a.s) BigInteger.ZERO.subTo(r, r);
    }

    // (protected) r = this^2, r != this (HAC 14.16)

    function bnpSquareTo(r) {
        var x = this.abs();
        var i = r.t = 2 * x.t;
        while (--i >= 0) r[i] = 0;
        for (i = 0; i < x.t - 1; ++i) {
            var c = x.am(i, x[i], r, 2 * i, 0, 1);
            if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
                r[i + x.t] -= x.DV;
                r[i + x.t + 1] = 1;
            }
        }
        if (r.t > 0) r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
        r.s = 0;
        r.clamp();
    }

    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
    // r != q, this != m.  q or r may be null.

    function bnpDivRemTo(m, q, r) {
        var pm = m.abs();
        if (pm.t <= 0) return;
        var pt = this.abs();
        if (pt.t < pm.t) {
            if (q != null) q.fromInt(0);
            if (r != null) this.copyTo(r);
            return;
        }
        if (r == null) r = nbi();
        var y = nbi(),
            ts = this.s,
            ms = m.s;
        var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus
        if (nsh > 0) {
            pm.lShiftTo(nsh, y);
            pt.lShiftTo(nsh, r);
        }
        else {
            pm.copyTo(y);
            pt.copyTo(r);
        }
        var ys = y.t;
        var y0 = y[ys - 1];
        if (y0 == 0) return;
        var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);
        var d1 = this.FV / yt,
            d2 = (1 << this.F1) / yt,
            e = 1 << this.F2;
        var i = r.t,
            j = i - ys,
            t = (q == null) ? nbi() : q;
        y.dlShiftTo(j, t);
        if (r.compareTo(t) >= 0) {
            r[r.t++] = 1;
            r.subTo(t, r);
        }
        BigInteger.ONE.dlShiftTo(ys, t);
        t.subTo(y, y); // "negative" y so we can replace sub with am later
        while (y.t < ys) y[y.t++] = 0;
        while (--j >= 0) {
            // Estimate quotient digit
            var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
            if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out
                y.dlShiftTo(j, t);
                r.subTo(t, r);
                while (r[i] < --qd) r.subTo(t, r);
            }
        }
        if (q != null) {
            r.drShiftTo(ys, q);
            if (ts != ms) BigInteger.ZERO.subTo(q, q);
        }
        r.t = ys;
        r.clamp();
        if (nsh > 0) r.rShiftTo(nsh, r); // Denormalize remainder
        if (ts < 0) BigInteger.ZERO.subTo(r, r);
    }

    // (public) this mod a

    function bnMod(a) {
        var r = nbi();
        this.abs().divRemTo(a, null, r);
        if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r, r);
        return r;
    }

    // Modular reduction using "classic" algorithm

    function Classic(m) {
        this.m = m;
    }

    function cConvert(x) {
        if (x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
        else return x;
    }

    function cRevert(x) {
        return x;
    }

    function cReduce(x) {
        x.divRemTo(this.m, null, x);
    }

    function cMulTo(x, y, r) {
        x.multiplyTo(y, r);
        this.reduce(r);
    }

    function cSqrTo(x, r) {
        x.squareTo(r);
        this.reduce(r);
    }

    Classic.prototype.convert = cConvert;
    Classic.prototype.revert = cRevert;
    Classic.prototype.reduce = cReduce;
    Classic.prototype.mulTo = cMulTo;
    Classic.prototype.sqrTo = cSqrTo;

    // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
    // justification:
    //         xy == 1 (mod m)
    //         xy =  1+km
    //   xy(2-xy) = (1+km)(1-km)
    // x[y(2-xy)] = 1-k^2m^2
    // x[y(2-xy)] == 1 (mod m^2)
    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
    // JS multiply "overflows" differently from C/C++, so care is needed here.

    function bnpInvDigit() {
        if (this.t < 1) return 0;
        var x = this[0];
        if ((x & 1) == 0) return 0;
        var y = x & 3; // y == 1/x mod 2^2
        y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4
        y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8
        y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16
        // last step - calculate inverse mod DV directly;
        // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
        y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits
        // we really want the negative inverse, and -DV < y < DV
        return (y > 0) ? this.DV - y : -y;
    }

    // Montgomery reduction

    function Montgomery(m) {
        this.m = m;
        this.mp = m.invDigit();
        this.mpl = this.mp & 0x7fff;
        this.mph = this.mp >> 15;
        this.um = (1 << (m.DB - 15)) - 1;
        this.mt2 = 2 * m.t;
    }

    // xR mod m

    function montConvert(x) {
        var r = nbi();
        x.abs().dlShiftTo(this.m.t, r);
        r.divRemTo(this.m, null, r);
        if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r, r);
        return r;
    }

    // x/R mod m

    function montRevert(x) {
        var r = nbi();
        x.copyTo(r);
        this.reduce(r);
        return r;
    }

    // x = x/R mod m (HAC 14.32)

    function montReduce(x) {
        while (x.t <= this.mt2) // pad x so am has enough room later
        x[x.t++] = 0;
        for (var i = 0; i < this.m.t; ++i) {
            // faster way of calculating u0 = x[i]*mp mod DV
            var j = x[i] & 0x7fff;
            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;
            // use am to combine the multiply-shift-add into one call
            j = i + this.m.t;
            x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
            // propagate carry
            while (x[j] >= x.DV) {
                x[j] -= x.DV;
                x[++j]++;
            }
        }
        x.clamp();
        x.drShiftTo(this.m.t, x);
        if (x.compareTo(this.m) >= 0) x.subTo(this.m, x);
    }

    // r = "x^2/R mod m"; x != r

    function montSqrTo(x, r) {
        x.squareTo(r);
        this.reduce(r);
    }

    // r = "xy/R mod m"; x,y != r

    function montMulTo(x, y, r) {
        x.multiplyTo(y, r);
        this.reduce(r);
    }

    Montgomery.prototype.convert = montConvert;
    Montgomery.prototype.revert = montRevert;
    Montgomery.prototype.reduce = montReduce;
    Montgomery.prototype.mulTo = montMulTo;
    Montgomery.prototype.sqrTo = montSqrTo;

    // (protected) true iff this is even

    function bnpIsEven() {
        return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;
    }

    // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)

    function bnpExp(e, z) {
        if (e > 0xffffffff || e < 1) return BigInteger.ONE;
        var r = nbi(),
            r2 = nbi(),
            g = z.convert(this),
            i = nbits(e) - 1;
        g.copyTo(r);
        while (--i >= 0) {
            z.sqrTo(r, r2);
            if ((e & (1 << i)) > 0) z.mulTo(r2, g, r);
            else {
                var t = r;
                r = r2;
                r2 = t;
            }
        }
        return z.revert(r);
    }

    // (public) this^e % m, 0 <= e < 2^32

    function bnModPowInt(e, m) {
        var z;
        if (e < 256 || m.isEven()) z = new Classic(m);
        else z = new Montgomery(m);
        return this.exp(e, z);
    }

    // protected
    BigInteger.prototype.copyTo = bnpCopyTo;
    BigInteger.prototype.fromInt = bnpFromInt;
    BigInteger.prototype.fromString = bnpFromString;
    BigInteger.prototype.clamp = bnpClamp;
    BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
    BigInteger.prototype.drShiftTo = bnpDRShiftTo;
    BigInteger.prototype.lShiftTo = bnpLShiftTo;
    BigInteger.prototype.rShiftTo = bnpRShiftTo;
    BigInteger.prototype.subTo = bnpSubTo;
    BigInteger.prototype.multiplyTo = bnpMultiplyTo;
    BigInteger.prototype.squareTo = bnpSquareTo;
    BigInteger.prototype.divRemTo = bnpDivRemTo;
    BigInteger.prototype.invDigit = bnpInvDigit;
    BigInteger.prototype.isEven = bnpIsEven;
    BigInteger.prototype.exp = bnpExp;

    // public
    BigInteger.prototype.toString = bnToString;
    BigInteger.prototype.negate = bnNegate;
    BigInteger.prototype.abs = bnAbs;
    BigInteger.prototype.compareTo = bnCompareTo;
    BigInteger.prototype.bitLength = bnBitLength;
    BigInteger.prototype.mod = bnMod;
    BigInteger.prototype.modPowInt = bnModPowInt;

    // "constants"
    BigInteger.ZERO = nbv(0);
    BigInteger.ONE = nbv(1);


    function bnClone() {
        var r = nbi();
        this.copyTo(r);
        return r;
    }

    // (public) return value as integer

    function bnIntValue() {
        if (this.s < 0) {
            if (this.t == 1) return this[0] - this.DV;
            else if (this.t == 0) return -1;
        }
        else if (this.t == 1) return this[0];
        else if (this.t == 0) return 0;
        // assumes 16 < DB < 32
        return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];
    }

    // (public) return value as byte

    function bnByteValue() {
        return (this.t == 0) ? this.s : (this[0] << 24) >> 24;
    }

    // (public) return value as short (assumes DB>=16)

    function bnShortValue() {
        return (this.t == 0) ? this.s : (this[0] << 16) >> 16;
    }

    // (protected) return x s.t. r^x < DV

    function bnpChunkSize(r) {
        return Math.floor(Math.LN2 * this.DB / Math.log(r));
    }

    // (public) 0 if this == 0, 1 if this > 0

    function bnSigNum() {
        if (this.s < 0) return -1;
        else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
        else return 1;
    }

    // (protected) convert to radix string

    function bnpToRadix(b) {
        if (b == null) b = 10;
        if (this.signum() == 0 || b < 2 || b > 36) return "0";
        var cs = this.chunkSize(b);
        var a = Math.pow(b, cs);
        var d = nbv(a),
            y = nbi(),
            z = nbi(),
            r = "";
        this.divRemTo(d, y, z);
        while (y.signum() > 0) {
            r = (a + z.intValue()).toString(b).substr(1) + r;
            y.divRemTo(d, y, z);
        }
        return z.intValue().toString(b) + r;
    }

    // (protected) convert from radix string

    function bnpFromRadix(s, b) {
        this.fromInt(0);
        if (b == null) b = 10;
        var cs = this.chunkSize(b);
        var d = Math.pow(b, cs),
            mi = false,
            j = 0,
            w = 0;
        for (var i = 0; i < s.length; ++i) {
            var x = intAt(s, i);
            if (x < 0) {
                if (s.charAt(i) == "-" && this.signum() == 0) mi = true;
                continue;
            }
            w = b * w + x;
            if (++j >= cs) {
                this.dMultiply(d);
                this.dAddOffset(w, 0);
                j = 0;
                w = 0;
            }
        }
        if (j > 0) {
            this.dMultiply(Math.pow(b, j));
            this.dAddOffset(w, 0);
        }
        if (mi) BigInteger.ZERO.subTo(this, this);
    }

    // (protected) alternate constructor

    function bnpFromNumber(a, b, c) {
        if ("number" == typeof b) {
            // new BigInteger(int,int,RNG)
            if (a < 2) this.fromInt(1);
            else {
                this.fromNumber(a, c);
                if (!this.testBit(a - 1)) // force MSB set
                this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
                if (this.isEven()) this.dAddOffset(1, 0); // force odd
                while (!this.isProbablePrime(b)) {
                    this.dAddOffset(2, 0);
                    if (this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
                }
            }
        }
        else {
            // new BigInteger(int,RNG)
            var x = new Array(),
                t = a & 7;
            x.length = (a >> 3) + 1;
            b.nextBytes(x);
            if (t > 0) x[0] &= ((1 << t) - 1);
            else x[0] = 0;
            this.fromString(x, 256);
        }
    }

    // (public) convert to bigendian byte array

    function bnToByteArray() {
        var i = this.t,
            r = new Array();
        r[0] = this.s;
        var p = this.DB - (i * this.DB) % 8,
            d, k = 0;
        if (i-- > 0) {
            if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) r[k++] = d | (this.s << (this.DB - p));
            while (i >= 0) {
                if (p < 8) {
                    d = (this[i] & ((1 << p) - 1)) << (8 - p);
                    d |= this[--i] >> (p += this.DB - 8);
                }
                else {
                    d = (this[i] >> (p -= 8)) & 0xff;
                    if (p <= 0) {
                        p += this.DB;
                        --i;
                    }
                }
                if ((d & 0x80) != 0) d |= -256;
                if (k == 0 && (this.s & 0x80) != (d & 0x80))++k;
                if (k > 0 || d != this.s) r[k++] = d;
            }
        }
        return r;
    }

    function bnEquals(a) {
        return (this.compareTo(a) == 0);
    }

    function bnMin(a) {
        return (this.compareTo(a) < 0) ? this : a;
    }

    function bnMax(a) {
        return (this.compareTo(a) > 0) ? this : a;
    }

    // (protected) r = this op a (bitwise)

    function bnpBitwiseTo(a, op, r) {
        var i, f, m = Math.min(a.t, this.t);
        for (i = 0; i < m; ++i) r[i] = op(this[i], a[i]);
        if (a.t < this.t) {
            f = a.s & this.DM;
            for (i = m; i < this.t; ++i) r[i] = op(this[i], f);
            r.t = this.t;
        }
        else {
            f = this.s & this.DM;
            for (i = m; i < a.t; ++i) r[i] = op(f, a[i]);
            r.t = a.t;
        }
        r.s = op(this.s, a.s);
        r.clamp();
    }

    // (public) this & a

    function op_and(x, y) {
        return x & y;
    }

    function bnAnd(a) {
        var r = nbi();
        this.bitwiseTo(a, op_and, r);
        return r;
    }

    // (public) this | a

    function op_or(x, y) {
        return x | y;
    }

    function bnOr(a) {
        var r = nbi();
        this.bitwiseTo(a, op_or, r);
        return r;
    }

    // (public) this ^ a

    function op_xor(x, y) {
        return x ^ y;
    }

    function bnXor(a) {
        var r = nbi();
        this.bitwiseTo(a, op_xor, r);
        return r;
    }

    // (public) this & ~a

    function op_andnot(x, y) {
        return x & ~y;
    }

    function bnAndNot(a) {
        var r = nbi();
        this.bitwiseTo(a, op_andnot, r);
        return r;
    }

    // (public) ~this

    function bnNot() {
        var r = nbi();
        for (var i = 0; i < this.t; ++i) r[i] = this.DM & ~this[i];
        r.t = this.t;
        r.s = ~this.s;
        return r;
    }

    // (public) this << n

    function bnShiftLeft(n) {
        var r = nbi();
        if (n < 0) this.rShiftTo(-n, r);
        else this.lShiftTo(n, r);
        return r;
    }

    // (public) this >> n

    function bnShiftRight(n) {
        var r = nbi();
        if (n < 0) this.lShiftTo(-n, r);
        else this.rShiftTo(n, r);
        return r;
    }

    // return index of lowest 1-bit in x, x < 2^31

    function lbit(x) {
        if (x == 0) return -1;
        var r = 0;
        if ((x & 0xffff) == 0) {
            x >>= 16;
            r += 16;
        }
        if ((x & 0xff) == 0) {
            x >>= 8;
            r += 8;
        }
        if ((x & 0xf) == 0) {
            x >>= 4;
            r += 4;
        }
        if ((x & 3) == 0) {
            x >>= 2;
            r += 2;
        }
        if ((x & 1) == 0)++r;
        return r;
    }

    // (public) returns index of lowest 1-bit (or -1 if none)

    function bnGetLowestSetBit() {
        for (var i = 0; i < this.t; ++i)
        if (this[i] != 0) return i * this.DB + lbit(this[i]);
        if (this.s < 0) return this.t * this.DB;
        return -1;
    }

    // return number of 1 bits in x

    function cbit(x) {
        var r = 0;
        while (x != 0) {
            x &= x - 1;
            ++r;
        }
        return r;
    }

    // (public) return number of set bits

    function bnBitCount() {
        var r = 0,
            x = this.s & this.DM;
        for (var i = 0; i < this.t; ++i) r += cbit(this[i] ^ x);
        return r;
    }

    // (public) true iff nth bit is set

    function bnTestBit(n) {
        var j = Math.floor(n / this.DB);
        if (j >= this.t) return (this.s != 0);
        return ((this[j] & (1 << (n % this.DB))) != 0);
    }

    // (protected) this op (1<<n)

    function bnpChangeBit(n, op) {
        var r = BigInteger.ONE.shiftLeft(n);
        this.bitwiseTo(r, op, r);
        return r;
    }

    // (public) this | (1<<n)

    function bnSetBit(n) {
        return this.changeBit(n, op_or);
    }

    // (public) this & ~(1<<n)

    function bnClearBit(n) {
        return this.changeBit(n, op_andnot);
    }

    // (public) this ^ (1<<n)

    function bnFlipBit(n) {
        return this.changeBit(n, op_xor);
    }

    // (protected) r = this + a

    function bnpAddTo(a, r) {
        var i = 0,
            c = 0,
            m = Math.min(a.t, this.t);
        while (i < m) {
            c += this[i] + a[i];
            r[i++] = c & this.DM;
            c >>= this.DB;
        }
        if (a.t < this.t) {
            c += a.s;
            while (i < this.t) {
                c += this[i];
                r[i++] = c & this.DM;
                c >>= this.DB;
            }
            c += this.s;
        }
        else {
            c += this.s;
            while (i < a.t) {
                c += a[i];
                r[i++] = c & this.DM;
                c >>= this.DB;
            }
            c += a.s;
        }
        r.s = (c < 0) ? -1 : 0;
        if (c > 0) r[i++] = c;
        else if (c < -1) r[i++] = this.DV + c;
        r.t = i;
        r.clamp();
    }

    // (public) this + a

    function bnAdd(a) {
        var r = nbi();
        this.addTo(a, r);
        return r;
    }

    // (public) this - a

    function bnSubtract(a) {
        var r = nbi();
        this.subTo(a, r);
        return r;
    }

    // (public) this * a

    function bnMultiply(a) {
        var r = nbi();
        this.multiplyTo(a, r);
        return r;
    }

    // (public) this^2

    function bnSquare() {
        var r = nbi();
        this.squareTo(r);
        return r;
    }

    // (public) this / a

    function bnDivide(a) {
        var r = nbi();
        this.divRemTo(a, r, null);
        return r;
    }

    // (public) this % a

    function bnRemainder(a) {
        var r = nbi();
        this.divRemTo(a, null, r);
        return r;
    }

    // (public) [this/a,this%a]

    function bnDivideAndRemainder(a) {
        var q = nbi(),
            r = nbi();
        this.divRemTo(a, q, r);
        return new Array(q, r);
    }

    // (protected) this *= n, this >= 0, 1 < n < DV

    function bnpDMultiply(n) {
        this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
        ++this.t;
        this.clamp();
    }

    // (protected) this += n << w words, this >= 0

    function bnpDAddOffset(n, w) {
        if (n == 0) return;
        while (this.t <= w) this[this.t++] = 0;
        this[w] += n;
        while (this[w] >= this.DV) {
            this[w] -= this.DV;
            if (++w >= this.t) this[this.t++] = 0;
            ++this[w];
        }
    }

    // A "null" reducer

    function NullExp() {}

    function nNop(x) {
        return x;
    }

    function nMulTo(x, y, r) {
        x.multiplyTo(y, r);
    }

    function nSqrTo(x, r) {
        x.squareTo(r);
    }

    NullExp.prototype.convert = nNop;
    NullExp.prototype.revert = nNop;
    NullExp.prototype.mulTo = nMulTo;
    NullExp.prototype.sqrTo = nSqrTo;

    // (public) this^e

    function bnPow(e) {
        return this.exp(e, new NullExp());
    }

    // (protected) r = lower n words of "this * a", a.t <= n
    // "this" should be the larger one if appropriate.

    function bnpMultiplyLowerTo(a, n, r) {
        var i = Math.min(this.t + a.t, n);
        r.s = 0; // assumes a,this >= 0
        r.t = i;
        while (i > 0) r[--i] = 0;
        var j;
        for (j = r.t - this.t; i < j; ++i) r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
        for (j = Math.min(a.t, n); i < j; ++i) this.am(0, a[i], r, i, 0, n - i);
        r.clamp();
    }

    // (protected) r = "this * a" without lower n words, n > 0
    // "this" should be the larger one if appropriate.

    function bnpMultiplyUpperTo(a, n, r) {
        --n;
        var i = r.t = this.t + a.t - n;
        r.s = 0; // assumes a,this >= 0
        while (--i >= 0) r[i] = 0;
        for (i = Math.max(n - this.t, 0); i < a.t; ++i)
        r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
        r.clamp();
        r.drShiftTo(1, r);
    }

    // Barrett modular reduction

    function Barrett(m) {
        // setup Barrett
        this.r2 = nbi();
        this.q3 = nbi();
        BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
        this.mu = this.r2.divide(m);
        this.m = m;
    }

    function barrettConvert(x) {
        if (x.s < 0 || x.t > 2 * this.m.t) return x.mod(this.m);
        else if (x.compareTo(this.m) < 0) return x;
        else {
            var r = nbi();
            x.copyTo(r);
            this.reduce(r);
            return r;
        }
    }

    function barrettRevert(x) {
        return x;
    }

    // x = x mod m (HAC 14.42)

    function barrettReduce(x) {
        x.drShiftTo(this.m.t - 1, this.r2);
        if (x.t > this.m.t + 1) {
            x.t = this.m.t + 1;
            x.clamp();
        }
        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
        while (x.compareTo(this.r2) < 0) x.dAddOffset(1, this.m.t + 1);
        x.subTo(this.r2, x);
        while (x.compareTo(this.m) >= 0) x.subTo(this.m, x);
    }

    // r = x^2 mod m; x != r

    function barrettSqrTo(x, r) {
        x.squareTo(r);
        this.reduce(r);
    }

    // r = x*y mod m; x,y != r

    function barrettMulTo(x, y, r) {
        x.multiplyTo(y, r);
        this.reduce(r);
    }

    Barrett.prototype.convert = barrettConvert;
    Barrett.prototype.revert = barrettRevert;
    Barrett.prototype.reduce = barrettReduce;
    Barrett.prototype.mulTo = barrettMulTo;
    Barrett.prototype.sqrTo = barrettSqrTo;

    // (public) this^e % m (HAC 14.85)

    function bnModPow(e, m) {
        var i = e.bitLength(),
            k, r = nbv(1),
            z;
        if (i <= 0) return r;
        else if (i < 18) k = 1;
        else if (i < 48) k = 3;
        else if (i < 144) k = 4;
        else if (i < 768) k = 5;
        else k = 6;
        if (i < 8) z = new Classic(m);
        else if (m.isEven()) z = new Barrett(m);
        else z = new Montgomery(m);

        // precomputation
        var g = new Array(),
            n = 3,
            k1 = k - 1,
            km = (1 << k) - 1;
        g[1] = z.convert(this);
        if (k > 1) {
            var g2 = nbi();
            z.sqrTo(g[1], g2);
            while (n <= km) {
                g[n] = nbi();
                z.mulTo(g2, g[n - 2], g[n]);
                n += 2;
            }
        }

        var j = e.t - 1,
            w, is1 = true,
            r2 = nbi(),
            t;
        i = nbits(e[j]) - 1;
        while (j >= 0) {
            if (i >= k1) w = (e[j] >> (i - k1)) & km;
            else {
                w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);
                if (j > 0) w |= e[j - 1] >> (this.DB + i - k1);
            }

            n = k;
            while ((w & 1) == 0) {
                w >>= 1;
                --n;
            }
            if ((i -= n) < 0) {
                i += this.DB;
                --j;
            }
            if (is1) { // ret == 1, don't bother squaring or multiplying it
                g[w].copyTo(r);
                is1 = false;
            }
            else {
                while (n > 1) {
                    z.sqrTo(r, r2);
                    z.sqrTo(r2, r);
                    n -= 2;
                }
                if (n > 0) z.sqrTo(r, r2);
                else {
                    t = r;
                    r = r2;
                    r2 = t;
                }
                z.mulTo(r2, g[w], r);
            }

            while (j >= 0 && (e[j] & (1 << i)) == 0) {
                z.sqrTo(r, r2);
                t = r;
                r = r2;
                r2 = t;
                if (--i < 0) {
                    i = this.DB - 1;
                    --j;
                }
            }
        }
        return z.revert(r);
    }

    // (public) gcd(this,a) (HAC 14.54)

    function bnGCD(a) {
        var x = (this.s < 0) ? this.negate() : this.clone();
        var y = (a.s < 0) ? a.negate() : a.clone();
        if (x.compareTo(y) < 0) {
            var t = x;
            x = y;
            y = t;
        }
        var i = x.getLowestSetBit(),
            g = y.getLowestSetBit();
        if (g < 0) return x;
        if (i < g) g = i;
        if (g > 0) {
            x.rShiftTo(g, x);
            y.rShiftTo(g, y);
        }
        while (x.signum() > 0) {
            if ((i = x.getLowestSetBit()) > 0) x.rShiftTo(i, x);
            if ((i = y.getLowestSetBit()) > 0) y.rShiftTo(i, y);
            if (x.compareTo(y) >= 0) {
                x.subTo(y, x);
                x.rShiftTo(1, x);
            }
            else {
                y.subTo(x, y);
                y.rShiftTo(1, y);
            }
        }
        if (g > 0) y.lShiftTo(g, y);
        return y;
    }

    // (protected) this % n, n < 2^26

    function bnpModInt(n) {
        if (n <= 0) return 0;
        var d = this.DV % n,
            r = (this.s < 0) ? n - 1 : 0;
        if (this.t > 0) if (d == 0) r = this[0] % n;
        else for (var i = this.t - 1; i >= 0; --i) r = (d * r + this[i]) % n;
        return r;
    }

    // (public) 1/this % m (HAC 14.61)

    function bnModInverse(m) {
        var ac = m.isEven();
        if ((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;
        var u = m.clone(),
            v = this.clone();
        var a = nbv(1),
            b = nbv(0),
            c = nbv(0),
            d = nbv(1);
        while (u.signum() != 0) {
            while (u.isEven()) {
                u.rShiftTo(1, u);
                if (ac) {
                    if (!a.isEven() || !b.isEven()) {
                        a.addTo(this, a);
                        b.subTo(m, b);
                    }
                    a.rShiftTo(1, a);
                }
                else if (!b.isEven()) b.subTo(m, b);
                b.rShiftTo(1, b);
            }
            while (v.isEven()) {
                v.rShiftTo(1, v);
                if (ac) {
                    if (!c.isEven() || !d.isEven()) {
                        c.addTo(this, c);
                        d.subTo(m, d);
                    }
                    c.rShiftTo(1, c);
                }
                else if (!d.isEven()) d.subTo(m, d);
                d.rShiftTo(1, d);
            }
            if (u.compareTo(v) >= 0) {
                u.subTo(v, u);
                if (ac) a.subTo(c, a);
                b.subTo(d, b);
            }
            else {
                v.subTo(u, v);
                if (ac) c.subTo(a, c);
                d.subTo(b, d);
            }
        }
        if (v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;
        if (d.compareTo(m) >= 0) return d.subtract(m);
        if (d.signum() < 0) d.addTo(m, d);
        else return d;
        if (d.signum() < 0) return d.add(m);
        else return d;
    }

    var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];
    var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];

    // (public) test primality with certainty >= 1-.5^t

    function bnIsProbablePrime(t) {
        var i, x = this.abs();
        if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
            for (i = 0; i < lowprimes.length; ++i)
            if (x[0] == lowprimes[i]) return true;
            return false;
        }
        if (x.isEven()) return false;
        i = 1;
        while (i < lowprimes.length) {
            var m = lowprimes[i],
                j = i + 1;
            while (j < lowprimes.length && m < lplim) m *= lowprimes[j++];
            m = x.modInt(m);
            while (i < j) if (m % lowprimes[i++] == 0) return false;
        }
        return x.millerRabin(t);
    }

    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)

    function bnpMillerRabin(t) {
        var n1 = this.subtract(BigInteger.ONE);
        var k = n1.getLowestSetBit();
        if (k <= 0) return false;
        var r = n1.shiftRight(k);
        t = (t + 1) >> 1;
        if (t > lowprimes.length) t = lowprimes.length;
        var a = nbi();
        for (var i = 0; i < t; ++i) {
            //Pick bases at random, instead of starting at 2
            a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
            var y = a.modPow(r, this);
            if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
                var j = 1;
                while (j++ < k && y.compareTo(n1) != 0) {
                    y = y.modPowInt(2, this);
                    if (y.compareTo(BigInteger.ONE) == 0) return false;
                }
                if (y.compareTo(n1) != 0) return false;
            }
        }
        return true;
    }

    // protected
    BigInteger.prototype.chunkSize = bnpChunkSize;
    BigInteger.prototype.toRadix = bnpToRadix;
    BigInteger.prototype.fromRadix = bnpFromRadix;
    BigInteger.prototype.fromNumber = bnpFromNumber;
    BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
    BigInteger.prototype.changeBit = bnpChangeBit;
    BigInteger.prototype.addTo = bnpAddTo;
    BigInteger.prototype.dMultiply = bnpDMultiply;
    BigInteger.prototype.dAddOffset = bnpDAddOffset;
    BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
    BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
    BigInteger.prototype.modInt = bnpModInt;
    BigInteger.prototype.millerRabin = bnpMillerRabin;

    // public
    BigInteger.prototype.clone = bnClone;
    BigInteger.prototype.intValue = bnIntValue;
    BigInteger.prototype.byteValue = bnByteValue;
    BigInteger.prototype.shortValue = bnShortValue;
    BigInteger.prototype.signum = bnSigNum;
    BigInteger.prototype.toByteArray = bnToByteArray;
    BigInteger.prototype.equals = bnEquals;
    BigInteger.prototype.min = bnMin;
    BigInteger.prototype.max = bnMax;
    BigInteger.prototype.and = bnAnd;
    BigInteger.prototype.or = bnOr;
    BigInteger.prototype.xor = bnXor;
    BigInteger.prototype.andNot = bnAndNot;
    BigInteger.prototype.not = bnNot;
    BigInteger.prototype.shiftLeft = bnShiftLeft;
    BigInteger.prototype.shiftRight = bnShiftRight;
    BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
    BigInteger.prototype.bitCount = bnBitCount;
    BigInteger.prototype.testBit = bnTestBit;
    BigInteger.prototype.setBit = bnSetBit;
    BigInteger.prototype.clearBit = bnClearBit;
    BigInteger.prototype.flipBit = bnFlipBit;
    BigInteger.prototype.add = bnAdd;
    BigInteger.prototype.subtract = bnSubtract;
    BigInteger.prototype.multiply = bnMultiply;
    BigInteger.prototype.divide = bnDivide;
    BigInteger.prototype.remainder = bnRemainder;
    BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
    BigInteger.prototype.modPow = bnModPow;
    BigInteger.prototype.modInverse = bnModInverse;
    BigInteger.prototype.pow = bnPow;
    BigInteger.prototype.gcd = bnGCD;
    BigInteger.prototype.isProbablePrime = bnIsProbablePrime;

    // JSBN-specific extension
    BigInteger.prototype.square = bnSquare;



















    // seedrandom.js version 2.0.
    // Author: David Bau 4/2/2011
    //
    // Defines a method Math.seedrandom() that, when called, substitutes
    // an explicitly seeded RC4-based algorithm for Math.random().  Also
    // supports automatic seeding from local or network sources of entropy.
    //
    // Usage:
    //
    //   <script src=http://davidbau.com/encode/seedrandom-min.js></script>
    //
    //   Math.seedrandom('yipee'); Sets Math.random to a function that is
    //                             initialized using the given explicit seed.
    //
    //   Math.seedrandom();        Sets Math.random to a function that is
    //                             seeded using the current time, dom state,
    //                             and other accumulated local entropy.
    //                             The generated seed string is returned.
    //
    //   Math.seedrandom('yowza', true);
    //                             Seeds using the given explicit seed mixed
    //                             together with accumulated entropy.
    //
    //   <script src="http://bit.ly/srandom-512"></script>
    //                             Seeds using physical random bits downloaded
    //                             from random.org.
    //
    //   <script src="https://jsonlib.appspot.com/urandom?callback=Math.seedrandom">
    //   </script>                 Seeds using urandom bits from call.jsonlib.com,
    //                             which is faster than random.org.
    //
    // Examples:
    //
    //   Math.seedrandom("hello");            // Use "hello" as the seed.
    //   document.write(Math.random());       // Always 0.5463663768140734
    //   document.write(Math.random());       // Always 0.43973793770592234
    //   var rng1 = Math.random;              // Remember the current prng.
    //
    //   var autoseed = Math.seedrandom();    // New prng with an automatic seed.
    //   document.write(Math.random());       // Pretty much unpredictable.
    //
    //   Math.random = rng1;                  // Continue "hello" prng sequence.
    //   document.write(Math.random());       // Always 0.554769432473455
    //
    //   Math.seedrandom(autoseed);           // Restart at the previous seed.
    //   document.write(Math.random());       // Repeat the 'unpredictable' value.
    //
    // Notes:
    //
    // Each time seedrandom('arg') is called, entropy from the passed seed
    // is accumulated in a pool to help generate future seeds for the
    // zero-argument form of Math.seedrandom, so entropy can be injected over
    // time by calling seedrandom with explicit data repeatedly.
    //
    // On speed - This javascript implementation of Math.random() is about
    // 3-10x slower than the built-in Math.random() because it is not native
    // code, but this is typically fast enough anyway.  Seeding is more expensive,
    // especially if you use auto-seeding.  Some details (timings on Chrome 4):
    //
    // Our Math.random()            - avg less than 0.002 milliseconds per call
    // seedrandom('explicit')       - avg less than 0.5 milliseconds per call
    // seedrandom('explicit', true) - avg less than 2 milliseconds per call
    // seedrandom()                 - avg about 38 milliseconds per call
    //
    // LICENSE (BSD):
    //
    // Copyright 2010 David Bau, all rights reserved.
    //
    // Redistribution and use in source and binary forms, with or without
    // modification, are permitted provided that the following conditions are met:
    // 
    //   1. Redistributions of source code must retain the above copyright
    //      notice, this list of conditions and the following disclaimer.
    //
    //   2. Redistributions in binary form must reproduce the above copyright
    //      notice, this list of conditions and the following disclaimer in the
    //      documentation and/or other materials provided with the distribution.
    // 
    //   3. Neither the name of this module nor the names of its contributors may
    //      be used to endorse or promote products derived from this software
    //      without specific prior written permission.
    // 
    // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    // "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    // LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
    // A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
    // OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
    // SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
    // LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
    // DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
    // THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
    // (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
    // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    //
    /**
     * All code is in an anonymous closure to keep the global namespace clean.
     *
     * @param {number=} overflow 
     * @param {number=} startdenom
     */
    (function (pool, math, width, chunks, significance, overflow, startdenom)
    {


        //
        // seedrandom()
        // This is the seedrandom function described above.
        //
        math['seedrandom'] = function seedrandom(seed, use_entropy)
        {
            var key = [];
            var arc4;

            // Flatten the seed string or build one from local entropy if needed.
            seed = mixkey(flatten(
            use_entropy ? [seed, pool] : arguments.length ? seed : [new Date().getTime(), pool, window], 3), key);

            // Use the seed to initialize an ARC4 generator.
            arc4 = new ARC4(key);

            // Mix the randomness into accumulated entropy.
            mixkey(arc4.S, pool);

            // Override Math.random
            // This function returns a random double in [0, 1) that contains
            // randomness in every bit of the mantissa of the IEEE 754 value.
            math['random'] = function random()
            { // Closure to return a random double:
                var n = arc4.g(chunks); // Start with a numerator n < 2 ^ 48
                var d = startdenom; //   and denominator d = 2 ^ 48.
                var x = 0; //   and no 'extra last byte'.
                while (n < significance)
                { // Fill up all significant digits by
                    n = (n + x) * width; //   shifting numerator and
                    d *= width; //   denominator and generating a
                    x = arc4.g(1); //   new least-significant-byte.
                }
                while (n >= overflow)
                { // To avoid rounding up, before adding
                    n /= 2; //   last byte, shift everything
                    d /= 2; //   right using integer math until
                    x >>>= 1; //   we have exactly the desired bits.
                }
                return (n + x) / d; // Form the number within [0, 1).
            };

            // Return the seed that was used
            return seed;
        };

        //
        // ARC4
        //
        // An ARC4 implementation.  The constructor takes a key in the form of
        // an array of at most (width) integers that should be 0 <= x < (width).
        //
        // The g(count) method returns a pseudorandom integer that concatenates
        // the next (count) outputs from ARC4.  Its return value is a number x
        // that is in the range 0 <= x < (width ^ count).
        //
        /** @constructor */

        function ARC4(key)
        {
            var t, u, me = this,
                keylen = key.length;
            var i = 0,
                j = me.i = me.j = me.m = 0;
            me.S = [];
            me.c = [];

            // The empty key [] is treated as [0].
            if (!keylen)
            {
                key = [keylen++];
            }

            // Set up S using the standard key scheduling algorithm.
            while (i < width)
            {
                me.S[i] = i++;
            }
            for (i = 0; i < width; i++)
            {
                t = me.S[i];
                j = lowbits(j + t + key[i % keylen]);
                u = me.S[j];
                me.S[i] = u;
                me.S[j] = t;
            }

            // The "g" method returns the next (count) outputs as one number.
            me.g = function getnext(count)
            {
                var s = me.S;
                var i = lowbits(me.i + 1);
                var t = s[i];
                var j = lowbits(me.j + t);
                var u = s[j];
                s[i] = u;
                s[j] = t;
                var r = s[lowbits(t + u)];
                while (--count)
                {
                    i = lowbits(i + 1);
                    t = s[i];
                    j = lowbits(j + t);
                    u = s[j];
                    s[i] = u;
                    s[j] = t;
                    r = r * width + s[lowbits(t + u)];
                }
                me.i = i;
                me.j = j;
                return r;
            };
            // For robust unpredictability discard an initial batch of values.
            // See http://www.rsa.com/rsalabs/node.asp?id=2009
            me.g(width);
        }

        //
        // flatten()
        // Converts an object tree to nested arrays of strings.
        //
        /** @param {Object=} result 
         * @param {string=} prop
         * @param {string=} typ */

        function flatten(obj, depth, result, prop, typ)
        {
            result = [];
            typ = typeof (obj);
            if (depth && typ == 'object')
            {
                for (prop in obj)
                {
                    if (prop.indexOf('S') < 5)
                    { // Avoid FF3 bug (local/sessionStorage)
                        try
                        {
                            result.push(flatten(obj[prop], depth - 1));
                        }
                        catch (e)
                        {}
                    }
                }
            }
            return (result.length ? result : obj + (typ != 'string' ? '\0' : ''));
        }

        //
        // mixkey()
        // Mixes a string seed into a key that is an array of integers, and
        // returns a shortened string seed that is equivalent to the result key.
        //
        /** @param {number=} smear 
         * @param {number=} j */

        function mixkey(seed, key, smear, j)
        {
            seed += ''; // Ensure the seed is a string
            smear = 0;
            for (j = 0; j < seed.length; j++)
            {
                key[lowbits(j)] = lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));
            }
            seed = '';
            for (j in key)
            {
                seed += String.fromCharCode(key[j]);
            }
            return seed;
        }

        //
        // lowbits()
        // A quick "n mod width" for width a power of 2.
        //


        function lowbits(n)
        {
            return n & (width - 1);
        }

        //
        // The following constants are related to IEEE 754 limits.
        //
        startdenom = math.pow(width, chunks);
        significance = math.pow(2, significance);
        overflow = significance * 2;

        //
        // When seedrandom.js is loaded, we immediately mix a few bits
        // from the built-in RNG into the entropy pool.  Because we do
        // not want to intefere with determinstic PRNG state later,
        // seedrandom will not call math.random on its own again after
        // initialization.
        //
        mixkey(math.random(), pool);

        // End anonymous scope, and pass initial values.
    })([], // pool: entropy pool starts empty
    Math, // math: package containing random, pow, and seedrandom
    256, // width: each RC4 output is 0 <= x < 256
    6, // chunks: at least six RC4 outputs for each double
    52 // significance: there are 52 significant digits in a double
    );


    // This is not really a random number generator object, and two SeededRandom
    // objects will conflict with one another, but it's good enough for generating 
    // the rsa key.
    function SeededRandom(){}

    function SRnextBytes(ba)
    {
        var i;
        for(i = 0; i < ba.length; i++)
        {
            ba[i] = Math.floor(Math.random() * 256);
        }
    }

    SeededRandom.prototype.nextBytes = SRnextBytes;

    // prng4.js - uses Arcfour as a PRNG

    function Arcfour() {
      this.i = 0;
      this.j = 0;
      this.S = new Array();
    }

    // Initialize arcfour context from key, an array of ints, each from [0..255]
    function ARC4init(key) {
      var i, j, t;
      for(i = 0; i < 256; ++i)
        this.S[i] = i;
      j = 0;
      for(i = 0; i < 256; ++i) {
        j = (j + this.S[i] + key[i % key.length]) & 255;
        t = this.S[i];
        this.S[i] = this.S[j];
        this.S[j] = t;
      }
      this.i = 0;
      this.j = 0;
    }

    function ARC4next() {
      var t;
      this.i = (this.i + 1) & 255;
      this.j = (this.j + this.S[this.i]) & 255;
      t = this.S[this.i];
      this.S[this.i] = this.S[this.j];
      this.S[this.j] = t;
      return this.S[(t + this.S[this.i]) & 255];
    }

    Arcfour.prototype.init = ARC4init;
    Arcfour.prototype.next = ARC4next;

    // Plug in your RNG constructor here
    function prng_newstate() {
      return new Arcfour();
    }

    // Pool size must be a multiple of 4 and greater than 32.
    // An array of bytes the size of the pool will be passed to init()
    var rng_psize = 256;

    // Random number generator - requires a PRNG backend, e.g. prng4.js

    // For best results, put code like
    // <body onClick='rng_seed_time();' onKeyPress='rng_seed_time();'>
    // in your main HTML document.

    var rng_state;
    var rng_pool;
    var rng_pptr;

    // Mix in a 32-bit integer into the pool
    function rng_seed_int(x) {
      rng_pool[rng_pptr++] ^= x & 255;
      rng_pool[rng_pptr++] ^= (x >> 8) & 255;
      rng_pool[rng_pptr++] ^= (x >> 16) & 255;
      rng_pool[rng_pptr++] ^= (x >> 24) & 255;
      if(rng_pptr >= rng_psize) rng_pptr -= rng_psize;
    }

    // Mix in the current time (w/milliseconds) into the pool
    function rng_seed_time() {
      rng_seed_int(new Date().getTime());
    }

    // Initialize the pool with junk if needed.
    if(rng_pool == null) {
      rng_pool = new Array();
      rng_pptr = 0;
      var t;
      if(navigator.appName == "Netscape" && navigator.appVersion < "5" && window.crypto) {
        // Extract entropy (256 bits) from NS4 RNG if available
        var z = window.crypto.random(32);
        for(t = 0; t < z.length; ++t)
          rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;
      }  
      while(rng_pptr < rng_psize) {  // extract some randomness from Math.random()
        t = Math.floor(65536 * Math.random());
        rng_pool[rng_pptr++] = t >>> 8;
        rng_pool[rng_pptr++] = t & 255;
      }
      rng_pptr = 0;
      rng_seed_time();
      //rng_seed_int(window.screenX);
      //rng_seed_int(window.screenY);
    }

    function rng_get_byte() {
      if(rng_state == null) {
        rng_seed_time();
        rng_state = prng_newstate();
        rng_state.init(rng_pool);
        for(rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr)
          rng_pool[rng_pptr] = 0;
        rng_pptr = 0;
        //rng_pool = null;
      }
      // TODO: allow reseeding after first request
      return rng_state.next();
    }

    function rng_get_bytes(ba) {
      var i;
      for(i = 0; i < ba.length; ++i) ba[i] = rng_get_byte();
    }

    function SecureRandom() {}

    SecureRandom.prototype.nextBytes = rng_get_bytes;







    /**
    *
    *  Secure Hash Algorithm (SHA256)
    *  http://www.webtoolkit.info/
    *
    *  Original code by Angel Marin, Paul Johnston.
    *
    **/
     
    function SHA256(s){
     
    	var chrsz   = 8;
     
    	function safe_add (x, y) {
    		var lsw = (x & 0xFFFF) + (y & 0xFFFF);
    		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    		return (msw << 16) | (lsw & 0xFFFF);
    	}
     
    	function S (X, n) { return ( X >>> n ) | (X << (32 - n)); }
    	function R (X, n) { return ( X >>> n ); }
    	function Ch(x, y, z) { return ((x & y) ^ ((~x) & z)); }
    	function Maj(x, y, z) { return ((x & y) ^ (x & z) ^ (y & z)); }
    	function Sigma0256(x) { return (S(x, 2) ^ S(x, 13) ^ S(x, 22)); }
    	function Sigma1256(x) { return (S(x, 6) ^ S(x, 11) ^ S(x, 25)); }
    	function Gamma0256(x) { return (S(x, 7) ^ S(x, 18) ^ R(x, 3)); }
    	function Gamma1256(x) { return (S(x, 17) ^ S(x, 19) ^ R(x, 10)); }
     
    	function core_sha256 (m, l) {
    		var K = new Array(0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0xFC19DC6, 0x240CA1CC, 0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147, 0x6CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85, 0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208, 0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2);
    		var HASH = new Array(0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19);
    		var W = new Array(64);
    		var a, b, c, d, e, f, g, h, i, j;
    		var T1, T2;
     
    		m[l >> 5] |= 0x80 << (24 - l % 32);
    		m[((l + 64 >> 9) << 4) + 15] = l;
     
    		for ( var i = 0; i<m.length; i+=16 ) {
    			a = HASH[0];
    			b = HASH[1];
    			c = HASH[2];
    			d = HASH[3];
    			e = HASH[4];
    			f = HASH[5];
    			g = HASH[6];
    			h = HASH[7];
     
    			for ( var j = 0; j<64; j++) {
    				if (j < 16) W[j] = m[j + i];
    				else W[j] = safe_add(safe_add(safe_add(Gamma1256(W[j - 2]), W[j - 7]), Gamma0256(W[j - 15])), W[j - 16]);
     
    				T1 = safe_add(safe_add(safe_add(safe_add(h, Sigma1256(e)), Ch(e, f, g)), K[j]), W[j]);
    				T2 = safe_add(Sigma0256(a), Maj(a, b, c));
     
    				h = g;
    				g = f;
    				f = e;
    				e = safe_add(d, T1);
    				d = c;
    				c = b;
    				b = a;
    				a = safe_add(T1, T2);
    			}
     
    			HASH[0] = safe_add(a, HASH[0]);
    			HASH[1] = safe_add(b, HASH[1]);
    			HASH[2] = safe_add(c, HASH[2]);
    			HASH[3] = safe_add(d, HASH[3]);
    			HASH[4] = safe_add(e, HASH[4]);
    			HASH[5] = safe_add(f, HASH[5]);
    			HASH[6] = safe_add(g, HASH[6]);
    			HASH[7] = safe_add(h, HASH[7]);
    		}
    		return HASH;
    	}
     
    	function str2binb (str) {
    		var bin = Array();
    		var mask = (1 << chrsz) - 1;
    		for(var i = 0; i < str.length * chrsz; i += chrsz) {
    			bin[i>>5] |= (str.charCodeAt(i / chrsz) & mask) << (24 - i%32);
    		}
    		return bin;
    	}
     
    	function Utf8Encode(string) {
    		string = string.replace(/\r\n/g,"\n");
    		var utftext = "";
     
    		for (var n = 0; n < string.length; n++) {
     
    			var c = string.charCodeAt(n);
     
    			if (c < 128) {
    				utftext += String.fromCharCode(c);
    			}
    			else if((c > 127) && (c < 2048)) {
    				utftext += String.fromCharCode((c >> 6) | 192);
    				utftext += String.fromCharCode((c & 63) | 128);
    			}
    			else {
    				utftext += String.fromCharCode((c >> 12) | 224);
    				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
    				utftext += String.fromCharCode((c & 63) | 128);
    			}
     
    		}
     
    		return utftext;
    	}
     
    	function binb2hex (binarray) {
    		var hex_tab =  "0123456789abcdef";
    		var str = "";
    		for(var i = 0; i < binarray.length * 4; i++) {
    			str += hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8+4)) & 0xF) +
    			hex_tab.charAt((binarray[i>>2] >> ((3 - i%4)*8  )) & 0xF);
    		}
    		return str;
    	}
     
    	s = Utf8Encode(s);
    	return binb2hex(core_sha256(str2binb(s), s.length * chrsz));
    }

    var sha256 = {};
    sha256.hex = function(s)
    {
        return SHA256(s);
    };

    /**
    *
    *  Secure Hash Algorithm (SHA1)
    *  http://www.webtoolkit.info/
    *
    **/
     
    function SHA1 (msg) {
     
    	function rotate_left(n,s) {
    		var t4 = ( n<<s ) | (n>>>(32-s));
    		return t4;
    	} 
    	function cvt_hex(val) {
    		var str="";
    		var i;
    		var v;
     
    		for( i=7; i>=0; i-- ) {
    			v = (val>>>(i*4))&0x0f;
    			str += v.toString(16);
    		}
    		return str;
    	} 
     
    	function Utf8Encode(string) {
    		string = string.replace(/\r\n/g,"\n");
    		var utftext = "";
     
    		for (var n = 0; n < string.length; n++) {
     
    			var c = string.charCodeAt(n);
     
    			if (c < 128) {
    				utftext += String.fromCharCode(c);
    			}
    			else if((c > 127) && (c < 2048)) {
    				utftext += String.fromCharCode((c >> 6) | 192);
    				utftext += String.fromCharCode((c & 63) | 128);
    			}
    			else {
    				utftext += String.fromCharCode((c >> 12) | 224);
    				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
    				utftext += String.fromCharCode((c & 63) | 128);
    			}
     
    		}
     
    		return utftext;
    	} 
    	var blockstart;
    	var i, j;
    	var W = new Array(80);
    	var H0 = 0x67452301;
    	var H1 = 0xEFCDAB89;
    	var H2 = 0x98BADCFE;
    	var H3 = 0x10325476;
    	var H4 = 0xC3D2E1F0;
    	var A, B, C, D, E;
    	var temp;
     
    	msg = Utf8Encode(msg);
     
    	var msg_len = msg.length;
     
    	var word_array = new Array();
    	for( i=0; i<msg_len-3; i+=4 ) {
    		j = msg.charCodeAt(i)<<24 | msg.charCodeAt(i+1)<<16 |
    		msg.charCodeAt(i+2)<<8 | msg.charCodeAt(i+3);
    		word_array.push( j );
    	}
     
    	switch( msg_len % 4 ) {
    		case 0:
    			i = 0x080000000;
    		break;
    		case 1:
    			i = msg.charCodeAt(msg_len-1)<<24 | 0x0800000;
    		break;
     
    		case 2:
    			i = msg.charCodeAt(msg_len-2)<<24 | msg.charCodeAt(msg_len-1)<<16 | 0x08000;
    		break;
     
    		case 3:
    			i = msg.charCodeAt(msg_len-3)<<24 | msg.charCodeAt(msg_len-2)<<16 | msg.charCodeAt(msg_len-1)<<8	| 0x80;
    		break;
    	}
     
    	word_array.push( i );
     
    	while( (word_array.length % 16) != 14 ) word_array.push( 0 );
     
    	word_array.push( msg_len>>>29 );
    	word_array.push( (msg_len<<3)&0x0ffffffff );
     
     
    	for ( blockstart=0; blockstart<word_array.length; blockstart+=16 ) {
     
    		for( i=0; i<16; i++ ) W[i] = word_array[blockstart+i];
    		for( i=16; i<=79; i++ ) W[i] = rotate_left(W[i-3] ^ W[i-8] ^ W[i-14] ^ W[i-16], 1);
     
    		A = H0;
    		B = H1;
    		C = H2;
    		D = H3;
    		E = H4;
     
    		for( i= 0; i<=19; i++ ) {
    			temp = (rotate_left(A,5) + ((B&C) | (~B&D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;
    			E = D;
    			D = C;
    			C = rotate_left(B,30);
    			B = A;
    			A = temp;
    		}
     
    		for( i=20; i<=39; i++ ) {
    			temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;
    			E = D;
    			D = C;
    			C = rotate_left(B,30);
    			B = A;
    			A = temp;
    		}
     
    		for( i=40; i<=59; i++ ) {
    			temp = (rotate_left(A,5) + ((B&C) | (B&D) | (C&D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;
    			E = D;
    			D = C;
    			C = rotate_left(B,30);
    			B = A;
    			A = temp;
    		}
     
    		for( i=60; i<=79; i++ ) {
    			temp = (rotate_left(A,5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;
    			E = D;
    			D = C;
    			C = rotate_left(B,30);
    			B = A;
    			A = temp;
    		}
     
    		H0 = (H0 + A) & 0x0ffffffff;
    		H1 = (H1 + B) & 0x0ffffffff;
    		H2 = (H2 + C) & 0x0ffffffff;
    		H3 = (H3 + D) & 0x0ffffffff;
    		H4 = (H4 + E) & 0x0ffffffff;
     
    	}
     
    	var temp = cvt_hex(H0) + cvt_hex(H1) + cvt_hex(H2) + cvt_hex(H3) + cvt_hex(H4);
     
    	return temp.toLowerCase();
     
    }

    var sha1 = {};
    sha1.hex = function(s)
    {
        return SHA1(s);
    };

    /**
    *
    *  MD5 (Message-Digest Algorithm)
    *  http://www.webtoolkit.info/
    *
    **/
     
    var MD5 = function (string) {
     
    	function RotateLeft(lValue, iShiftBits) {
    		return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));
    	}
     
    	function AddUnsigned(lX,lY) {
    		var lX4,lY4,lX8,lY8,lResult;
    		lX8 = (lX & 0x80000000);
    		lY8 = (lY & 0x80000000);
    		lX4 = (lX & 0x40000000);
    		lY4 = (lY & 0x40000000);
    		lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);
    		if (lX4 & lY4) {
    			return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
    		}
    		if (lX4 | lY4) {
    			if (lResult & 0x40000000) {
    				return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
    			} else {
    				return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
    			}
    		} else {
    			return (lResult ^ lX8 ^ lY8);
    		}
     	}
     
     	function F(x,y,z) { return (x & y) | ((~x) & z); }
     	function G(x,y,z) { return (x & z) | (y & (~z)); }
     	function H(x,y,z) { return (x ^ y ^ z); }
    	function I(x,y,z) { return (y ^ (x | (~z))); }
     
    	function FF(a,b,c,d,x,s,ac) {
    		a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
    		return AddUnsigned(RotateLeft(a, s), b);
    	} 
    	function GG(a,b,c,d,x,s,ac) {
    		a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
    		return AddUnsigned(RotateLeft(a, s), b);
    	} 
    	function HH(a,b,c,d,x,s,ac) {
    		a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
    		return AddUnsigned(RotateLeft(a, s), b);
    	} 
    	function II(a,b,c,d,x,s,ac) {
    		a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
    		return AddUnsigned(RotateLeft(a, s), b);
    	} 
    	function ConvertToWordArray(string) {
    		var lWordCount;
    		var lMessageLength = string.length;
    		var lNumberOfWords_temp1=lMessageLength + 8;
    		var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;
    		var lNumberOfWords = (lNumberOfWords_temp2+1)*16;
    		var lWordArray=Array(lNumberOfWords-1);
    		var lBytePosition = 0;
    		var lByteCount = 0;
    		while ( lByteCount < lMessageLength ) {
    			lWordCount = (lByteCount-(lByteCount % 4))/4;
    			lBytePosition = (lByteCount % 4)*8;
    			lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));
    			lByteCount++;
    		}
    		lWordCount = (lByteCount-(lByteCount % 4))/4;
    		lBytePosition = (lByteCount % 4)*8;
    		lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);
    		lWordArray[lNumberOfWords-2] = lMessageLength<<3;
    		lWordArray[lNumberOfWords-1] = lMessageLength>>>29;
    		return lWordArray;
    	} 
    	function WordToHex(lValue) {
    		var WordToHexValue="",WordToHexValue_temp="",lByte,lCount;
    		for (lCount = 0;lCount<=3;lCount++) {
    			lByte = (lValue>>>(lCount*8)) & 255;
    			WordToHexValue_temp = "0" + lByte.toString(16);
    			WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);
    		}
    		return WordToHexValue;
    	} 
    	function Utf8Encode(string) {
    		string = string.replace(/\r\n/g,"\n");
    		var utftext = "";
     
    		for (var n = 0; n < string.length; n++) {
     
    			var c = string.charCodeAt(n);
     
    			if (c < 128) {
    				utftext += String.fromCharCode(c);
    			}
    			else if((c > 127) && (c < 2048)) {
    				utftext += String.fromCharCode((c >> 6) | 192);
    				utftext += String.fromCharCode((c & 63) | 128);
    			}
    			else {
    				utftext += String.fromCharCode((c >> 12) | 224);
    				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
    				utftext += String.fromCharCode((c & 63) | 128);
    			}
     
    		}
     
    		return utftext;
    	} 
    	var x=Array();
    	var k,AA,BB,CC,DD,a,b,c,d;
    	var S11=7, S12=12, S13=17, S14=22;
    	var S21=5, S22=9 , S23=14, S24=20;
    	var S31=4, S32=11, S33=16, S34=23;
    	var S41=6, S42=10, S43=15, S44=21;
     
    	string = Utf8Encode(string);
     
    	x = ConvertToWordArray(string);
     
    	a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;
     
    	for (k=0;k<x.length;k+=16) {
    		AA=a; BB=b; CC=c; DD=d;
    		a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);
    		d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);
    		c=FF(c,d,a,b,x[k+2], S13,0x242070DB);
    		b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);
    		a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);
    		d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);
    		c=FF(c,d,a,b,x[k+6], S13,0xA8304613);
    		b=FF(b,c,d,a,x[k+7], S14,0xFD469501);
    		a=FF(a,b,c,d,x[k+8], S11,0x698098D8);
    		d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);
    		c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);
    		b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);
    		a=FF(a,b,c,d,x[k+12],S11,0x6B901122);
    		d=FF(d,a,b,c,x[k+13],S12,0xFD987193);
    		c=FF(c,d,a,b,x[k+14],S13,0xA679438E);
    		b=FF(b,c,d,a,x[k+15],S14,0x49B40821);
    		a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);
    		d=GG(d,a,b,c,x[k+6], S22,0xC040B340);
    		c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);
    		b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);
    		a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);
    		d=GG(d,a,b,c,x[k+10],S22,0x2441453);
    		c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);
    		b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);
    		a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);
    		d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);
    		c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);
    		b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);
    		a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);
    		d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);
    		c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);
    		b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);
    		a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);
    		d=HH(d,a,b,c,x[k+8], S32,0x8771F681);
    		c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);
    		b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);
    		a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);
    		d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);
    		c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);
    		b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);
    		a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);
    		d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);
    		c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);
    		b=HH(b,c,d,a,x[k+6], S34,0x4881D05);
    		a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);
    		d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);
    		c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);
    		b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);
    		a=II(a,b,c,d,x[k+0], S41,0xF4292244);
    		d=II(d,a,b,c,x[k+7], S42,0x432AFF97);
    		c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);
    		b=II(b,c,d,a,x[k+5], S44,0xFC93A039);
    		a=II(a,b,c,d,x[k+12],S41,0x655B59C3);
    		d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);
    		c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);
    		b=II(b,c,d,a,x[k+1], S44,0x85845DD1);
    		a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);
    		d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);
    		c=II(c,d,a,b,x[k+6], S43,0xA3014314);
    		b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);
    		a=II(a,b,c,d,x[k+4], S41,0xF7537E82);
    		d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);
    		c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);
    		b=II(b,c,d,a,x[k+9], S44,0xEB86D391);
    		a=AddUnsigned(a,AA);
    		b=AddUnsigned(b,BB);
    		c=AddUnsigned(c,CC);
    		d=AddUnsigned(d,DD);
    	}
     
    	var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);
     
    	return temp.toLowerCase();
    };













    // Depends on jsbn.js and rng.js
    // Version 1.1: support utf-8 encoding in pkcs1pad2
    // convert a (hex) string to a bignum object


    function parseBigInt(str, r)
    {
        return new BigInteger(str, r);
    }

    // PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint


    function pkcs1pad2(s, n)
    {
        if (n < s.length + 11)
        { // TODO: fix for utf-8
            //alert("Message too long for RSA (n=" + n + ", l=" + s.length + ")");
            //return null;
            throw "Message too long for RSA (n=" + n + ", l=" + s.length + ")";
        }
        var ba = new Array();
        var i = s.length - 1;
        while (i >= 0 && n > 0)
        {
            var c = s.charCodeAt(i--);
            if (c < 128)
            { // encode using utf-8
                ba[--n] = c;
            }
            else if ((c > 127) && (c < 2048))
            {
                ba[--n] = (c & 63) | 128;
                ba[--n] = (c >> 6) | 192;
            }
            else
            {
                ba[--n] = (c & 63) | 128;
                ba[--n] = ((c >> 6) & 63) | 128;
                ba[--n] = (c >> 12) | 224;
            }
        }
        ba[--n] = 0;
        var rng = new SecureRandom();
        var x = new Array();
        while (n > 2)
        { // random non-zero pad
            x[0] = 0;
            while (x[0] == 0) rng.nextBytes(x);
            ba[--n] = x[0];
        }
        ba[--n] = 2;
        ba[--n] = 0;
        return new BigInteger(ba);
    }

    // "empty" RSA key constructor


    function RSAKey()
    {
        this.n = null;
        this.e = 0;
        this.d = null;
        this.p = null;
        this.q = null;
        this.dmp1 = null;
        this.dmq1 = null;
        this.coeff = null;
    }
    // Set the public key fields N and e from hex strings


    function RSASetPublic(N, E)
    {
        if (N != null && E != null && N.length > 0 && E.length > 0)
        {
            this.n = parseBigInt(N, 16);
            this.e = parseInt(E, 16);
        }
        else throw new Error("Invalid RSA public key");
    }

    // Perform raw public operation on "x": return x^e (mod n)


    function RSADoPublic(x)
    {
        return x.modPowInt(this.e, this.n);
    }

    // Return the PKCS#1 RSA encryption of "text" as an even-length hex string


    function RSAEncrypt(text)
    {
        var m = pkcs1pad2(text, (this.n.bitLength() + 7) >> 3);
        if (m == null) return null;
        var c = this.doPublic(m);
        if (c == null) return null;
        var h = c.toString(16);
        if ((h.length & 1) == 0) return h;
        else return "0" + h;
    }

    function RSAToJSON() {
        return {
            coeff: this.coeff.toString(16),
            d: this.d.toString(16),
            dmp1: this.dmp1.toString(16),
            dmq1: this.dmq1.toString(16),
            e: this.e.toString(16),
            n: this.n.toString(16),
            p: this.p.toString(16),
            q: this.q.toString(16),
        }
    }

    function RSAParse(rsaString) {
        var json = JSON.parse(rsaString);
        var rsa = new RSAKey();

        rsa.setPrivateEx(json.n, json.e, json.d, json.p, json.q, json.dmp1, json.dmq1, json.coeff);

        return rsa;
    }

    // Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
    //function RSAEncryptB64(text) {
    //  var h = this.encrypt(text);
    //  if(h) return hex2b64(h); else return null;
    //}
    // protected
    RSAKey.prototype.doPublic = RSADoPublic;

    // public
    RSAKey.prototype.setPublic = RSASetPublic;
    RSAKey.prototype.encrypt = RSAEncrypt;
    RSAKey.prototype.toJSON = RSAToJSON;
    RSAKey.parse = RSAParse;

    // Version 1.1: support utf-8 decoding in pkcs1unpad2
    // Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext

    function pkcs1unpad2(d, n)
    {
        var b = d.toByteArray();
        var i = 0;
        while (i < b.length && b[i] == 0)++i;
        if (b.length - i != n - 1 || b[i] != 2) return null;
        ++i;
        while (b[i] != 0)
        if (++i >= b.length) return null;
        var ret = "";
        while (++i < b.length)
        {
            var c = b[i] & 255;
            if (c < 128)
            { // utf-8 decode
                ret += String.fromCharCode(c);
            }
            else if ((c > 191) && (c < 224))
            {
                ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));
                ++i;
            }
            else
            {
                ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));
                i += 2;
            }
        }
        return ret;
    }

    // Set the private key fields N, e, and d from hex strings
    function RSASetPrivate(N, E, D)
    {
        if (N != null && E != null && N.length > 0 && E.length > 0)
        {
            this.n = parseBigInt(N, 16);
            this.e = parseInt(E, 16);
            this.d = parseBigInt(D, 16);
        }
        else throw new Error("Invalid RSA private key");
    }

    // Set the private key fields N, e, d and CRT params from hex strings
    function RSASetPrivateEx(N, E, D, P, Q, DP, DQ, C)
    {
        if (N != null && E != null && N.length > 0 && E.length > 0)
        {
            this.n = parseBigInt(N, 16);
            this.e = parseInt(E, 16);
            this.d = parseBigInt(D, 16);
            this.p = parseBigInt(P, 16);
            this.q = parseBigInt(Q, 16);
            this.dmp1 = parseBigInt(DP, 16);
            this.dmq1 = parseBigInt(DQ, 16);
            this.coeff = parseBigInt(C, 16);
        }
        else throw new Error("Invalid RSA private key");
    }

    // Generate a new random private key B bits long, using public expt E
    function RSAGenerate(B, E)
    {
        var rng = new SeededRandom();
        var qs = B >> 1;
        this.e = parseInt(E, 16);
        var ee = new BigInteger(E, 16);
        for (;;)
        {
            for (;;)
            {
                this.p = new BigInteger(B - qs, 1, rng);
                if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) break;
            }
            for (;;)
            {
                this.q = new BigInteger(qs, 1, rng);
                if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) break;
            }
            if (this.p.compareTo(this.q) <= 0)
            {
                var t = this.p;
                this.p = this.q;
                this.q = t;
            }
            var p1 = this.p.subtract(BigInteger.ONE);
            var q1 = this.q.subtract(BigInteger.ONE);
            var phi = p1.multiply(q1);
            if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0)
            {
                this.n = this.p.multiply(this.q);
                this.d = ee.modInverse(phi);
                this.dmp1 = this.d.mod(p1);
                this.dmq1 = this.d.mod(q1);
                this.coeff = this.q.modInverse(this.p);
                break;
            }
        }
    }

    // Perform raw private operation on "x": return x^d (mod n)
    function RSADoPrivate(x)
    {
        if (this.p == null || this.q == null) return x.modPow(this.d, this.n);
        // TODO: re-calculate any missing CRT params
        var xp = x.mod(this.p).modPow(this.dmp1, this.p);
        var xq = x.mod(this.q).modPow(this.dmq1, this.q);
        while (xp.compareTo(xq) < 0)
        xp = xp.add(this.p);
        return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);
    }

    // Return the PKCS#1 RSA decryption of "ctext".
    // "ctext" is an even-length hex string and the output is a plain string.
    function RSADecrypt(ctext)
    {
        var c = parseBigInt(ctext, 16);
        var m = this.doPrivate(c);
        if (m == null) return null;
        return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);
    }

    // protected
    RSAKey.prototype.doPrivate = RSADoPrivate;

    // public
    RSAKey.prototype.setPrivate = RSASetPrivate;
    RSAKey.prototype.setPrivateEx = RSASetPrivateEx;
    RSAKey.prototype.generate = RSAGenerate;
    RSAKey.prototype.decrypt = RSADecrypt;


    //
    // rsa-sign.js - adding signing functions to RSAKey class.
    //
    //
    // version: 1.0 (2010-Jun-03)
    //
    // Copyright (c) 2010 Kenji Urushima (kenji.urushima@gmail.com)
    //
    // This software is licensed under the terms of the MIT License.
    // http://www.opensource.org/licenses/mit-license.php
    //
    // The above copyright and license notice shall be 
    // included in all copies or substantial portions of the Software.
    //
    // Depends on:
    //   function sha1.hex(s) of sha1.js
    //   jsbn.js
    //   jsbn2.js
    //   rsa.js
    //   rsa2.js
    //
    // keysize / pmstrlen
    //  512 /  128
    // 1024 /  256
    // 2048 /  512
    // 4096 / 1024
    // As for _RSASGIN_DIHEAD values for each hash algorithm, see PKCS#1 v2.1 spec (p38).
    var _RSASIGN_DIHEAD = [];
    _RSASIGN_DIHEAD['sha1'] = "3021300906052b0e03021a05000414";
    _RSASIGN_DIHEAD['sha256'] = "3031300d060960864801650304020105000420";
    //_RSASIGN_DIHEAD['md2'] = "3020300c06082a864886f70d020205000410";
    //_RSASIGN_DIHEAD['md5'] = "3020300c06082a864886f70d020505000410";
    //_RSASIGN_DIHEAD['sha384'] = "3041300d060960864801650304020205000430";
    //_RSASIGN_DIHEAD['sha512'] = "3051300d060960864801650304020305000440";
    var _RSASIGN_HASHHEXFUNC = [];
    _RSASIGN_HASHHEXFUNC['sha1'] = sha1.hex;
    _RSASIGN_HASHHEXFUNC['sha256'] = sha256.hex;

    // ========================================================================
    // Signature Generation
    // ========================================================================

    function _rsasign_getHexPaddedDigestInfoForString(s, keySize, hashAlg)
    {
        var pmStrLen = keySize / 4;
        var hashFunc = _RSASIGN_HASHHEXFUNC[hashAlg];
        var sHashHex = hashFunc(s);

        var sHead = "0001";
        var sTail = "00" + _RSASIGN_DIHEAD[hashAlg] + sHashHex;
        var sMid = "";
        var fLen = pmStrLen - sHead.length - sTail.length;
        for (var i = 0; i < fLen; i += 2)
        {
            sMid += "ff";
        }
        sPaddedMessageHex = sHead + sMid + sTail;
        return sPaddedMessageHex;
    }

    function _rsasign_signString(s, hashAlg)
    {
        var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), hashAlg);
        var biPaddedMessage = parseBigInt(hPM, 16);
        var biSign = this.doPrivate(biPaddedMessage);
        var hexSign = biSign.toString(16);
        return hexSign;
    }

    function _rsasign_signStringWithSHA1(s)
    {
        var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), 'sha1');
        var biPaddedMessage = parseBigInt(hPM, 16);
        var biSign = this.doPrivate(biPaddedMessage);
        var hexSign = biSign.toString(16);
        return hexSign;
    }

    function _rsasign_signStringWithSHA256(s)
    {
        var hPM = _rsasign_getHexPaddedDigestInfoForString(s, this.n.bitLength(), 'sha256');
        var biPaddedMessage = parseBigInt(hPM, 16);
        var biSign = this.doPrivate(biPaddedMessage);
        var hexSign = biSign.toString(16);
        return hexSign;
    }

    // ========================================================================
    // Signature Verification
    // ========================================================================

    function _rsasign_getDecryptSignatureBI(biSig, hN, hE)
    {
        var rsa = new RSAKey();
        rsa.setPublic(hN, hE);
        var biDecryptedSig = rsa.doPublic(biSig);
        return biDecryptedSig;
    }

    function _rsasign_getHexDigestInfoFromSig(biSig, hN, hE)
    {
        var biDecryptedSig = _rsasign_getDecryptSignatureBI(biSig, hN, hE);
        var hDigestInfo = biDecryptedSig.toString(16).replace(/^1f+00/, '');
        return hDigestInfo;
    }

    function _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo)
    {
        for (var algName in _RSASIGN_DIHEAD)
        {
            var head = _RSASIGN_DIHEAD[algName];
            var len = head.length;
            if (hDigestInfo.substring(0, len) == head)
            {
                var a = [algName, hDigestInfo.substring(len)];
                return a;
            }
        }
        return [];
    }

    function _rsasign_verifySignatureWithArgs(sMsg, biSig, hN, hE)
    {
        var hDigestInfo = _rsasign_getHexDigestInfoFromSig(biSig, hN, hE);
        var digestInfoAry = _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);
        if (digestInfoAry.length == 0) return false;
        var algName = digestInfoAry[0];
        var diHashValue = digestInfoAry[1];
        var ff = _RSASIGN_HASHHEXFUNC[algName];
        var msgHashValue = ff(sMsg);
        return (diHashValue == msgHashValue);
    }

    function _rsasign_verifyHexSignatureForMessage(hSig, sMsg)
    {
        var biSig = parseBigInt(hSig, 16);
        var result = _rsasign_verifySignatureWithArgs(sMsg, biSig, this.n.toString(16), this.e.toString(16));
        return result;
    }

    function _rsasign_verifyString(sMsg, hSig)
    {
        hSig = hSig.replace(/[ \n]+/g, "");
        var biSig = parseBigInt(hSig, 16);
        var biDecryptedSig = this.doPublic(biSig);
        var hDigestInfo = biDecryptedSig.toString(16).replace(/^1f+00/, '');
        var digestInfoAry = _rsasign_getAlgNameAndHashFromHexDisgestInfo(hDigestInfo);

        if (digestInfoAry.length == 0) return false;
        var algName = digestInfoAry[0];
        var diHashValue = digestInfoAry[1];
        var ff = _RSASIGN_HASHHEXFUNC[algName];
        var msgHashValue = ff(sMsg);
        return (diHashValue == msgHashValue);
    }

    RSAKey.prototype.signString = _rsasign_signString;
    RSAKey.prototype.signStringWithSHA1 = _rsasign_signStringWithSHA1;
    RSAKey.prototype.signStringWithSHA256 = _rsasign_signStringWithSHA256;

    RSAKey.prototype.verifyString = _rsasign_verifyString;
    RSAKey.prototype.verifyHexSignatureForMessage = _rsasign_verifyHexSignatureForMessage;



























    /*
     *  jsaes version 0.1  -  Copyright 2006 B. Poettering
     *
     *  This program is free software; you can redistribute it and/or
     *  modify it under the terms of the GNU General Public License as
     *  published by the Free Software Foundation; either version 2 of the
     *  License, or (at your option) any later version.
     *
     *  This program is distributed in the hope that it will be useful,
     *  but WITHOUT ANY WARRANTY; without even the implied warranty of
     *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     *  General Public License for more details.
     *
     *  You should have received a copy of the GNU General Public License
     *  along with this program; if not, write to the Free Software
     *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
     *  02111-1307 USA
     */
     
     // later modifications by wwwtyro@github
     
    var aes = (function () {

        var my = {};

        my.Sbox = new Array(99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22);

        my.ShiftRowTab = new Array(0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12, 1, 6, 11);

        my.Init = function () {
            my.Sbox_Inv = new Array(256);
            for (var i = 0; i < 256; i++)
            my.Sbox_Inv[my.Sbox[i]] = i;

            my.ShiftRowTab_Inv = new Array(16);
            for (var i = 0; i < 16; i++)
            my.ShiftRowTab_Inv[my.ShiftRowTab[i]] = i;

            my.xtime = new Array(256);
            for (var i = 0; i < 128; i++) {
                my.xtime[i] = i << 1;
                my.xtime[128 + i] = (i << 1) ^ 0x1b;
            }
        };

        my.Done = function () {
            delete my.Sbox_Inv;
            delete my.ShiftRowTab_Inv;
            delete my.xtime;
        };

        my.ExpandKey = function (key) {
            var kl = key.length,
                ks, Rcon = 1;
            switch (kl) {
            case 16:
                ks = 16 * (10 + 1);
                break;
            case 24:
                ks = 16 * (12 + 1);
                break;
            case 32:
                ks = 16 * (14 + 1);
                break;
            default:
                throw new Error("my.ExpandKey: Only key lengths of 16, 24 or 32 bytes allowed!");
            }
            for (var i = kl; i < ks; i += 4) {
                var temp = key.slice(i - 4, i);
                if (i % kl == 0) {
                    temp = new Array(my.Sbox[temp[1]] ^ Rcon, my.Sbox[temp[2]], my.Sbox[temp[3]], my.Sbox[temp[0]]);
                    if ((Rcon <<= 1) >= 256) Rcon ^= 0x11b;
                }
                else if ((kl > 24) && (i % kl == 16)) temp = new Array(my.Sbox[temp[0]], my.Sbox[temp[1]], my.Sbox[temp[2]], my.Sbox[temp[3]]);
                for (var j = 0; j < 4; j++)
                key[i + j] = key[i + j - kl] ^ temp[j];
            }
        };

        my.Encrypt = function (block, key) {
            var l = key.length;
            my.AddRoundKey(block, key.slice(0, 16));
            for (var i = 16; i < l - 16; i += 16) {
                my.SubBytes(block, my.Sbox);
                my.ShiftRows(block, my.ShiftRowTab);
                my.MixColumns(block);
                my.AddRoundKey(block, key.slice(i, i + 16));
            }
            my.SubBytes(block, my.Sbox);
            my.ShiftRows(block, my.ShiftRowTab);
            my.AddRoundKey(block, key.slice(i, l));
        };

        my.Decrypt = function (block, key) {
            var l = key.length;
            my.AddRoundKey(block, key.slice(l - 16, l));
            my.ShiftRows(block, my.ShiftRowTab_Inv);
            my.SubBytes(block, my.Sbox_Inv);
            for (var i = l - 32; i >= 16; i -= 16) {
                my.AddRoundKey(block, key.slice(i, i + 16));
                my.MixColumns_Inv(block);
                my.ShiftRows(block, my.ShiftRowTab_Inv);
                my.SubBytes(block, my.Sbox_Inv);
            }
            my.AddRoundKey(block, key.slice(0, 16));
        };

        my.SubBytes = function (state, sbox) {
            for (var i = 0; i < 16; i++)
            state[i] = sbox[state[i]];
        };

        my.AddRoundKey = function (state, rkey) {
            for (var i = 0; i < 16; i++)
            state[i] ^= rkey[i];
        };

        my.ShiftRows = function (state, shifttab) {
            var h = new Array().concat(state);
            for (var i = 0; i < 16; i++)
            state[i] = h[shifttab[i]];
        };

        my.MixColumns = function (state) {
            for (var i = 0; i < 16; i += 4) {
                var s0 = state[i + 0],
                    s1 = state[i + 1];
                var s2 = state[i + 2],
                    s3 = state[i + 3];
                var h = s0 ^ s1 ^ s2 ^ s3;
                state[i + 0] ^= h ^ my.xtime[s0 ^ s1];
                state[i + 1] ^= h ^ my.xtime[s1 ^ s2];
                state[i + 2] ^= h ^ my.xtime[s2 ^ s3];
                state[i + 3] ^= h ^ my.xtime[s3 ^ s0];
            }
        };

        my.MixColumns_Inv = function (state) {
            for (var i = 0; i < 16; i += 4) {
                var s0 = state[i + 0],
                    s1 = state[i + 1];
                var s2 = state[i + 2],
                    s3 = state[i + 3];
                var h = s0 ^ s1 ^ s2 ^ s3;
                var xh = my.xtime[h];
                var h1 = my.xtime[my.xtime[xh ^ s0 ^ s2]] ^ h;
                var h2 = my.xtime[my.xtime[xh ^ s1 ^ s3]] ^ h;
                state[i + 0] ^= h1 ^ my.xtime[s0 ^ s1];
                state[i + 1] ^= h2 ^ my.xtime[s1 ^ s2];
                state[i + 2] ^= h1 ^ my.xtime[s2 ^ s3];
                state[i + 3] ^= h2 ^ my.xtime[s3 ^ s0];
            }
        };

        return my;

    }());

    var cryptico = (function() {

        var my = {};

        aes.Init();

        var base64Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

        my.b256to64 = function(t) {
            var a, c, n;
            var r = '', s = 0;
            var tl = t.length;
            for (n = 0; n < tl; n++)
            {
                c = t.charCodeAt(n);
                if (s == 0)
                {
                    r += base64Chars.charAt((c >> 2) & 63);
                    a = (c & 3) << 4;
                }
                else if (s == 1)
                {
                    r += base64Chars.charAt((a | (c >> 4) & 15));
                    a = (c & 15) << 2;
                }
                else if (s == 2)
                {
                    r += base64Chars.charAt(a | ((c >> 6) & 3));
                    r += base64Chars.charAt(c & 63);
                }
                s += 1;
                if (s == 3) s = 0;
            }
            if (s > 0)
            {
                r += base64Chars.charAt(a);
                r += '=';
            }
            if (s == 1)
            {
                r += '=';
            }
            return r;
        };

        my.b64to256 = function(t) 
        {
            var c, n;
            var r = '', s = 0, a = 0;
            var tl = t.length;
            for (n = 0; n < tl; n++)
            {
                c = base64Chars.indexOf(t.charAt(n));
                if (c >= 0)
                {
                    if (s) r += String.fromCharCode(a | (c >> (6 - s)) & 255);
                    s = (s + 2) & 7;
                    a = (c << s) & 255;
                }
            }
            return r;
        };    

        my.b16to64 = function(h) {
            var i;
            var c;
            var ret = "";
            if(h.length % 2 == 1)
            {
                h = "0" + h;
            }
            for (i = 0; i + 3 <= h.length; i += 3)
            {
                c = parseInt(h.substring(i, i + 3), 16);
                ret += base64Chars.charAt(c >> 6) + base64Chars.charAt(c & 63);
            }
            if (i + 1 == h.length)
            {
                c = parseInt(h.substring(i, i + 1), 16);
                ret += base64Chars.charAt(c << 2);
            }
            else if (i + 2 == h.length)
            {
                c = parseInt(h.substring(i, i + 2), 16);
                ret += base64Chars.charAt(c >> 2) + base64Chars.charAt((c & 3) << 4);
            }
            while ((ret.length & 3) > 0) ret += "=";
            return ret;
        };

        my.b64to16 = function(s) {
            var ret = "";
            var i;
            var k = 0;
            var v = 0;
            var slop;
            for (i = 0; i < s.length; ++i)
            {
                if (s.charAt(i) == "=") break;
                v = base64Chars.indexOf(s.charAt(i));
                if (v < 0) continue;
                if (k == 0)
                {
                    ret += int2char(v >> 2);
                    slop = v & 3;
                    k = 1;
                }
                else if (k == 1)
                {
                    ret += int2char((slop << 2) | (v >> 4));
                    slop = v & 0xf;
                    k = 2;
                }
                else if (k == 2)
                {
                    ret += int2char(slop);
                    ret += int2char(v >> 2);
                    slop = v & 3;
                    k = 3;
                }
                else
                {
                    ret += int2char((slop << 2) | (v >> 4));
                    ret += int2char(v & 0xf);
                    k = 0;
                }
            }
            if (k == 1) ret += int2char(slop << 2);
            return ret;
        };
        
        // Converts a string to a byte array.
        my.string2bytes = function(string)
        {
            var bytes = new Array();
            for(var i = 0; i < string.length; i++) 
            {
                bytes.push(string.charCodeAt(i));
            }
            return bytes;
        };

        // Converts a byte array to a string.
        my.bytes2string = function(bytes)
        {
            var string = "";
            for(var i = 0; i < bytes.length; i++)
            {
                string += String.fromCharCode(bytes[i]);
            }   
            return string;
        };
        
        // Returns a XOR b, where a and b are 16-byte byte arrays.
        my.blockXOR = function(a, b)
        {
            var xor = new Array(16);
            for(var i = 0; i < 16; i++)
            {
                xor[i] = a[i] ^ b[i];
            }
            return xor;
        };
        
        // Returns a 16-byte initialization vector.
        my.blockIV = function()
        {
            var r = new SecureRandom();
            var IV = new Array(16);
            r.nextBytes(IV);
            return IV;
        };
        
        // Returns a copy of bytes with zeros appended to the end
        // so that the (length of bytes) % 16 == 0.
        my.pad16 = function(bytes)
        {
            var newBytes = bytes.slice(0);
            var padding = (16 - (bytes.length % 16)) % 16;
            for(i = bytes.length; i < bytes.length + padding; i++)
            {
                newBytes.push(0);
            }
            return newBytes;
        };
        
        // Removes trailing zeros from a byte array.
        my.depad = function(bytes)
        {
            var newBytes = bytes.slice(0);
            while(newBytes[newBytes.length - 1] == 0)
            {
                newBytes = newBytes.slice(0, newBytes.length - 1);
            }
            return newBytes;
        };
        
        // AES CBC Encryption.
        my.encryptAESCBC = function(plaintext, key)
        {
            var exkey = key.slice(0);
            aes.ExpandKey(exkey);
            var blocks = my.string2bytes(plaintext);
            blocks = my.pad16(blocks);
            var encryptedBlocks = my.blockIV();
            for(var i = 0; i < blocks.length/16; i++)
            {
                var tempBlock = blocks.slice(i * 16, i * 16 + 16);
                var prevBlock = encryptedBlocks.slice((i) * 16, (i) * 16 + 16);
                tempBlock = my.blockXOR(prevBlock, tempBlock);
                aes.Encrypt(tempBlock, exkey);
                encryptedBlocks = encryptedBlocks.concat(tempBlock);
            }
            var ciphertext = my.bytes2string(encryptedBlocks);
            return my.b256to64(ciphertext)
        };

        // AES CBC Decryption.
        my.decryptAESCBC = function(encryptedText, key)
        {
            var exkey = key.slice(0);
            aes.ExpandKey(exkey);
            var encryptedText = my.b64to256(encryptedText);
            var encryptedBlocks = my.string2bytes(encryptedText);
            var decryptedBlocks = new Array();
            for(var i = 1; i < encryptedBlocks.length/16; i++)
            {
                var tempBlock = encryptedBlocks.slice(i * 16, i * 16 + 16);
                var prevBlock = encryptedBlocks.slice((i-1) * 16, (i-1) * 16 + 16);
                aes.Decrypt(tempBlock, exkey);
                tempBlock = my.blockXOR(prevBlock, tempBlock);
                decryptedBlocks = decryptedBlocks.concat(tempBlock);
            }
            decryptedBlocks = my.depad(decryptedBlocks);
            return my.bytes2string(decryptedBlocks);
        };
        
        // Wraps a string to 60 characters.
        my.wrap60 = function(string) 
        {
            var outstr = "";
            for(var i = 0; i < string.length; i++) {
                if(i % 60 == 0 && i != 0) outstr += "\n";
                outstr += string[i]; }
            return outstr; 
        };

        // Generate a random key for the AES-encrypted message.
        my.generateAESKey = function()
        {
            var key = new Array(32);
            var r = new SecureRandom();
            r.nextBytes(key);
            return key;
        };

        // Generates an RSA key from a passphrase.
        my.generateRSAKey = function(passphrase, bitlength)
        {
            Math.seedrandom(sha256.hex(passphrase));
            var rsa = new RSAKey();
            rsa.generate(bitlength, "03");
            return rsa;
        };

        // Returns the ascii-armored version of the public key.
        my.publicKeyString = function(rsakey) 
        {
            return my.b16to64(rsakey.n.toString(16));
        };
        
        // Returns an MD5 sum of a publicKeyString for easier identification.
        my.publicKeyID = function(publicKeyString)
        {
            return MD5(publicKeyString);
        };
        
        my.publicKeyFromString = function(string)
        {
            var N = my.b64to16(string.split("|")[0]);
            var E = "03";
            var rsa = new RSAKey();
            rsa.setPublic(N, E);
            return rsa
        };
        
        my.encrypt = function(plaintext, publickeystring, signingkey)
        {
            var cipherblock = "";
            var aeskey = my.generateAESKey();
            try
            {
                var publickey = my.publicKeyFromString(publickeystring);
                cipherblock += my.b16to64(publickey.encrypt(my.bytes2string(aeskey))) + "?";
            }
            catch(err)
            {
                return {status: "Invalid public key"};
            }
            if(signingkey)
            {
                signString = cryptico.b16to64(signingkey.signString(plaintext, "sha256"));
                plaintext += "::52cee64bb3a38f6403386519a39ac91c::";
                plaintext += cryptico.publicKeyString(signingkey);
                plaintext += "::52cee64bb3a38f6403386519a39ac91c::";
                plaintext += signString;
            }
            cipherblock += my.encryptAESCBC(plaintext, aeskey);    
            return {status: "success", cipher: cipherblock};
        };

        my.decrypt = function(ciphertext, key)
        {
            var cipherblock = ciphertext.split("?");
            var aeskey = key.decrypt(my.b64to16(cipherblock[0]));
            if(aeskey == null)
            {
                return {status: "failure"};
            }
            aeskey = my.string2bytes(aeskey);
            var plaintext = my.decryptAESCBC(cipherblock[1], aeskey).split("::52cee64bb3a38f6403386519a39ac91c::");
            if(plaintext.length == 3)
            {
                var publickey = my.publicKeyFromString(plaintext[1]);
                var signature = my.b64to16(plaintext[2]);
                if(publickey.verifyString(plaintext[0], signature))
                {
                    return {status: "success", 
                            plaintext: plaintext[0], 
                            signature: "verified", 
                            publicKeyString: my.publicKeyString(publickey)};
                }
                else
                {
                    return {status: "success", 
                            plaintext: plaintext[0], 
                            signature: "forged", 
                            publicKeyString: my.publicKeyString(publickey)};
                }
            }
            else
            {
                return {status: "success", plaintext: plaintext[0], signature: "unsigned"};
            }
        };

        return my;

    }());

    {
        module.exports = cryptico;
        module.exports.RSAKey = RSAKey;
    }
    });
    var cryptico_2 = cryptico_1.RSAKey;

    var aesJs = createCommonjsModule(function (module, exports) {
    /*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */
    (function(root) {

        function checkInt(value) {
            return (parseInt(value) === value);
        }

        function checkInts(arrayish) {
            if (!checkInt(arrayish.length)) { return false; }

            for (var i = 0; i < arrayish.length; i++) {
                if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {
                    return false;
                }
            }

            return true;
        }

        function coerceArray(arg, copy) {

            // ArrayBuffer view
            if (arg.buffer && arg.name === 'Uint8Array') {

                if (copy) {
                    if (arg.slice) {
                        arg = arg.slice();
                    } else {
                        arg = Array.prototype.slice.call(arg);
                    }
                }

                return arg;
            }

            // It's an array; check it is a valid representation of a byte
            if (Array.isArray(arg)) {
                if (!checkInts(arg)) {
                    throw new Error('Array contains invalid value: ' + arg);
                }

                return new Uint8Array(arg);
            }

            // Something else, but behaves like an array (maybe a Buffer? Arguments?)
            if (checkInt(arg.length) && checkInts(arg)) {
                return new Uint8Array(arg);
            }

            throw new Error('unsupported array-like object');
        }

        function createArray(length) {
            return new Uint8Array(length);
        }

        function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {
            if (sourceStart != null || sourceEnd != null) {
                if (sourceArray.slice) {
                    sourceArray = sourceArray.slice(sourceStart, sourceEnd);
                } else {
                    sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);
                }
            }
            targetArray.set(sourceArray, targetStart);
        }



        var convertUtf8 = (function() {
            function toBytes(text) {
                var result = [], i = 0;
                text = encodeURI(text);
                while (i < text.length) {
                    var c = text.charCodeAt(i++);

                    // if it is a % sign, encode the following 2 bytes as a hex value
                    if (c === 37) {
                        result.push(parseInt(text.substr(i, 2), 16));
                        i += 2;

                    // otherwise, just the actual byte
                    } else {
                        result.push(c);
                    }
                }

                return coerceArray(result);
            }

            function fromBytes(bytes) {
                var result = [], i = 0;

                while (i < bytes.length) {
                    var c = bytes[i];

                    if (c < 128) {
                        result.push(String.fromCharCode(c));
                        i++;
                    } else if (c > 191 && c < 224) {
                        result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));
                        i += 2;
                    } else {
                        result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));
                        i += 3;
                    }
                }

                return result.join('');
            }

            return {
                toBytes: toBytes,
                fromBytes: fromBytes,
            }
        })();

        var convertHex = (function() {
            function toBytes(text) {
                var result = [];
                for (var i = 0; i < text.length; i += 2) {
                    result.push(parseInt(text.substr(i, 2), 16));
                }

                return result;
            }

            // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html
            var Hex = '0123456789abcdef';

            function fromBytes(bytes) {
                    var result = [];
                    for (var i = 0; i < bytes.length; i++) {
                        var v = bytes[i];
                        result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);
                    }
                    return result.join('');
            }

            return {
                toBytes: toBytes,
                fromBytes: fromBytes,
            }
        })();


        // Number of rounds by keysize
        var numberOfRounds = {16: 10, 24: 12, 32: 14};

        // Round constant words
        var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];

        // S-box and Inverse S-box (S is for Substitution)
        var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];
        var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];

        // Transformations for encryption
        var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];
        var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];
        var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];
        var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];

        // Transformations for decryption
        var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];
        var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];
        var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];
        var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];

        // Transformations for decryption key expansion
        var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];
        var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];
        var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];
        var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];

        function convertToInt32(bytes) {
            var result = [];
            for (var i = 0; i < bytes.length; i += 4) {
                result.push(
                    (bytes[i    ] << 24) |
                    (bytes[i + 1] << 16) |
                    (bytes[i + 2] <<  8) |
                     bytes[i + 3]
                );
            }
            return result;
        }

        var AES = function(key) {
            if (!(this instanceof AES)) {
                throw Error('AES must be instanitated with `new`');
            }

            Object.defineProperty(this, 'key', {
                value: coerceArray(key, true)
            });

            this._prepare();
        };


        AES.prototype._prepare = function() {

            var rounds = numberOfRounds[this.key.length];
            if (rounds == null) {
                throw new Error('invalid key size (must be 16, 24 or 32 bytes)');
            }

            // encryption round keys
            this._Ke = [];

            // decryption round keys
            this._Kd = [];

            for (var i = 0; i <= rounds; i++) {
                this._Ke.push([0, 0, 0, 0]);
                this._Kd.push([0, 0, 0, 0]);
            }

            var roundKeyCount = (rounds + 1) * 4;
            var KC = this.key.length / 4;

            // convert the key into ints
            var tk = convertToInt32(this.key);

            // copy values into round key arrays
            var index;
            for (var i = 0; i < KC; i++) {
                index = i >> 2;
                this._Ke[index][i % 4] = tk[i];
                this._Kd[rounds - index][i % 4] = tk[i];
            }

            // key expansion (fips-197 section 5.2)
            var rconpointer = 0;
            var t = KC, tt;
            while (t < roundKeyCount) {
                tt = tk[KC - 1];
                tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^
                          (S[(tt >>  8) & 0xFF] << 16) ^
                          (S[ tt        & 0xFF] <<  8) ^
                           S[(tt >> 24) & 0xFF]        ^
                          (rcon[rconpointer] << 24));
                rconpointer += 1;

                // key expansion (for non-256 bit)
                if (KC != 8) {
                    for (var i = 1; i < KC; i++) {
                        tk[i] ^= tk[i - 1];
                    }

                // key expansion for 256-bit keys is "slightly different" (fips-197)
                } else {
                    for (var i = 1; i < (KC / 2); i++) {
                        tk[i] ^= tk[i - 1];
                    }
                    tt = tk[(KC / 2) - 1];

                    tk[KC / 2] ^= (S[ tt        & 0xFF]        ^
                                  (S[(tt >>  8) & 0xFF] <<  8) ^
                                  (S[(tt >> 16) & 0xFF] << 16) ^
                                  (S[(tt >> 24) & 0xFF] << 24));

                    for (var i = (KC / 2) + 1; i < KC; i++) {
                        tk[i] ^= tk[i - 1];
                    }
                }

                // copy values into round key arrays
                var i = 0, r, c;
                while (i < KC && t < roundKeyCount) {
                    r = t >> 2;
                    c = t % 4;
                    this._Ke[r][c] = tk[i];
                    this._Kd[rounds - r][c] = tk[i++];
                    t++;
                }
            }

            // inverse-cipher-ify the decryption round key (fips-197 section 5.3)
            for (var r = 1; r < rounds; r++) {
                for (var c = 0; c < 4; c++) {
                    tt = this._Kd[r][c];
                    this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^
                                      U2[(tt >> 16) & 0xFF] ^
                                      U3[(tt >>  8) & 0xFF] ^
                                      U4[ tt        & 0xFF]);
                }
            }
        };

        AES.prototype.encrypt = function(plaintext) {
            if (plaintext.length != 16) {
                throw new Error('invalid plaintext size (must be 16 bytes)');
            }

            var rounds = this._Ke.length - 1;
            var a = [0, 0, 0, 0];

            // convert plaintext to (ints ^ key)
            var t = convertToInt32(plaintext);
            for (var i = 0; i < 4; i++) {
                t[i] ^= this._Ke[0][i];
            }

            // apply round transforms
            for (var r = 1; r < rounds; r++) {
                for (var i = 0; i < 4; i++) {
                    a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^
                            T2[(t[(i + 1) % 4] >> 16) & 0xff] ^
                            T3[(t[(i + 2) % 4] >>  8) & 0xff] ^
                            T4[ t[(i + 3) % 4]        & 0xff] ^
                            this._Ke[r][i]);
                }
                t = a.slice();
            }

            // the last round is special
            var result = createArray(16), tt;
            for (var i = 0; i < 4; i++) {
                tt = this._Ke[rounds][i];
                result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
                result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
                result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
                result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;
            }

            return result;
        };

        AES.prototype.decrypt = function(ciphertext) {
            if (ciphertext.length != 16) {
                throw new Error('invalid ciphertext size (must be 16 bytes)');
            }

            var rounds = this._Kd.length - 1;
            var a = [0, 0, 0, 0];

            // convert plaintext to (ints ^ key)
            var t = convertToInt32(ciphertext);
            for (var i = 0; i < 4; i++) {
                t[i] ^= this._Kd[0][i];
            }

            // apply round transforms
            for (var r = 1; r < rounds; r++) {
                for (var i = 0; i < 4; i++) {
                    a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^
                            T6[(t[(i + 3) % 4] >> 16) & 0xff] ^
                            T7[(t[(i + 2) % 4] >>  8) & 0xff] ^
                            T8[ t[(i + 1) % 4]        & 0xff] ^
                            this._Kd[r][i]);
                }
                t = a.slice();
            }

            // the last round is special
            var result = createArray(16), tt;
            for (var i = 0; i < 4; i++) {
                tt = this._Kd[rounds][i];
                result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;
                result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;
                result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;
                result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;
            }

            return result;
        };


        /**
         *  Mode Of Operation - Electonic Codebook (ECB)
         */
        var ModeOfOperationECB = function(key) {
            if (!(this instanceof ModeOfOperationECB)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Electronic Code Block";
            this.name = "ecb";

            this._aes = new AES(key);
        };

        ModeOfOperationECB.prototype.encrypt = function(plaintext) {
            plaintext = coerceArray(plaintext);

            if ((plaintext.length % 16) !== 0) {
                throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
            }

            var ciphertext = createArray(plaintext.length);
            var block = createArray(16);

            for (var i = 0; i < plaintext.length; i += 16) {
                copyArray(plaintext, block, 0, i, i + 16);
                block = this._aes.encrypt(block);
                copyArray(block, ciphertext, i);
            }

            return ciphertext;
        };

        ModeOfOperationECB.prototype.decrypt = function(ciphertext) {
            ciphertext = coerceArray(ciphertext);

            if ((ciphertext.length % 16) !== 0) {
                throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
            }

            var plaintext = createArray(ciphertext.length);
            var block = createArray(16);

            for (var i = 0; i < ciphertext.length; i += 16) {
                copyArray(ciphertext, block, 0, i, i + 16);
                block = this._aes.decrypt(block);
                copyArray(block, plaintext, i);
            }

            return plaintext;
        };


        /**
         *  Mode Of Operation - Cipher Block Chaining (CBC)
         */
        var ModeOfOperationCBC = function(key, iv) {
            if (!(this instanceof ModeOfOperationCBC)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Cipher Block Chaining";
            this.name = "cbc";

            if (!iv) {
                iv = createArray(16);

            } else if (iv.length != 16) {
                throw new Error('invalid initialation vector size (must be 16 bytes)');
            }

            this._lastCipherblock = coerceArray(iv, true);

            this._aes = new AES(key);
        };

        ModeOfOperationCBC.prototype.encrypt = function(plaintext) {
            plaintext = coerceArray(plaintext);

            if ((plaintext.length % 16) !== 0) {
                throw new Error('invalid plaintext size (must be multiple of 16 bytes)');
            }

            var ciphertext = createArray(plaintext.length);
            var block = createArray(16);

            for (var i = 0; i < plaintext.length; i += 16) {
                copyArray(plaintext, block, 0, i, i + 16);

                for (var j = 0; j < 16; j++) {
                    block[j] ^= this._lastCipherblock[j];
                }

                this._lastCipherblock = this._aes.encrypt(block);
                copyArray(this._lastCipherblock, ciphertext, i);
            }

            return ciphertext;
        };

        ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {
            ciphertext = coerceArray(ciphertext);

            if ((ciphertext.length % 16) !== 0) {
                throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');
            }

            var plaintext = createArray(ciphertext.length);
            var block = createArray(16);

            for (var i = 0; i < ciphertext.length; i += 16) {
                copyArray(ciphertext, block, 0, i, i + 16);
                block = this._aes.decrypt(block);

                for (var j = 0; j < 16; j++) {
                    plaintext[i + j] = block[j] ^ this._lastCipherblock[j];
                }

                copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);
            }

            return plaintext;
        };


        /**
         *  Mode Of Operation - Cipher Feedback (CFB)
         */
        var ModeOfOperationCFB = function(key, iv, segmentSize) {
            if (!(this instanceof ModeOfOperationCFB)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Cipher Feedback";
            this.name = "cfb";

            if (!iv) {
                iv = createArray(16);

            } else if (iv.length != 16) {
                throw new Error('invalid initialation vector size (must be 16 size)');
            }

            if (!segmentSize) { segmentSize = 1; }

            this.segmentSize = segmentSize;

            this._shiftRegister = coerceArray(iv, true);

            this._aes = new AES(key);
        };

        ModeOfOperationCFB.prototype.encrypt = function(plaintext) {
            if ((plaintext.length % this.segmentSize) != 0) {
                throw new Error('invalid plaintext size (must be segmentSize bytes)');
            }

            var encrypted = coerceArray(plaintext, true);

            var xorSegment;
            for (var i = 0; i < encrypted.length; i += this.segmentSize) {
                xorSegment = this._aes.encrypt(this._shiftRegister);
                for (var j = 0; j < this.segmentSize; j++) {
                    encrypted[i + j] ^= xorSegment[j];
                }

                // Shift the register
                copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
                copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
            }

            return encrypted;
        };

        ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {
            if ((ciphertext.length % this.segmentSize) != 0) {
                throw new Error('invalid ciphertext size (must be segmentSize bytes)');
            }

            var plaintext = coerceArray(ciphertext, true);

            var xorSegment;
            for (var i = 0; i < plaintext.length; i += this.segmentSize) {
                xorSegment = this._aes.encrypt(this._shiftRegister);

                for (var j = 0; j < this.segmentSize; j++) {
                    plaintext[i + j] ^= xorSegment[j];
                }

                // Shift the register
                copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);
                copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);
            }

            return plaintext;
        };

        /**
         *  Mode Of Operation - Output Feedback (OFB)
         */
        var ModeOfOperationOFB = function(key, iv) {
            if (!(this instanceof ModeOfOperationOFB)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Output Feedback";
            this.name = "ofb";

            if (!iv) {
                iv = createArray(16);

            } else if (iv.length != 16) {
                throw new Error('invalid initialation vector size (must be 16 bytes)');
            }

            this._lastPrecipher = coerceArray(iv, true);
            this._lastPrecipherIndex = 16;

            this._aes = new AES(key);
        };

        ModeOfOperationOFB.prototype.encrypt = function(plaintext) {
            var encrypted = coerceArray(plaintext, true);

            for (var i = 0; i < encrypted.length; i++) {
                if (this._lastPrecipherIndex === 16) {
                    this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);
                    this._lastPrecipherIndex = 0;
                }
                encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];
            }

            return encrypted;
        };

        // Decryption is symetric
        ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;


        /**
         *  Counter object for CTR common mode of operation
         */
        var Counter = function(initialValue) {
            if (!(this instanceof Counter)) {
                throw Error('Counter must be instanitated with `new`');
            }

            // We allow 0, but anything false-ish uses the default 1
            if (initialValue !== 0 && !initialValue) { initialValue = 1; }

            if (typeof(initialValue) === 'number') {
                this._counter = createArray(16);
                this.setValue(initialValue);

            } else {
                this.setBytes(initialValue);
            }
        };

        Counter.prototype.setValue = function(value) {
            if (typeof(value) !== 'number' || parseInt(value) != value) {
                throw new Error('invalid counter value (must be an integer)');
            }

            // We cannot safely handle numbers beyond the safe range for integers
            if (value > Number.MAX_SAFE_INTEGER) {
                throw new Error('integer value out of safe range');
            }

            for (var index = 15; index >= 0; --index) {
                this._counter[index] = value % 256;
                value = parseInt(value / 256);
            }
        };

        Counter.prototype.setBytes = function(bytes) {
            bytes = coerceArray(bytes, true);

            if (bytes.length != 16) {
                throw new Error('invalid counter bytes size (must be 16 bytes)');
            }

            this._counter = bytes;
        };

        Counter.prototype.increment = function() {
            for (var i = 15; i >= 0; i--) {
                if (this._counter[i] === 255) {
                    this._counter[i] = 0;
                } else {
                    this._counter[i]++;
                    break;
                }
            }
        };


        /**
         *  Mode Of Operation - Counter (CTR)
         */
        var ModeOfOperationCTR = function(key, counter) {
            if (!(this instanceof ModeOfOperationCTR)) {
                throw Error('AES must be instanitated with `new`');
            }

            this.description = "Counter";
            this.name = "ctr";

            if (!(counter instanceof Counter)) {
                counter = new Counter(counter);
            }

            this._counter = counter;

            this._remainingCounter = null;
            this._remainingCounterIndex = 16;

            this._aes = new AES(key);
        };

        ModeOfOperationCTR.prototype.encrypt = function(plaintext) {
            var encrypted = coerceArray(plaintext, true);

            for (var i = 0; i < encrypted.length; i++) {
                if (this._remainingCounterIndex === 16) {
                    this._remainingCounter = this._aes.encrypt(this._counter._counter);
                    this._remainingCounterIndex = 0;
                    this._counter.increment();
                }
                encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];
            }

            return encrypted;
        };

        // Decryption is symetric
        ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;


        ///////////////////////
        // Padding

        // See:https://tools.ietf.org/html/rfc2315
        function pkcs7pad(data) {
            data = coerceArray(data, true);
            var padder = 16 - (data.length % 16);
            var result = createArray(data.length + padder);
            copyArray(data, result);
            for (var i = data.length; i < result.length; i++) {
                result[i] = padder;
            }
            return result;
        }

        function pkcs7strip(data) {
            data = coerceArray(data, true);
            if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }

            var padder = data[data.length - 1];
            if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }

            var length = data.length - padder;
            for (var i = 0; i < padder; i++) {
                if (data[length + i] !== padder) {
                    throw new Error('PKCS#7 invalid padding byte');
                }
            }

            var result = createArray(length);
            copyArray(data, result, 0, 0, length);
            return result;
        }

        ///////////////////////
        // Exporting


        // The block cipher
        var aesjs = {
            AES: AES,
            Counter: Counter,

            ModeOfOperation: {
                ecb: ModeOfOperationECB,
                cbc: ModeOfOperationCBC,
                cfb: ModeOfOperationCFB,
                ofb: ModeOfOperationOFB,
                ctr: ModeOfOperationCTR
            },

            utils: {
                hex: convertHex,
                utf8: convertUtf8
            },

            padding: {
                pkcs7: {
                    pad: pkcs7pad,
                    strip: pkcs7strip
                }
            },

            _arrayTest: {
                coerceArray: coerceArray,
                createArray: createArray,
                copyArray: copyArray,
            }
        };


        // node.js
        {
            module.exports = aesjs;

        // RequireJS/AMD
        // http://www.requirejs.org/docs/api.html
        // https://github.com/amdjs/amdjs-api/wiki/AMD
        }


    })();
    });

    var hashes = createCommonjsModule(function (module, exports) {
    /**
     * jshashes - https://github.com/h2non/jshashes
     * Released under the "New BSD" license
     *
     * Algorithms specification:
     *
     * MD5 - http://www.ietf.org/rfc/rfc1321.txt
     * RIPEMD-160 - http://homes.esat.kuleuven.be/~bosselae/ripemd160.html
     * SHA1   - http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
     * SHA256 - http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
     * SHA512 - http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf
     * HMAC - http://www.ietf.org/rfc/rfc2104.txt
     */
    (function() {
      var Hashes;

      function utf8Encode(str) {
        var x, y, output = '',
          i = -1,
          l;

        if (str && str.length) {
          l = str.length;
          while ((i += 1) < l) {
            /* Decode utf-16 surrogate pairs */
            x = str.charCodeAt(i);
            y = i + 1 < l ? str.charCodeAt(i + 1) : 0;
            if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {
              x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
              i += 1;
            }
            /* Encode output as utf-8 */
            if (x <= 0x7F) {
              output += String.fromCharCode(x);
            } else if (x <= 0x7FF) {
              output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),
                0x80 | (x & 0x3F));
            } else if (x <= 0xFFFF) {
              output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),
                0x80 | ((x >>> 6) & 0x3F),
                0x80 | (x & 0x3F));
            } else if (x <= 0x1FFFFF) {
              output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),
                0x80 | ((x >>> 12) & 0x3F),
                0x80 | ((x >>> 6) & 0x3F),
                0x80 | (x & 0x3F));
            }
          }
        }
        return output;
      }

      function utf8Decode(str) {
        var i, ac, c1, c2, c3, arr = [],
          l;
        i = ac = c1 = c2 = c3 = 0;

        if (str && str.length) {
          l = str.length;
          str += '';

          while (i < l) {
            c1 = str.charCodeAt(i);
            ac += 1;
            if (c1 < 128) {
              arr[ac] = String.fromCharCode(c1);
              i += 1;
            } else if (c1 > 191 && c1 < 224) {
              c2 = str.charCodeAt(i + 1);
              arr[ac] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
              i += 2;
            } else {
              c2 = str.charCodeAt(i + 1);
              c3 = str.charCodeAt(i + 2);
              arr[ac] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
              i += 3;
            }
          }
        }
        return arr.join('');
      }

      /**
       * Add integers, wrapping at 2^32. This uses 16-bit operations internally
       * to work around bugs in some JS interpreters.
       */

      function safe_add(x, y) {
        var lsw = (x & 0xFFFF) + (y & 0xFFFF),
          msw = (x >> 16) + (y >> 16) + (lsw >> 16);
        return (msw << 16) | (lsw & 0xFFFF);
      }

      /**
       * Bitwise rotate a 32-bit number to the left.
       */

      function bit_rol(num, cnt) {
        return (num << cnt) | (num >>> (32 - cnt));
      }

      /**
       * Convert a raw string to a hex string
       */

      function rstr2hex(input, hexcase) {
        var hex_tab = hexcase ? '0123456789ABCDEF' : '0123456789abcdef',
          output = '',
          x, i = 0,
          l = input.length;
        for (; i < l; i += 1) {
          x = input.charCodeAt(i);
          output += hex_tab.charAt((x >>> 4) & 0x0F) + hex_tab.charAt(x & 0x0F);
        }
        return output;
      }

      /**
       * Convert an array of big-endian words to a string
       */

      function binb2rstr(input) {
        var i, l = input.length * 32,
          output = '';
        for (i = 0; i < l; i += 8) {
          output += String.fromCharCode((input[i >> 5] >>> (24 - i % 32)) & 0xFF);
        }
        return output;
      }

      /**
       * Convert an array of little-endian words to a string
       */

      function binl2rstr(input) {
        var i, l = input.length * 32,
          output = '';
        for (i = 0; i < l; i += 8) {
          output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
        }
        return output;
      }

      /**
       * Convert a raw string to an array of little-endian words
       * Characters >255 have their high-byte silently ignored.
       */

      function rstr2binl(input) {
        var i, l = input.length * 8,
          output = Array(input.length >> 2),
          lo = output.length;
        for (i = 0; i < lo; i += 1) {
          output[i] = 0;
        }
        for (i = 0; i < l; i += 8) {
          output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (i % 32);
        }
        return output;
      }

      /**
       * Convert a raw string to an array of big-endian words
       * Characters >255 have their high-byte silently ignored.
       */

      function rstr2binb(input) {
        var i, l = input.length * 8,
          output = Array(input.length >> 2),
          lo = output.length;
        for (i = 0; i < lo; i += 1) {
          output[i] = 0;
        }
        for (i = 0; i < l; i += 8) {
          output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << (24 - i % 32);
        }
        return output;
      }

      /**
       * Convert a raw string to an arbitrary string encoding
       */

      function rstr2any(input, encoding) {
        var divisor = encoding.length,
          remainders = Array(),
          i, q, x, ld, quotient, dividend, output, full_length;

        /* Convert to an array of 16-bit big-endian values, forming the dividend */
        dividend = Array(Math.ceil(input.length / 2));
        ld = dividend.length;
        for (i = 0; i < ld; i += 1) {
          dividend[i] = (input.charCodeAt(i * 2) << 8) | input.charCodeAt(i * 2 + 1);
        }

        /**
         * Repeatedly perform a long division. The binary array forms the dividend,
         * the length of the encoding is the divisor. Once computed, the quotient
         * forms the dividend for the next step. We stop when the dividend is zerHashes.
         * All remainders are stored for later use.
         */
        while (dividend.length > 0) {
          quotient = Array();
          x = 0;
          for (i = 0; i < dividend.length; i += 1) {
            x = (x << 16) + dividend[i];
            q = Math.floor(x / divisor);
            x -= q * divisor;
            if (quotient.length > 0 || q > 0) {
              quotient[quotient.length] = q;
            }
          }
          remainders[remainders.length] = x;
          dividend = quotient;
        }

        /* Convert the remainders to the output string */
        output = '';
        for (i = remainders.length - 1; i >= 0; i--) {
          output += encoding.charAt(remainders[i]);
        }

        /* Append leading zero equivalents */
        full_length = Math.ceil(input.length * 8 / (Math.log(encoding.length) / Math.log(2)));
        for (i = output.length; i < full_length; i += 1) {
          output = encoding[0] + output;
        }
        return output;
      }

      /**
       * Convert a raw string to a base-64 string
       */

      function rstr2b64(input, b64pad) {
        var tab = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
          output = '',
          len = input.length,
          i, j, triplet;
        b64pad = b64pad || '=';
        for (i = 0; i < len; i += 3) {
          triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);
          for (j = 0; j < 4; j += 1) {
            if (i * 8 + j * 6 > input.length * 8) {
              output += b64pad;
            } else {
              output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);
            }
          }
        }
        return output;
      }

      Hashes = {
        /**
         * @property {String} version
         * @readonly
         */
        VERSION: '1.0.6',
        /**
         * @member Hashes
         * @class Base64
         * @constructor
         */
        Base64: function() {
          // private properties
          var tab = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',
            pad = '=', // default pad according with the RFC standard
            utf8 = true; // by default enable UTF-8 support encoding

          // public method for encoding
          this.encode = function(input) {
            var i, j, triplet,
              output = '',
              len = input.length;

            pad = pad || '=';
            input = (utf8) ? utf8Encode(input) : input;

            for (i = 0; i < len; i += 3) {
              triplet = (input.charCodeAt(i) << 16) | (i + 1 < len ? input.charCodeAt(i + 1) << 8 : 0) | (i + 2 < len ? input.charCodeAt(i + 2) : 0);
              for (j = 0; j < 4; j += 1) {
                if (i * 8 + j * 6 > len * 8) {
                  output += pad;
                } else {
                  output += tab.charAt((triplet >>> 6 * (3 - j)) & 0x3F);
                }
              }
            }
            return output;
          };

          // public method for decoding
          this.decode = function(input) {
            // var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            var i, o1, o2, o3, h1, h2, h3, h4, bits, ac,
              dec = '',
              arr = [];
            if (!input) {
              return input;
            }

            i = ac = 0;
            input = input.replace(new RegExp('\\' + pad, 'gi'), ''); // use '='
            //input += '';

            do { // unpack four hexets into three octets using index points in b64
              h1 = tab.indexOf(input.charAt(i += 1));
              h2 = tab.indexOf(input.charAt(i += 1));
              h3 = tab.indexOf(input.charAt(i += 1));
              h4 = tab.indexOf(input.charAt(i += 1));

              bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;

              o1 = bits >> 16 & 0xff;
              o2 = bits >> 8 & 0xff;
              o3 = bits & 0xff;
              ac += 1;

              if (h3 === 64) {
                arr[ac] = String.fromCharCode(o1);
              } else if (h4 === 64) {
                arr[ac] = String.fromCharCode(o1, o2);
              } else {
                arr[ac] = String.fromCharCode(o1, o2, o3);
              }
            } while (i < input.length);

            dec = arr.join('');
            dec = (utf8) ? utf8Decode(dec) : dec;

            return dec;
          };

          // set custom pad string
          this.setPad = function(str) {
            pad = str || pad;
            return this;
          };
          // set custom tab string characters
          this.setTab = function(str) {
            tab = str || tab;
            return this;
          };
          this.setUTF8 = function(bool) {
            if (typeof bool === 'boolean') {
              utf8 = bool;
            }
            return this;
          };
        },

        /**
         * CRC-32 calculation
         * @member Hashes
         * @method CRC32
         * @static
         * @param {String} str Input String
         * @return {String}
         */
        CRC32: function(str) {
          var crc = 0,
            x = 0,
            y = 0,
            table, i, iTop;
          str = utf8Encode(str);

          table = [
            '00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 ',
            '79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 ',
            '84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F ',
            '63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD ',
            'A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC ',
            '51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 ',
            'B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 ',
            '06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 ',
            'E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 ',
            '12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 ',
            'D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 ',
            '33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 ',
            'CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 ',
            '9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E ',
            '7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D ',
            '806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 ',
            '60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA ',
            'AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 ',
            '5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 ',
            'B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 ',
            '05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 ',
            'F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA ',
            '11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 ',
            'D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F ',
            '30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E ',
            'C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D'
          ].join('');

          crc = crc ^ (-1);
          for (i = 0, iTop = str.length; i < iTop; i += 1) {
            y = (crc ^ str.charCodeAt(i)) & 0xFF;
            x = '0x' + table.substr(y * 9, 8);
            crc = (crc >>> 8) ^ x;
          }
          // always return a positive number (that's what >>> 0 does)
          return (crc ^ (-1)) >>> 0;
        },
        /**
         * @member Hashes
         * @class MD5
         * @constructor
         * @param {Object} [config]
         *
         * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
         * Digest Algorithm, as defined in RFC 1321.
         * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         * See <http://pajhome.org.uk/crypt/md5> for more infHashes.
         */
        MD5: function(options) {
          /**
           * Private config properties. You may need to tweak these to be compatible with
           * the server-side, but the defaults work in most cases.
           * See {@link Hashes.MD5#method-setUpperCase} and {@link Hashes.SHA1#method-setUpperCase}
           */
          var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false, // hexadecimal output case format. false - lowercase; true - uppercase
            b64pad = (options && typeof options.pad === 'string') ? options.pad : '=', // base-64 pad character. Defaults to '=' for strict RFC compliance
            utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true; // enable/disable utf8 encoding

          // privileged (public) methods
          this.hex = function(s) {
            return rstr2hex(rstr(s), hexcase);
          };
          this.b64 = function(s) {
            return rstr2b64(rstr(s), b64pad);
          };
          this.any = function(s, e) {
            return rstr2any(rstr(s), e);
          };
          this.raw = function(s) {
            return rstr(s);
          };
          this.hex_hmac = function(k, d) {
            return rstr2hex(rstr_hmac(k, d), hexcase);
          };
          this.b64_hmac = function(k, d) {
            return rstr2b64(rstr_hmac(k, d), b64pad);
          };
          this.any_hmac = function(k, d, e) {
            return rstr2any(rstr_hmac(k, d), e);
          };
          /**
           * Perform a simple self-test to see if the VM is working
           * @return {String} Hexadecimal hash sample
           */
          this.vm_test = function() {
            return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';
          };
          /**
           * Enable/disable uppercase hexadecimal returned string
           * @param {Boolean}
           * @return {Object} this
           */
          this.setUpperCase = function(a) {
            if (typeof a === 'boolean') {
              hexcase = a;
            }
            return this;
          };
          /**
           * Defines a base64 pad string
           * @param {String} Pad
           * @return {Object} this
           */
          this.setPad = function(a) {
            b64pad = a || b64pad;
            return this;
          };
          /**
           * Defines a base64 pad string
           * @param {Boolean}
           * @return {Object} [this]
           */
          this.setUTF8 = function(a) {
            if (typeof a === 'boolean') {
              utf8 = a;
            }
            return this;
          };

          // private methods

          /**
           * Calculate the MD5 of a raw string
           */

          function rstr(s) {
            s = (utf8) ? utf8Encode(s) : s;
            return binl2rstr(binl(rstr2binl(s), s.length * 8));
          }

          /**
           * Calculate the HMAC-MD5, of a key and some data (raw strings)
           */

          function rstr_hmac(key, data) {
            var bkey, ipad, opad, hash, i;

            key = (utf8) ? utf8Encode(key) : key;
            data = (utf8) ? utf8Encode(data) : data;
            bkey = rstr2binl(key);
            if (bkey.length > 16) {
              bkey = binl(bkey, key.length * 8);
            }

            ipad = Array(16), opad = Array(16);
            for (i = 0; i < 16; i += 1) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
            }
            hash = binl(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
            return binl2rstr(binl(opad.concat(hash), 512 + 128));
          }

          /**
           * Calculate the MD5 of an array of little-endian words, and a bit length.
           */

          function binl(x, len) {
            var i, olda, oldb, oldc, oldd,
              a = 1732584193,
              b = -271733879,
              c = -1732584194,
              d = 271733878;

            /* append padding */
            x[len >> 5] |= 0x80 << ((len) % 32);
            x[(((len + 64) >>> 9) << 4) + 14] = len;

            for (i = 0; i < x.length; i += 16) {
              olda = a;
              oldb = b;
              oldc = c;
              oldd = d;

              a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
              d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
              c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
              b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
              a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
              d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
              c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
              b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
              a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
              d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
              c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
              b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
              a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
              d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
              c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
              b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);

              a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
              d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
              c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
              b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
              a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
              d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
              c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
              b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
              a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
              d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
              c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
              b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
              a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
              d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
              c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
              b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);

              a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
              d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
              c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
              b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
              a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
              d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
              c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
              b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
              a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
              d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
              c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
              b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
              a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
              d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
              c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
              b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);

              a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
              d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
              c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
              b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
              a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
              d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
              c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
              b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
              a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
              d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
              c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
              b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
              a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
              d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
              c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
              b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);

              a = safe_add(a, olda);
              b = safe_add(b, oldb);
              c = safe_add(c, oldc);
              d = safe_add(d, oldd);
            }
            return Array(a, b, c, d);
          }

          /**
           * These functions implement the four basic operations the algorithm uses.
           */

          function md5_cmn(q, a, b, x, s, t) {
            return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
          }

          function md5_ff(a, b, c, d, x, s, t) {
            return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
          }

          function md5_gg(a, b, c, d, x, s, t) {
            return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
          }

          function md5_hh(a, b, c, d, x, s, t) {
            return md5_cmn(b ^ c ^ d, a, b, x, s, t);
          }

          function md5_ii(a, b, c, d, x, s, t) {
            return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
          }
        },
        /**
         * @member Hashes
         * @class Hashes.SHA1
         * @param {Object} [config]
         * @constructor
         *
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined in FIPS 180-1
         * Version 2.2 Copyright Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         * See http://pajhome.org.uk/crypt/md5 for details.
         */
        SHA1: function(options) {
          /**
           * Private config properties. You may need to tweak these to be compatible with
           * the server-side, but the defaults work in most cases.
           * See {@link Hashes.MD5#method-setUpperCase} and {@link Hashes.SHA1#method-setUpperCase}
           */
          var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false, // hexadecimal output case format. false - lowercase; true - uppercase
            b64pad = (options && typeof options.pad === 'string') ? options.pad : '=', // base-64 pad character. Defaults to '=' for strict RFC compliance
            utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true; // enable/disable utf8 encoding

          // public methods
          this.hex = function(s) {
            return rstr2hex(rstr(s), hexcase);
          };
          this.b64 = function(s) {
            return rstr2b64(rstr(s), b64pad);
          };
          this.any = function(s, e) {
            return rstr2any(rstr(s), e);
          };
          this.raw = function(s) {
            return rstr(s);
          };
          this.hex_hmac = function(k, d) {
            return rstr2hex(rstr_hmac(k, d));
          };
          this.b64_hmac = function(k, d) {
            return rstr2b64(rstr_hmac(k, d), b64pad);
          };
          this.any_hmac = function(k, d, e) {
            return rstr2any(rstr_hmac(k, d), e);
          };
          /**
           * Perform a simple self-test to see if the VM is working
           * @return {String} Hexadecimal hash sample
           * @public
           */
          this.vm_test = function() {
            return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';
          };
          /**
           * @description Enable/disable uppercase hexadecimal returned string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUpperCase = function(a) {
            if (typeof a === 'boolean') {
              hexcase = a;
            }
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {string} Pad
           * @return {Object} this
           * @public
           */
          this.setPad = function(a) {
            b64pad = a || b64pad;
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUTF8 = function(a) {
            if (typeof a === 'boolean') {
              utf8 = a;
            }
            return this;
          };

          // private methods

          /**
           * Calculate the SHA-512 of a raw string
           */

          function rstr(s) {
            s = (utf8) ? utf8Encode(s) : s;
            return binb2rstr(binb(rstr2binb(s), s.length * 8));
          }

          /**
           * Calculate the HMAC-SHA1 of a key and some data (raw strings)
           */

          function rstr_hmac(key, data) {
            var bkey, ipad, opad, i, hash;
            key = (utf8) ? utf8Encode(key) : key;
            data = (utf8) ? utf8Encode(data) : data;
            bkey = rstr2binb(key);

            if (bkey.length > 16) {
              bkey = binb(bkey, key.length * 8);
            }
            ipad = Array(16), opad = Array(16);
            for (i = 0; i < 16; i += 1) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
            }
            hash = binb(ipad.concat(rstr2binb(data)), 512 + data.length * 8);
            return binb2rstr(binb(opad.concat(hash), 512 + 160));
          }

          /**
           * Calculate the SHA-1 of an array of big-endian words, and a bit length
           */

          function binb(x, len) {
            var i, j, t, olda, oldb, oldc, oldd, olde,
              w = Array(80),
              a = 1732584193,
              b = -271733879,
              c = -1732584194,
              d = 271733878,
              e = -1009589776;

            /* append padding */
            x[len >> 5] |= 0x80 << (24 - len % 32);
            x[((len + 64 >> 9) << 4) + 15] = len;

            for (i = 0; i < x.length; i += 16) {
              olda = a;
              oldb = b;
              oldc = c;
              oldd = d;
              olde = e;

              for (j = 0; j < 80; j += 1) {
                if (j < 16) {
                  w[j] = x[i + j];
                } else {
                  w[j] = bit_rol(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);
                }
                t = safe_add(safe_add(bit_rol(a, 5), sha1_ft(j, b, c, d)),
                  safe_add(safe_add(e, w[j]), sha1_kt(j)));
                e = d;
                d = c;
                c = bit_rol(b, 30);
                b = a;
                a = t;
              }

              a = safe_add(a, olda);
              b = safe_add(b, oldb);
              c = safe_add(c, oldc);
              d = safe_add(d, oldd);
              e = safe_add(e, olde);
            }
            return Array(a, b, c, d, e);
          }

          /**
           * Perform the appropriate triplet combination function for the current
           * iteration
           */

          function sha1_ft(t, b, c, d) {
            if (t < 20) {
              return (b & c) | ((~b) & d);
            }
            if (t < 40) {
              return b ^ c ^ d;
            }
            if (t < 60) {
              return (b & c) | (b & d) | (c & d);
            }
            return b ^ c ^ d;
          }

          /**
           * Determine the appropriate additive constant for the current iteration
           */

          function sha1_kt(t) {
            return (t < 20) ? 1518500249 : (t < 40) ? 1859775393 :
              (t < 60) ? -1894007588 : -899497514;
          }
        },
        /**
         * @class Hashes.SHA256
         * @param {config}
         *
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined in FIPS 180-2
         * Version 2.2 Copyright Angel Marin, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         * See http://pajhome.org.uk/crypt/md5 for details.
         * Also http://anmar.eu.org/projects/jssha2/
         */
        SHA256: function(options) {
          /**
           * Private properties configuration variables. You may need to tweak these to be compatible with
           * the server-side, but the defaults work in most cases.
           * @see this.setUpperCase() method
           * @see this.setPad() method
           */
          var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false, // hexadecimal output case format. false - lowercase; true - uppercase  */
            b64pad = (options && typeof options.pad === 'string') ? options.pad : '=',
            /* base-64 pad character. Default '=' for strict RFC compliance   */
            utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true,
            /* enable/disable utf8 encoding */
            sha256_K;

          /* privileged (public) methods */
          this.hex = function(s) {
            return rstr2hex(rstr(s, utf8));
          };
          this.b64 = function(s) {
            return rstr2b64(rstr(s, utf8), b64pad);
          };
          this.any = function(s, e) {
            return rstr2any(rstr(s, utf8), e);
          };
          this.raw = function(s) {
            return rstr(s, utf8);
          };
          this.hex_hmac = function(k, d) {
            return rstr2hex(rstr_hmac(k, d));
          };
          this.b64_hmac = function(k, d) {
            return rstr2b64(rstr_hmac(k, d), b64pad);
          };
          this.any_hmac = function(k, d, e) {
            return rstr2any(rstr_hmac(k, d), e);
          };
          /**
           * Perform a simple self-test to see if the VM is working
           * @return {String} Hexadecimal hash sample
           * @public
           */
          this.vm_test = function() {
            return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';
          };
          /**
           * Enable/disable uppercase hexadecimal returned string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUpperCase = function(a) {
            if (typeof a === 'boolean') {
              hexcase = a;
            }
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {string} Pad
           * @return {Object} this
           * @public
           */
          this.setPad = function(a) {
            b64pad = a || b64pad;
            return this;
          };
          /**
           * Defines a base64 pad string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUTF8 = function(a) {
            if (typeof a === 'boolean') {
              utf8 = a;
            }
            return this;
          };

          // private methods

          /**
           * Calculate the SHA-512 of a raw string
           */

          function rstr(s, utf8) {
            s = (utf8) ? utf8Encode(s) : s;
            return binb2rstr(binb(rstr2binb(s), s.length * 8));
          }

          /**
           * Calculate the HMAC-sha256 of a key and some data (raw strings)
           */

          function rstr_hmac(key, data) {
            key = (utf8) ? utf8Encode(key) : key;
            data = (utf8) ? utf8Encode(data) : data;
            var hash, i = 0,
              bkey = rstr2binb(key),
              ipad = Array(16),
              opad = Array(16);

            if (bkey.length > 16) {
              bkey = binb(bkey, key.length * 8);
            }

            for (; i < 16; i += 1) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
            }

            hash = binb(ipad.concat(rstr2binb(data)), 512 + data.length * 8);
            return binb2rstr(binb(opad.concat(hash), 512 + 256));
          }

          /*
           * Main sha256 function, with its support functions
           */

          function sha256_S(X, n) {
            return (X >>> n) | (X << (32 - n));
          }

          function sha256_R(X, n) {
            return (X >>> n);
          }

          function sha256_Ch(x, y, z) {
            return ((x & y) ^ ((~x) & z));
          }

          function sha256_Maj(x, y, z) {
            return ((x & y) ^ (x & z) ^ (y & z));
          }

          function sha256_Sigma0256(x) {
            return (sha256_S(x, 2) ^ sha256_S(x, 13) ^ sha256_S(x, 22));
          }

          function sha256_Sigma1256(x) {
            return (sha256_S(x, 6) ^ sha256_S(x, 11) ^ sha256_S(x, 25));
          }

          function sha256_Gamma0256(x) {
            return (sha256_S(x, 7) ^ sha256_S(x, 18) ^ sha256_R(x, 3));
          }

          function sha256_Gamma1256(x) {
            return (sha256_S(x, 17) ^ sha256_S(x, 19) ^ sha256_R(x, 10));
          }

          sha256_K = [
            1116352408, 1899447441, -1245643825, -373957723, 961987163, 1508970993, -1841331548, -1424204075, -670586216, 310598401, 607225278, 1426881987,
            1925078388, -2132889090, -1680079193, -1046744716, -459576895, -272742522,
            264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, -1740746414, -1473132947, -1341970488, -1084653625, -958395405, -710438585,
            113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291,
            1695183700, 1986661051, -2117940946, -1838011259, -1564481375, -1474664885, -1035236496, -949202525, -778901479, -694614492, -200395387, 275423344,
            430227734, 506948616, 659060556, 883997877, 958139571, 1322822218,
            1537002063, 1747873779, 1955562222, 2024104815, -2067236844, -1933114872, -1866530822, -1538233109, -1090935817, -965641998
          ];

          function binb(m, l) {
            var HASH = [1779033703, -1150833019, 1013904242, -1521486534,
              1359893119, -1694144372, 528734635, 1541459225
            ];
            var W = new Array(64);
            var a, b, c, d, e, f, g, h;
            var i, j, T1, T2;

            /* append padding */
            m[l >> 5] |= 0x80 << (24 - l % 32);
            m[((l + 64 >> 9) << 4) + 15] = l;

            for (i = 0; i < m.length; i += 16) {
              a = HASH[0];
              b = HASH[1];
              c = HASH[2];
              d = HASH[3];
              e = HASH[4];
              f = HASH[5];
              g = HASH[6];
              h = HASH[7];

              for (j = 0; j < 64; j += 1) {
                if (j < 16) {
                  W[j] = m[j + i];
                } else {
                  W[j] = safe_add(safe_add(safe_add(sha256_Gamma1256(W[j - 2]), W[j - 7]),
                    sha256_Gamma0256(W[j - 15])), W[j - 16]);
                }

                T1 = safe_add(safe_add(safe_add(safe_add(h, sha256_Sigma1256(e)), sha256_Ch(e, f, g)),
                  sha256_K[j]), W[j]);
                T2 = safe_add(sha256_Sigma0256(a), sha256_Maj(a, b, c));
                h = g;
                g = f;
                f = e;
                e = safe_add(d, T1);
                d = c;
                c = b;
                b = a;
                a = safe_add(T1, T2);
              }

              HASH[0] = safe_add(a, HASH[0]);
              HASH[1] = safe_add(b, HASH[1]);
              HASH[2] = safe_add(c, HASH[2]);
              HASH[3] = safe_add(d, HASH[3]);
              HASH[4] = safe_add(e, HASH[4]);
              HASH[5] = safe_add(f, HASH[5]);
              HASH[6] = safe_add(g, HASH[6]);
              HASH[7] = safe_add(h, HASH[7]);
            }
            return HASH;
          }

        },

        /**
         * @class Hashes.SHA512
         * @param {config}
         *
         * A JavaScript implementation of the Secure Hash Algorithm, SHA-512, as defined in FIPS 180-2
         * Version 2.2 Copyright Anonymous Contributor, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         * See http://pajhome.org.uk/crypt/md5 for details.
         */
        SHA512: function(options) {
          /**
           * Private properties configuration variables. You may need to tweak these to be compatible with
           * the server-side, but the defaults work in most cases.
           * @see this.setUpperCase() method
           * @see this.setPad() method
           */
          var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false,
            /* hexadecimal output case format. false - lowercase; true - uppercase  */
            b64pad = (options && typeof options.pad === 'string') ? options.pad : '=',
            /* base-64 pad character. Default '=' for strict RFC compliance   */
            utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true,
            /* enable/disable utf8 encoding */
            sha512_k;

          /* privileged (public) methods */
          this.hex = function(s) {
            return rstr2hex(rstr(s));
          };
          this.b64 = function(s) {
            return rstr2b64(rstr(s), b64pad);
          };
          this.any = function(s, e) {
            return rstr2any(rstr(s), e);
          };
          this.raw = function(s) {
            return rstr(s);
          };
          this.hex_hmac = function(k, d) {
            return rstr2hex(rstr_hmac(k, d));
          };
          this.b64_hmac = function(k, d) {
            return rstr2b64(rstr_hmac(k, d), b64pad);
          };
          this.any_hmac = function(k, d, e) {
            return rstr2any(rstr_hmac(k, d), e);
          };
          /**
           * Perform a simple self-test to see if the VM is working
           * @return {String} Hexadecimal hash sample
           * @public
           */
          this.vm_test = function() {
            return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';
          };
          /**
           * @description Enable/disable uppercase hexadecimal returned string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUpperCase = function(a) {
            if (typeof a === 'boolean') {
              hexcase = a;
            }
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {string} Pad
           * @return {Object} this
           * @public
           */
          this.setPad = function(a) {
            b64pad = a || b64pad;
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUTF8 = function(a) {
            if (typeof a === 'boolean') {
              utf8 = a;
            }
            return this;
          };

          /* private methods */

          /**
           * Calculate the SHA-512 of a raw string
           */

          function rstr(s) {
            s = (utf8) ? utf8Encode(s) : s;
            return binb2rstr(binb(rstr2binb(s), s.length * 8));
          }
          /*
           * Calculate the HMAC-SHA-512 of a key and some data (raw strings)
           */

          function rstr_hmac(key, data) {
            key = (utf8) ? utf8Encode(key) : key;
            data = (utf8) ? utf8Encode(data) : data;

            var hash, i = 0,
              bkey = rstr2binb(key),
              ipad = Array(32),
              opad = Array(32);

            if (bkey.length > 32) {
              bkey = binb(bkey, key.length * 8);
            }

            for (; i < 32; i += 1) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
            }

            hash = binb(ipad.concat(rstr2binb(data)), 1024 + data.length * 8);
            return binb2rstr(binb(opad.concat(hash), 1024 + 512));
          }

          /**
           * Calculate the SHA-512 of an array of big-endian dwords, and a bit length
           */

          function binb(x, len) {
            var j, i, l,
              W = new Array(80),
              hash = new Array(16),
              //Initial hash values
              H = [
                new int64(0x6a09e667, -205731576),
                new int64(-1150833019, -2067093701),
                new int64(0x3c6ef372, -23791573),
                new int64(-1521486534, 0x5f1d36f1),
                new int64(0x510e527f, -1377402159),
                new int64(-1694144372, 0x2b3e6c1f),
                new int64(0x1f83d9ab, -79577749),
                new int64(0x5be0cd19, 0x137e2179)
              ],
              T1 = new int64(0, 0),
              T2 = new int64(0, 0),
              a = new int64(0, 0),
              b = new int64(0, 0),
              c = new int64(0, 0),
              d = new int64(0, 0),
              e = new int64(0, 0),
              f = new int64(0, 0),
              g = new int64(0, 0),
              h = new int64(0, 0),
              //Temporary variables not specified by the document
              s0 = new int64(0, 0),
              s1 = new int64(0, 0),
              Ch = new int64(0, 0),
              Maj = new int64(0, 0),
              r1 = new int64(0, 0),
              r2 = new int64(0, 0),
              r3 = new int64(0, 0);

            if (sha512_k === undefined) {
              //SHA512 constants
              sha512_k = [
                new int64(0x428a2f98, -685199838), new int64(0x71374491, 0x23ef65cd),
                new int64(-1245643825, -330482897), new int64(-373957723, -2121671748),
                new int64(0x3956c25b, -213338824), new int64(0x59f111f1, -1241133031),
                new int64(-1841331548, -1357295717), new int64(-1424204075, -630357736),
                new int64(-670586216, -1560083902), new int64(0x12835b01, 0x45706fbe),
                new int64(0x243185be, 0x4ee4b28c), new int64(0x550c7dc3, -704662302),
                new int64(0x72be5d74, -226784913), new int64(-2132889090, 0x3b1696b1),
                new int64(-1680079193, 0x25c71235), new int64(-1046744716, -815192428),
                new int64(-459576895, -1628353838), new int64(-272742522, 0x384f25e3),
                new int64(0xfc19dc6, -1953704523), new int64(0x240ca1cc, 0x77ac9c65),
                new int64(0x2de92c6f, 0x592b0275), new int64(0x4a7484aa, 0x6ea6e483),
                new int64(0x5cb0a9dc, -1119749164), new int64(0x76f988da, -2096016459),
                new int64(-1740746414, -295247957), new int64(-1473132947, 0x2db43210),
                new int64(-1341970488, -1728372417), new int64(-1084653625, -1091629340),
                new int64(-958395405, 0x3da88fc2), new int64(-710438585, -1828018395),
                new int64(0x6ca6351, -536640913), new int64(0x14292967, 0xa0e6e70),
                new int64(0x27b70a85, 0x46d22ffc), new int64(0x2e1b2138, 0x5c26c926),
                new int64(0x4d2c6dfc, 0x5ac42aed), new int64(0x53380d13, -1651133473),
                new int64(0x650a7354, -1951439906), new int64(0x766a0abb, 0x3c77b2a8),
                new int64(-2117940946, 0x47edaee6), new int64(-1838011259, 0x1482353b),
                new int64(-1564481375, 0x4cf10364), new int64(-1474664885, -1136513023),
                new int64(-1035236496, -789014639), new int64(-949202525, 0x654be30),
                new int64(-778901479, -688958952), new int64(-694614492, 0x5565a910),
                new int64(-200395387, 0x5771202a), new int64(0x106aa070, 0x32bbd1b8),
                new int64(0x19a4c116, -1194143544), new int64(0x1e376c08, 0x5141ab53),
                new int64(0x2748774c, -544281703), new int64(0x34b0bcb5, -509917016),
                new int64(0x391c0cb3, -976659869), new int64(0x4ed8aa4a, -482243893),
                new int64(0x5b9cca4f, 0x7763e373), new int64(0x682e6ff3, -692930397),
                new int64(0x748f82ee, 0x5defb2fc), new int64(0x78a5636f, 0x43172f60),
                new int64(-2067236844, -1578062990), new int64(-1933114872, 0x1a6439ec),
                new int64(-1866530822, 0x23631e28), new int64(-1538233109, -561857047),
                new int64(-1090935817, -1295615723), new int64(-965641998, -479046869),
                new int64(-903397682, -366583396), new int64(-779700025, 0x21c0c207),
                new int64(-354779690, -840897762), new int64(-176337025, -294727304),
                new int64(0x6f067aa, 0x72176fba), new int64(0xa637dc5, -1563912026),
                new int64(0x113f9804, -1090974290), new int64(0x1b710b35, 0x131c471b),
                new int64(0x28db77f5, 0x23047d84), new int64(0x32caab7b, 0x40c72493),
                new int64(0x3c9ebe0a, 0x15c9bebc), new int64(0x431d67c4, -1676669620),
                new int64(0x4cc5d4be, -885112138), new int64(0x597f299c, -60457430),
                new int64(0x5fcb6fab, 0x3ad6faec), new int64(0x6c44198c, 0x4a475817)
              ];
            }

            for (i = 0; i < 80; i += 1) {
              W[i] = new int64(0, 0);
            }

            // append padding to the source string. The format is described in the FIPS.
            x[len >> 5] |= 0x80 << (24 - (len & 0x1f));
            x[((len + 128 >> 10) << 5) + 31] = len;
            l = x.length;
            for (i = 0; i < l; i += 32) { //32 dwords is the block size
              int64copy(a, H[0]);
              int64copy(b, H[1]);
              int64copy(c, H[2]);
              int64copy(d, H[3]);
              int64copy(e, H[4]);
              int64copy(f, H[5]);
              int64copy(g, H[6]);
              int64copy(h, H[7]);

              for (j = 0; j < 16; j += 1) {
                W[j].h = x[i + 2 * j];
                W[j].l = x[i + 2 * j + 1];
              }

              for (j = 16; j < 80; j += 1) {
                //sigma1
                int64rrot(r1, W[j - 2], 19);
                int64revrrot(r2, W[j - 2], 29);
                int64shr(r3, W[j - 2], 6);
                s1.l = r1.l ^ r2.l ^ r3.l;
                s1.h = r1.h ^ r2.h ^ r3.h;
                //sigma0
                int64rrot(r1, W[j - 15], 1);
                int64rrot(r2, W[j - 15], 8);
                int64shr(r3, W[j - 15], 7);
                s0.l = r1.l ^ r2.l ^ r3.l;
                s0.h = r1.h ^ r2.h ^ r3.h;

                int64add4(W[j], s1, W[j - 7], s0, W[j - 16]);
              }

              for (j = 0; j < 80; j += 1) {
                //Ch
                Ch.l = (e.l & f.l) ^ (~e.l & g.l);
                Ch.h = (e.h & f.h) ^ (~e.h & g.h);

                //Sigma1
                int64rrot(r1, e, 14);
                int64rrot(r2, e, 18);
                int64revrrot(r3, e, 9);
                s1.l = r1.l ^ r2.l ^ r3.l;
                s1.h = r1.h ^ r2.h ^ r3.h;

                //Sigma0
                int64rrot(r1, a, 28);
                int64revrrot(r2, a, 2);
                int64revrrot(r3, a, 7);
                s0.l = r1.l ^ r2.l ^ r3.l;
                s0.h = r1.h ^ r2.h ^ r3.h;

                //Maj
                Maj.l = (a.l & b.l) ^ (a.l & c.l) ^ (b.l & c.l);
                Maj.h = (a.h & b.h) ^ (a.h & c.h) ^ (b.h & c.h);

                int64add5(T1, h, s1, Ch, sha512_k[j], W[j]);
                int64add(T2, s0, Maj);

                int64copy(h, g);
                int64copy(g, f);
                int64copy(f, e);
                int64add(e, d, T1);
                int64copy(d, c);
                int64copy(c, b);
                int64copy(b, a);
                int64add(a, T1, T2);
              }
              int64add(H[0], H[0], a);
              int64add(H[1], H[1], b);
              int64add(H[2], H[2], c);
              int64add(H[3], H[3], d);
              int64add(H[4], H[4], e);
              int64add(H[5], H[5], f);
              int64add(H[6], H[6], g);
              int64add(H[7], H[7], h);
            }

            //represent the hash as an array of 32-bit dwords
            for (i = 0; i < 8; i += 1) {
              hash[2 * i] = H[i].h;
              hash[2 * i + 1] = H[i].l;
            }
            return hash;
          }

          //A constructor for 64-bit numbers

          function int64(h, l) {
            this.h = h;
            this.l = l;
            //this.toString = int64toString;
          }

          //Copies src into dst, assuming both are 64-bit numbers

          function int64copy(dst, src) {
            dst.h = src.h;
            dst.l = src.l;
          }

          //Right-rotates a 64-bit number by shift
          //Won't handle cases of shift>=32
          //The function revrrot() is for that

          function int64rrot(dst, x, shift) {
            dst.l = (x.l >>> shift) | (x.h << (32 - shift));
            dst.h = (x.h >>> shift) | (x.l << (32 - shift));
          }

          //Reverses the dwords of the source and then rotates right by shift.
          //This is equivalent to rotation by 32+shift

          function int64revrrot(dst, x, shift) {
            dst.l = (x.h >>> shift) | (x.l << (32 - shift));
            dst.h = (x.l >>> shift) | (x.h << (32 - shift));
          }

          //Bitwise-shifts right a 64-bit number by shift
          //Won't handle shift>=32, but it's never needed in SHA512

          function int64shr(dst, x, shift) {
            dst.l = (x.l >>> shift) | (x.h << (32 - shift));
            dst.h = (x.h >>> shift);
          }

          //Adds two 64-bit numbers
          //Like the original implementation, does not rely on 32-bit operations

          function int64add(dst, x, y) {
            var w0 = (x.l & 0xffff) + (y.l & 0xffff);
            var w1 = (x.l >>> 16) + (y.l >>> 16) + (w0 >>> 16);
            var w2 = (x.h & 0xffff) + (y.h & 0xffff) + (w1 >>> 16);
            var w3 = (x.h >>> 16) + (y.h >>> 16) + (w2 >>> 16);
            dst.l = (w0 & 0xffff) | (w1 << 16);
            dst.h = (w2 & 0xffff) | (w3 << 16);
          }

          //Same, except with 4 addends. Works faster than adding them one by one.

          function int64add4(dst, a, b, c, d) {
            var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff);
            var w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (w0 >>> 16);
            var w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (w1 >>> 16);
            var w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (w2 >>> 16);
            dst.l = (w0 & 0xffff) | (w1 << 16);
            dst.h = (w2 & 0xffff) | (w3 << 16);
          }

          //Same, except with 5 addends

          function int64add5(dst, a, b, c, d, e) {
            var w0 = (a.l & 0xffff) + (b.l & 0xffff) + (c.l & 0xffff) + (d.l & 0xffff) + (e.l & 0xffff),
              w1 = (a.l >>> 16) + (b.l >>> 16) + (c.l >>> 16) + (d.l >>> 16) + (e.l >>> 16) + (w0 >>> 16),
              w2 = (a.h & 0xffff) + (b.h & 0xffff) + (c.h & 0xffff) + (d.h & 0xffff) + (e.h & 0xffff) + (w1 >>> 16),
              w3 = (a.h >>> 16) + (b.h >>> 16) + (c.h >>> 16) + (d.h >>> 16) + (e.h >>> 16) + (w2 >>> 16);
            dst.l = (w0 & 0xffff) | (w1 << 16);
            dst.h = (w2 & 0xffff) | (w3 << 16);
          }
        },
        /**
         * @class Hashes.RMD160
         * @constructor
         * @param {Object} [config]
         *
         * A JavaScript implementation of the RIPEMD-160 Algorithm
         * Version 2.2 Copyright Jeremy Lin, Paul Johnston 2000 - 2009.
         * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
         * See http://pajhome.org.uk/crypt/md5 for details.
         * Also http://www.ocf.berkeley.edu/~jjlin/jsotp/
         */
        RMD160: function(options) {
          /**
           * Private properties configuration variables. You may need to tweak these to be compatible with
           * the server-side, but the defaults work in most cases.
           * @see this.setUpperCase() method
           * @see this.setPad() method
           */
          var hexcase = (options && typeof options.uppercase === 'boolean') ? options.uppercase : false,
            /* hexadecimal output case format. false - lowercase; true - uppercase  */
            b64pad = (options && typeof options.pad === 'string') ? options.pa : '=',
            /* base-64 pad character. Default '=' for strict RFC compliance   */
            utf8 = (options && typeof options.utf8 === 'boolean') ? options.utf8 : true,
            /* enable/disable utf8 encoding */
            rmd160_r1 = [
              0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
              7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
              3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
              1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
              4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
            ],
            rmd160_r2 = [
              5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
              6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
              15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
              8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
              12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
            ],
            rmd160_s1 = [
              11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
              7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
              11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
              11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
              9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
            ],
            rmd160_s2 = [
              8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
              9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
              9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
              15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
              8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
            ];

          /* privileged (public) methods */
          this.hex = function(s) {
            return rstr2hex(rstr(s));
          };
          this.b64 = function(s) {
            return rstr2b64(rstr(s), b64pad);
          };
          this.any = function(s, e) {
            return rstr2any(rstr(s), e);
          };
          this.raw = function(s) {
            return rstr(s);
          };
          this.hex_hmac = function(k, d) {
            return rstr2hex(rstr_hmac(k, d));
          };
          this.b64_hmac = function(k, d) {
            return rstr2b64(rstr_hmac(k, d), b64pad);
          };
          this.any_hmac = function(k, d, e) {
            return rstr2any(rstr_hmac(k, d), e);
          };
          /**
           * Perform a simple self-test to see if the VM is working
           * @return {String} Hexadecimal hash sample
           * @public
           */
          this.vm_test = function() {
            return hex('abc').toLowerCase() === '900150983cd24fb0d6963f7d28e17f72';
          };
          /**
           * @description Enable/disable uppercase hexadecimal returned string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUpperCase = function(a) {
            if (typeof a === 'boolean') {
              hexcase = a;
            }
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {string} Pad
           * @return {Object} this
           * @public
           */
          this.setPad = function(a) {
            if (typeof a !== 'undefined') {
              b64pad = a;
            }
            return this;
          };
          /**
           * @description Defines a base64 pad string
           * @param {boolean}
           * @return {Object} this
           * @public
           */
          this.setUTF8 = function(a) {
            if (typeof a === 'boolean') {
              utf8 = a;
            }
            return this;
          };

          /* private methods */

          /**
           * Calculate the rmd160 of a raw string
           */

          function rstr(s) {
            s = (utf8) ? utf8Encode(s) : s;
            return binl2rstr(binl(rstr2binl(s), s.length * 8));
          }

          /**
           * Calculate the HMAC-rmd160 of a key and some data (raw strings)
           */

          function rstr_hmac(key, data) {
            key = (utf8) ? utf8Encode(key) : key;
            data = (utf8) ? utf8Encode(data) : data;
            var i, hash,
              bkey = rstr2binl(key),
              ipad = Array(16),
              opad = Array(16);

            if (bkey.length > 16) {
              bkey = binl(bkey, key.length * 8);
            }

            for (i = 0; i < 16; i += 1) {
              ipad[i] = bkey[i] ^ 0x36363636;
              opad[i] = bkey[i] ^ 0x5C5C5C5C;
            }
            hash = binl(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
            return binl2rstr(binl(opad.concat(hash), 512 + 160));
          }

          /**
           * Convert an array of little-endian words to a string
           */

          function binl2rstr(input) {
            var i, output = '',
              l = input.length * 32;
            for (i = 0; i < l; i += 8) {
              output += String.fromCharCode((input[i >> 5] >>> (i % 32)) & 0xFF);
            }
            return output;
          }

          /**
           * Calculate the RIPE-MD160 of an array of little-endian words, and a bit length.
           */

          function binl(x, len) {
            var T, j, i, l,
              h0 = 0x67452301,
              h1 = 0xefcdab89,
              h2 = 0x98badcfe,
              h3 = 0x10325476,
              h4 = 0xc3d2e1f0,
              A1, B1, C1, D1, E1,
              A2, B2, C2, D2, E2;

            /* append padding */
            x[len >> 5] |= 0x80 << (len % 32);
            x[(((len + 64) >>> 9) << 4) + 14] = len;
            l = x.length;

            for (i = 0; i < l; i += 16) {
              A1 = A2 = h0;
              B1 = B2 = h1;
              C1 = C2 = h2;
              D1 = D2 = h3;
              E1 = E2 = h4;
              for (j = 0; j <= 79; j += 1) {
                T = safe_add(A1, rmd160_f(j, B1, C1, D1));
                T = safe_add(T, x[i + rmd160_r1[j]]);
                T = safe_add(T, rmd160_K1(j));
                T = safe_add(bit_rol(T, rmd160_s1[j]), E1);
                A1 = E1;
                E1 = D1;
                D1 = bit_rol(C1, 10);
                C1 = B1;
                B1 = T;
                T = safe_add(A2, rmd160_f(79 - j, B2, C2, D2));
                T = safe_add(T, x[i + rmd160_r2[j]]);
                T = safe_add(T, rmd160_K2(j));
                T = safe_add(bit_rol(T, rmd160_s2[j]), E2);
                A2 = E2;
                E2 = D2;
                D2 = bit_rol(C2, 10);
                C2 = B2;
                B2 = T;
              }

              T = safe_add(h1, safe_add(C1, D2));
              h1 = safe_add(h2, safe_add(D1, E2));
              h2 = safe_add(h3, safe_add(E1, A2));
              h3 = safe_add(h4, safe_add(A1, B2));
              h4 = safe_add(h0, safe_add(B1, C2));
              h0 = T;
            }
            return [h0, h1, h2, h3, h4];
          }

          // specific algorithm methods

          function rmd160_f(j, x, y, z) {
            return (0 <= j && j <= 15) ? (x ^ y ^ z) :
              (16 <= j && j <= 31) ? (x & y) | (~x & z) :
              (32 <= j && j <= 47) ? (x | ~y) ^ z :
              (48 <= j && j <= 63) ? (x & z) | (y & ~z) :
              (64 <= j && j <= 79) ? x ^ (y | ~z) :
              'rmd160_f: j out of range';
          }

          function rmd160_K1(j) {
            return (0 <= j && j <= 15) ? 0x00000000 :
              (16 <= j && j <= 31) ? 0x5a827999 :
              (32 <= j && j <= 47) ? 0x6ed9eba1 :
              (48 <= j && j <= 63) ? 0x8f1bbcdc :
              (64 <= j && j <= 79) ? 0xa953fd4e :
              'rmd160_K1: j out of range';
          }

          function rmd160_K2(j) {
            return (0 <= j && j <= 15) ? 0x50a28be6 :
              (16 <= j && j <= 31) ? 0x5c4dd124 :
              (32 <= j && j <= 47) ? 0x6d703ef3 :
              (48 <= j && j <= 63) ? 0x7a6d76e9 :
              (64 <= j && j <= 79) ? 0x00000000 :
              'rmd160_K2: j out of range';
          }
        }
      };

      // exposes Hashes
      (function(window, undefined$1) {
        var freeExports = false;
        {
          freeExports = exports;
          if (exports && typeof commonjsGlobal === 'object' && commonjsGlobal && commonjsGlobal === commonjsGlobal.global) {
            window = commonjsGlobal;
          }
        }

        if (typeof undefined$1 === 'function' && typeof undefined$1.amd === 'object' && undefined$1.amd) {
          // define as an anonymous module, so, through path mapping, it can be aliased
          undefined$1(function() {
            return Hashes;
          });
        } else if (freeExports) {
          // in Node.js or RingoJS v0.8.0+
          if ( module && module.exports === freeExports) {
            module.exports = Hashes;
          }
          // in Narwhal or RingoJS v0.7.0-
          else {
            freeExports.Hashes = Hashes;
          }
        } else {
          // in a browser or Rhino
          window.Hashes = Hashes;
        }
      }(this));
    }()); // IIFE
    });

    var main$g = createCommonjsModule(function (module, exports) {
    (function() {

    const _cryptico = typeof commonjsRequire === 'undefined' ? window.cryptico : cryptico_1;
    const cryptico = _cryptico.default || _cryptico;
    const aesjs = typeof commonjsRequire === 'undefined' ? window.aesjs : aesJs;

    const kBitCount = 128;
    const kSHACount = 512;

    const mod = {

    	OLSKCryptoHMACSHA256Hash (param1, param2) {
    		if (typeof param1 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!param1.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return (new (hashes).SHA256).hex_hmac(param1, param2);
    	},

    	OLSKCryptoShortHash (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!inputData.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return mod.OLSKCryptoHMACSHA256Hash(inputData, inputData).slice(0, 32);
    	},

    	async OLSKCryptoEncryptSigned (param1, param2, param3) {
    		if (typeof param1 !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!param1.trim()) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof param2 !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!param2.trim()) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof param3 !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!param3.trim()) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		return cryptico.encrypt(param3, param1, (cryptico.RSAKey || RSAKey).parse(param2)).cipher;
    	},

    	async OLSKCryptoDecryptSigned (param1, param2, param3) {
    		if (typeof param1 !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!param1.trim()) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof param2 !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!param2.trim()) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof param3 !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!param3.trim()) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		const data = cryptico.decrypt(param3, (cryptico.RSAKey || RSAKey).parse(param1));

    		if (data.signature !== 'verified' || data.publicKeyString !== param2) {
    			return Promise.reject(new Error('OLSKErrorNotSigned'));
    		}

    		return data.plaintext;
    	},

    	async OLSKCryptoPBKDF2Key (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!inputData.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof window === 'undefined' || window.OLSKRequire) {
    			const _require = typeof window !== 'undefined' ? OLSKRequire : commonjsRequire;
    			return new Promise(function (res, rej) {
    				return _require('crypto').pbkdf2(inputData, inputData, 1, kBitCount / 8, 'sha' + kSHACount, function (err, result) {
    					return err ? rej(err) : res(result);
    				});
    			});
    		}

    		return window.crypto.subtle.importKey('raw', aesjs.utils.utf8.toBytes(inputData), 'PBKDF2', false, ['deriveBits','deriveKey']).then(function (keyMaterial) {
    			return window.crypto.subtle.deriveBits({
    				name: 'PBKDF2',
    				salt: aesjs.utils.utf8.toBytes(inputData),
    				iterations: 1,
    				hash: { name: 'SHA-' + kSHACount },
    			}, keyMaterial, kBitCount).then(function (result) {
    				return new Uint8Array(result);
    			});
    		});
    	},

    	OLSKCryptoPBKDF2Hash (inputData) {
    		return aesjs.utils.hex.fromBytes(inputData);
    	},

    	OLSKCryptoAESEncrypt (key, param2) {
    		if (typeof param2 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return aesjs.utils.hex.fromBytes((new aesjs.ModeOfOperation.ctr(key)).encrypt(aesjs.utils.utf8.toBytes(param2)));
    	},

    	OLSKCryptoAESDecrypt (key, param2) {
    		if (typeof param2 !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return aesjs.utils.utf8.fromBytes((new aesjs.ModeOfOperation.ctr(key)).decrypt(aesjs.utils.hex.toBytes(param2)));
    	},

    	OLSKCryptoAESFunctions (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!inputData.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const _OLSKCryptoAESFunctionsKey = aesjs.utils.hex.toBytes(inputData);

    		return {
    			_OLSKCryptoAESFunctionsKey,

    			OLSKCryptoAESFunctionsEncrypt: (function (inputData) {
    				if (typeof inputData !== 'string') {
    					throw new Error('OLSKErrorInputNotValid');
    				}

    				return mod.OLSKCryptoAESEncrypt(_OLSKCryptoAESFunctionsKey, inputData);
    			}).bind(null),

    			OLSKCryptoAESFunctionsDecrypt: (function (inputData) {
    				if (typeof inputData !== 'string') {
    					throw new Error('OLSKErrorInputNotValid');
    				}

    				return mod.OLSKCryptoAESDecrypt(_OLSKCryptoAESFunctionsKey, inputData);
    			}).bind(null),
    		};
    	},	

    };

    {
    	Object.assign(exports, mod);
    }

    if (typeof window === 'object') {
    	window.OLSKCrypto = mod;
    }
    	
    })();
    });

    var main$h = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLKSLocalStorageSet (param1, param2, param3) {
    		if (typeof param1 !== 'object' || param1 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param1.setItem !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'string' || !param2.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param3 === 'undefined') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		param3 ? param1.setItem(param2, JSON.stringify(param3)) : param1.removeItem(param2);

    		return param3;
    	},

    	OLKSLocalStorageGet (param1, param2) {
    		if (typeof param1 !== 'object' || param1 === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param1.setItem !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'string' || !param2.trim()) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return JSON.parse(param1.getItem(param2));
    	},

    };

    Object.assign(exports, mod);
    });

    var main$i = createCommonjsModule(function (module, exports) {
    const OLSKObject = main$a.default || main$a;

    const uIsFilled = function (inputData) {
    	return typeof inputData === 'string' && inputData.trim() !== '';
    };

    const mod = {

    	OLSKFundSetup (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod !== 'object' || params.ParamMod === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod.OLSKFundSetupDispatchClue !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod._OLSKFundSetupDispatchUpdate !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamFormURL !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamProject !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamSpecUI !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamDocumentLimit !== 'undefined') {
    			if (typeof params.ParamDocumentLimit !== 'number') {
    				throw new Error('OLSKErrorInputNotValid');
    			}
    		}

    		const _this = this;

    		if (params.ParamSpecUI && window.location.search.match('FakeOLSKFundResponseIsPresent=true')) {
    			OLSKFund._OLSKFundFakeGrantResponseRandom();
    		}

    		const setHotfix = function (key, value) {
    			params.ParamMod[key] = value;

    			params.ParamMod._OLSKFundSetupDispatchUpdate(key);
    		};

    		if (params.ParamDocumentLimit) {
    			Object.assign(params.ParamMod, {

    				OLSKFundDocumentRemainder (inputData) {
    					setHotfix('_ValueDocumentRemainder', mod.OLSKFundRemainder(inputData, params.ParamDocumentLimit));
    				},

    			})._ValueDocumentRemainder = '';
    		}

    		setHotfix('_ValueFundClue', params.ParamMod.OLSKFundSetupDispatchClue());

    		return Object.assign(params.ParamMod, {

    			_OLSKAppToolbarDispatchFundNotConnected () {
    				if (!(debug.DebugWindow || window).confirm(params.OLSKLocalized('OLSKRemoteStorageConnectConfirmText'))) {
    					return;
    				}

    				setHotfix('_ValueCloudToolbarHidden', false);
    			},

    			_OLSKAppToolbarDispatchFundConnected () {
    				setHotfix('_ValueFundURL', mod.OLSKFundURL(Object.assign(Object.assign({}, params), {
    					ParamIdentity: params.ParamMod._ValueCloudIdentity,
    					ParamHomeURL: (debug.DebugWindow || window).location.origin + (debug.DebugWindow || window).location.pathname,
    				})));

    				params.ParamMod._OLSKWebView.modPublic.OLSKModalViewShow();

    				return _this.OLSKFundListen(params.ParamMod, debug);
    			},

    			OLSKFundDocumentGate () {
    				if (!(debug.DebugWindow || window).confirm(params.OLSKLocalized('OLSKFundGateText'))) {
    					return;
    				}

    				return params.ParamMod.OLSKAppToolbarDispatchFund();
    			},

    			OLSKAppToolbarDispatchFund () {
    				return params.ParamMod[params.ParamMod._ValueCloudIdentity ? '_OLSKAppToolbarDispatchFundConnected' : '_OLSKAppToolbarDispatchFundNotConnected']();
    			},

    			OLSKFundDispatchReceive (inputData) {
    				params.ParamMod._OLSKWebView.modPublic.OLSKModalViewClose();

    				params.ParamMod._ValueFundClue = inputData;

    				return params.ParamMod.OLSKFundDispatchPersist(inputData);
    			},

    			OLSKFundDispatchProgress (inputData) {
    				setHotfix('_ValueOLSKFundProgress', inputData);
    			},

    			OLSKFundDispatchFail () {
    				return params.ParamMod.OLSKFundDispatchPersist(null);
    			},

    			OLSKFundDispatchGrant (inputData) {
    				params.ParamMod._ValueOLSKFundGrant = OLSKObject.OLSKObjectPostJSONParse(inputData);
    			},

    		});
    	},

    	OLSKFundResponseIsPresent () {
    		return !!this._DataFoilOLSKLocalStorage.OLKSLocalStorageGet(typeof window === 'undefined' ? null : window.localStorage, mod._OLSKFundGrantData())
    	},

    	OLSKFundSetupPostPay (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params._ValueFundClue === 'undefined') {
    			throw new Error('OLSKErrorInputNotValid');
    		}
    		
    		if (typeof params.OLSKFundDispatchPersist !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const clue = Object.fromEntries((new URLSearchParams((debug.DebugWindow || window).location.hash.replace(/^#+/, ''))).entries()).clue;

    		if (!clue) {
    			return
    		}

    		(debug.DebugWindow || window).location.hash = '';

    		if (params._ValueFundClue) {
    			return;
    		}

    		return params.OLSKFundDispatchPersist(clue);
    	},

    	_OLSKFundGrantData () {
    		return 'OLSK_FUND_GRANT_DATA';
    	},

    	async _OLSKFundSetupGrantDispatchPayload (params, payload, debug = {}) {
    		try {
    			return params.OLSKFundDispatchGrant(JSON.parse(await main$g.OLSKCryptoDecryptSigned(params.OLSK_CRYPTO_PAIR_RECEIVER_PRIVATE, params.OLSK_CRYPTO_PAIR_SENDER_PUBLIC, payload.OLSK_FUND_GRANT_V1)));
    		} catch (e) {
    			if (e.message.match('Invalid RSA private key')) {
    				return (debug.DebugWindow || window).alert(params.OLSKLocalized('OLSKFundGrantErrorDecryptionText'));
    			}

    			if (e.message.match('OLSKErrorNotSigned')) {
    				return (debug.DebugWindow || window).alert(params.OLSKLocalized('OLSKFundGrantErrorSigningText'));
    			}
    			
    			throw e;
    		}
    	},

    	async OLSKFundSetupGrant (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!uIsFilled(params.OLSK_CRYPTO_PAIR_RECEIVER_PRIVATE)) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (!uIsFilled(params.OLSK_CRYPTO_PAIR_SENDER_PUBLIC)) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof params.OLSK_FUND_API_URL !== 'string') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (main$f.OLSKPactAuthModelErrors(params.ParamBody)) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (main$f.OLSKPactPayModelErrors(params.ParamBody)) {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof params.OLSKFundDispatchProgress !== 'function') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof params.OLSKFundDispatchFail !== 'function') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		if (typeof params.OLSKFundDispatchGrant !== 'function') {
    			return Promise.reject(new Error('OLSKErrorInputNotValid'));
    		}

    		const payload = params.ParamSpecUI ? null : await this._DataFoilOLSKLocalStorage.OLKSLocalStorageGet((debug.DebugWindow || window).localStorage, mod._OLSKFundGrantData());
    		if (payload) {
    			return mod._OLSKFundSetupGrantDispatchPayload(params, payload, debug);
    		}

    		let response;

    		try {
    			params.OLSKFundDispatchProgress(true);
    			
    			response = await (debug.DebugWindow || window).fetch(params.OLSK_FUND_API_URL, {
    				method: 'POST',
    				headers: {
    					'Content-Type': 'application/json',
    				},
    				body: JSON.stringify(params.ParamBody),
    			});
    		} catch (error) {
    			return (debug.DebugWindow || window).alert(params.OLSKLocalized('OLSKFundGrantErrorConnectionText'));
    		}

    		const json = await response.json();

    		params.OLSKFundDispatchProgress(false);

    		if (response.status !== 200) {
    			return params.OLSKFundDispatchFail((debug.DebugWindow || window).alert(json.RCSAPIError));
    		}

    		return mod._OLSKFundSetupGrantDispatchPayload(params, await this._DataFoilOLSKLocalStorage.OLKSLocalStorageSet((debug.DebugWindow || window).localStorage, mod._OLSKFundGrantData(), json), debug);
    	},

    	OLSKFundGate (param1, OLSKLocalized) {
    		if (!param1.location) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return param1.confirm(OLSKLocalized('OLSKFundGateText'));
    	},

    	OLSKFundURL (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamFormURL !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamProject !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamIdentity !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamHomeURL !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Object.assign(new URL(params.ParamFormURL), {
    			hash: (new URLSearchParams({
    				seed: JSON.stringify({
    					project: params.ParamProject,
    					identity: params.ParamIdentity,
    					home: params.ParamHomeURL,
    				}),
    			})).toString(),
    		}).href;
    	},

    	OLSKFundListen (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKFundDispatchReceive !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return (debug.DebugWindow || window).addEventListener('message', function (event) {
    			if (typeof event.data !== 'object' || event.data === null) {
    				return;
    			}

    			if (!event.data.OLSK_FUND_CLUE) {
    				return;
    			}

    			return params.OLSKFundDispatchReceive(event.data.OLSK_FUND_CLUE);
    		}, false);
    	},

    	_OLSKFundPricingDate (inputData) {
    		const string = inputData.split(':').slice(0, -1).join(':');

    		const outputData = new Date(string);
    		return Number.isNaN(outputData.getTime()) ? new Date(parseInt(string)) : outputData;
    	},

    	_OLSKFundPricingStringRowErrors (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (inputData.slice(-1) === ';') {
    			return true;
    		}

    		if (inputData.split(':').length < 2) {
    			return true;
    		}

    		if (Number.isNaN(mod._OLSKFundPricingDate(inputData).getTime())) {
    			return true;
    		}

    		if (inputData.split(':').pop().split(' ').length !== 4) {
    			return true;
    		}

    		return false;
    	},

    	OLSKFundPricingStringIsValid (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const rows = inputData.split(';');

    		if (!rows.length) {
    			return false;
    		}

    		if (rows.filter(mod._OLSKFundPricingStringRowErrors).length) {
    			return false;
    		}

    		return true;
    	},

    	OLSKFundTier (param1, param2) {
    		if (!mod.OLSKFundPricingStringIsValid(param1)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (param2 && main$f.OLSKPactGrantModelErrors(param2)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!param2) {
    			return 0;
    		}

    		const pricing = param1.split(';').filter(function (e) {
    			return e;
    		}).map(function (e) {
    			return {
    				OLKSFundPricingDate: mod._OLSKFundPricingDate(e),
    				OLKSFundPricingYearlySums: e.split(':').pop().split(' ').map(function (e, i) {
    					return e.split(',').map(function (e, index, original) {
    						return parseInt(e) * 100 * (i && original.length == 1 ? 12 : 1);
    					}).pop();
    				}),
    			};
    		});

    		return pricing.filter(function (e) {
    			return param2.OLSKPactGrantStartDate <= e.OLKSFundPricingDate;
    		}).concat(pricing.slice(-1)).shift().OLKSFundPricingYearlySums.filter(function (e) {
    			return (param2.OLSKPactGrantContribution * (param2.OLSKPactGrantFrequencyOption === main$f.OLSKPactGrantFrequencyOptionMonthly() ? 12 : 1)) >= e;
    		}).length + 1;
    	},

    	OLSKFundIsEligible (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMinimumTier !== 'number') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamCurrentProject !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (!Array.isArray(params.ParamBundleProjects)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamGrantTier !== 'number') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamGrantProject !== 'string') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (params.ParamGrantTier < params.ParamMinimumTier) {
    			return false;
    		}

    		if (params.ParamGrantTier > params.ParamMinimumTier) {
    			return true;
    		}

    		if (params.ParamGrantProject === params.ParamCurrentProject) {
    			return params.ParamGrantTier === params.ParamMinimumTier;
    		}

    		if (params.ParamGrantTier === 2) {
    			return params.ParamBundleProjects.includes(params.ParamGrantProject);
    		}

    		if (params.ParamGrantTier > 2) {
    			return true;
    		}

    		return false;
    	},

    	OLSKFundRemainder (param1, param2) {
    		if (typeof param1 !== 'number') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'number') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (param2 < 1) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return Math.max(0, param2 - param1);
    	},

    	async _OLSKFundFakeGrantResponseEncrypted (param1, param2, param3) {
    		return mod._DataFoilOLSKLocalStorage.OLKSLocalStorageSet(window.localStorage, mod._OLSKFundGrantData(), await main$g.OLSKCryptoEncryptSigned(param1, param2, JSON.stringify(param3)));
    	},

    	_OLSKFundFakeGrantResponseRandom () {
    		return mod._DataFoilOLSKLocalStorage.OLKSLocalStorageSet(localStorage, mod._OLSKFundGrantData(), Math.random().toString());
    	},

    	OLSKFundLauncherFakeItemProxy () {
    		return {
    			LCHRecipeName: 'OLSKFundLauncherFakeItemProxy',
    			LCHRecipeCallback () {},
    		};
    	},

    	OLSKFundLauncherItemFakeFlipProgress (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'OLSKFundLauncherItemFakeFlipProgress',
    			LCHRecipeCallback () {
    				return inputData.OLSKFundDispatchProgress(!inputData._ValueOLSKFundProgress);
    			},
    		};
    	},

    	OLSKFundLauncherItemFakeTier2WithNoBundle (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'OLSKFundLauncherItemFakeTier2WithNoBundle',
    			LCHRecipeCallback () {
    				inputData._ValueOLSKFundGrant = main$f.OLSKPactDataGrantObjectValid({
    					OLSKPactGrantContribution: 1000,
    					OLSKPactGrantFrequencyOption: main$f.OLSKPactGrantFrequencyOptionYearly(),
    				});
    			},
    		};
    	},

    	OLSKFundLauncherItemFakeTier2WithBundle (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'OLSKFundLauncherItemFakeTier2WithBundle',
    			LCHRecipeCallback () {
    				inputData._ValueOLSKFundGrant = main$f.OLSKPactDataGrantObjectValid({
    					OLSKPactGrantContribution: 1000,
    					OLSKPactGrantFrequencyOption: main$f.OLSKPactGrantFrequencyOptionYearly(),
    					OLSKPactGrantProject: 'FakeBundleProject',
    				});
    			},
    		};
    	},

    	OLSKFundLauncherItemFakeTier2Proxy (inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'OLSKFundLauncherItemFakeTier2Proxy',
    			LCHRecipeCallback () {},
    			LCHRecipeIsExcluded () {
    				return !inputData.DataIsEligible({
    					ParamMinimumTier: 2,
    				});
    			}
    		};
    	},

    	OLSKFundLauncherItemEnterClue (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamConnected !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamAuthorized !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKFundDispatchPersist !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const _this = this;

    		return {
    			LCHRecipeSignature: 'OLSKFundLauncherItemEnterClue',
    			LCHRecipeName: params.OLSKLocalized('OLSKFundLauncherItemEnterClueText'),
    			LCHRecipeCallback () {
    				const item = ((debug.DebugWindow || window).prompt(params.OLSKLocalized('OLSKFundLauncherItemEnterCluePromptText')) || '').trim();

    				if (!item) {
    					return;
    				}

    				_this._DataFoilOLSKLocalStorage.OLKSLocalStorageSet((debug.DebugWindow || window).localStorage, mod._OLSKFundGrantData(), null);

    				return params.OLSKFundDispatchPersist(item);
    			},
    			LCHRecipeIsExcluded () {
    				return !params.ParamConnected || params.ParamAuthorized;
    			},
    		};
    	},

    	OLSKFundLauncherItemClearClue (params, debug = {}) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKLocalized !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamConnected !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamAuthorized !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKFundDispatchGrant !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKFundDispatchPersist !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		const _this = this;

    		return {
    			LCHRecipeSignature: 'OLSKFundLauncherItemClearClue',
    			LCHRecipeName: params.OLSKLocalized('OLSKFundLauncherItemClearClueText'),
    			LCHRecipeCallback () {
    				if (!(debug.DebugWindow || window).confirm(params.OLSKLocalized('OLSKFundLauncherItemClearClueConfirmText'))) {
    					return;
    				}

    				return params.OLSKFundDispatchPersist(params.OLSKFundDispatchGrant(_this._DataFoilOLSKLocalStorage.OLKSLocalStorageSet((debug.DebugWindow || window).localStorage, mod._OLSKFundGrantData(), null)));
    			},
    			LCHRecipeIsExcluded () {
    				return !params.ParamConnected || !params.ParamAuthorized;
    			},
    		};
    	},

    	OLSKFundRecipes (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod !== 'object' || params.ParamMod === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamSpecUI !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			mod.OLSKFundLauncherFakeItemProxy(),
    			mod.OLSKFundLauncherItemFakeFlipProgress(params.ParamMod),
    			mod.OLSKFundLauncherItemFakeTier2WithNoBundle(params.ParamMod),
    			mod.OLSKFundLauncherItemFakeTier2WithBundle(params.ParamMod),
    			mod.OLSKFundLauncherItemFakeTier2Proxy(params.ParamMod),
    			mod.OLSKFundLauncherItemEnterClue(params),
    			mod.OLSKFundLauncherItemClearClue(params),
    		].filter(function (e) {
    			if (params.ParamSpecUI) {
    				return true;
    			}

    			return !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);
    		});
    	},

    	// DATA

    	_DataFoilOLSKLocalStorage: main$h,

    };

    Object.assign(exports, mod);
    });

    var main$j = createCommonjsModule(function (module, exports) {
    const uFlatten = function (inputData) {
    	return [].concat.apply([], inputData);
    };

    const mod = {

    	_ZDRSchemaObjectValidate(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (typeof inputData.ZDRSchemaKey !== 'string') {
    			throw new Error('ZDRErrorInputNotString');
    		}

    		if (!inputData.ZDRSchemaKey.trim()) {
    			throw new Error('ZDRErrorInputNotFilled');
    		}

    		if (inputData.ZDRSchemaKey.trim() !== inputData.ZDRSchemaKey) {
    			throw new Error('ZDRErrorInputNotTrimmed');
    		}

    		if (typeof inputData.ZDRSchemaStub !== 'function') {
    			throw new Error('ZDRErrorInputNotFunction');
    		}

    		if (typeof inputData.ZDRSchemaPath !== 'function') {
    			throw new Error('ZDRErrorInputNotFunction');
    		}

    		if (inputData.ZDRSchemaMethods !== undefined) {
    			if (typeof inputData.ZDRSchemaMethods !== 'object' || inputData.ZDRSchemaMethods === null) {
    				throw new Error('ZDRErrorInputNotObject');
    			}
    		}

    		if (inputData.ZDRSchemaDispatchValidate !== undefined) {
    			if (typeof inputData.ZDRSchemaDispatchValidate !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRSchemaDispatchSyncCreate !== undefined) {
    			if (typeof inputData.ZDRSchemaDispatchSyncCreate !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRSchemaDispatchSyncUpdate !== undefined) {
    			if (typeof inputData.ZDRSchemaDispatchSyncUpdate !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRSchemaDispatchSyncDelete !== undefined) {
    			if (typeof inputData.ZDRSchemaDispatchSyncDelete !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRSchemaDispatchSyncConflict !== undefined) {
    			if (typeof inputData.ZDRSchemaDispatchSyncConflict !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		return true;
    	},

    	_ZDRScopeObjectValidate(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (typeof inputData.ZDRScopeKey !== 'string') {
    			throw new Error('ZDRErrorInputNotString');
    		}

    		if (!inputData.ZDRScopeKey.trim()) {
    			throw new Error('ZDRErrorInputNotFilled');
    		}

    		if (inputData.ZDRScopeKey.trim() !== inputData.ZDRScopeKey) {
    			throw new Error('ZDRErrorInputNotTrimmed');
    		}

    		if (typeof inputData.ZDRScopeDirectory !== 'string') {
    			throw new Error('ZDRErrorInputNotString');
    		}

    		if (!inputData.ZDRScopeDirectory.trim()) {
    			throw new Error('ZDRErrorInputNotFilled');
    		}

    		if (inputData.ZDRScopeDirectory.trim() !== inputData.ZDRScopeDirectory) {
    			throw new Error('ZDRErrorInputNotTrimmed');
    		}

    		if (inputData.ZDRScopeDirectory.match('/')) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (inputData.ZDRScopeSchemas !== undefined) {
    			if (!Array.isArray(inputData.ZDRScopeSchemas)) {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (inputData.ZDRScopeCreatorDirectory !== undefined) {
    			if (typeof inputData.ZDRScopeCreatorDirectory !== 'string') {
    				throw new Error('ZDRErrorInputNotString');
    			}

    			if (!inputData.ZDRScopeCreatorDirectory.trim()) {
    				throw new Error('ZDRErrorInputNotFilled');
    			}

    			if (inputData.ZDRScopeCreatorDirectory.trim() !== inputData.ZDRScopeCreatorDirectory) {
    				throw new Error('ZDRErrorInputNotTrimmed');
    			}
    		}

    		if (inputData.ZDRScopeIsPublic !== undefined) {
    			if (typeof inputData.ZDRScopeIsPublic !== 'boolean') {
    				throw new Error('ZDRErrorInputNotBoolean');
    			}
    		}

    		return true;
    	},

    	_ZDRClientObjectValidate(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (typeof inputData.ZDRClientWriteFile !== 'function') {
    			throw new Error('ZDRErrorInputNotFunction');
    		}

    		if (typeof inputData.ZDRClientReadFile !== 'function') {
    			throw new Error('ZDRErrorInputNotFunction');
    		}

    		if (typeof inputData.ZDRClientListObjects !== 'function') {
    			throw new Error('ZDRErrorInputNotFunction');
    		}

    		if (typeof inputData.ZDRClientDelete !== 'function') {
    			throw new Error('ZDRErrorInputNotFunction');
    		}

    		if (inputData.ZDRClientPrepare !== undefined) {
    			if (typeof inputData.ZDRClientPrepare !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRClientConnect !== undefined) {
    			if (typeof inputData.ZDRClientConnect !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRClientReconnect !== undefined) {
    			if (typeof inputData.ZDRClientReconnect !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		if (inputData.ZDRClientDisconnect !== undefined) {
    			if (typeof inputData.ZDRClientDisconnect !== 'function') {
    				throw new Error('ZDRErrorInputNotFunction');
    			}
    		}

    		return true;
    	},

    	_ZDRPathIsDirectory(inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		return inputData.slice(-1) === '/';
    	},

    	_ZDRPathFormatDirectory(inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		return mod._ZDRPathIsDirectory(inputData) ? inputData : inputData.concat('/')
    	},

    	_ZDRPathFormatPath(inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		return inputData[0] === '/' ? inputData : '/'.concat(inputData);
    	},

    	__ZDRFissionPathElements(inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		return inputData.split('/').filter(function (e) {
    			return e;
    		});
    	},

    	__ZDRFissionPathFile(inputData) {
    		return typeof webnative === 'undefined' ? inputData : webnative.path.file(...mod.__ZDRFissionPathElements(inputData));
    	},

    	__ZDRFissionPathDirectory(inputData) {
    		return typeof webnative === 'undefined' ? inputData : webnative.path.directory(...mod.__ZDRFissionPathElements(inputData));
    	},

    	_ZDRModelSyncCallbackSignatures() {
    		return [
    			'ZDRSchemaDispatchSyncCreate',
    			'ZDRSchemaDispatchSyncUpdate',
    			'ZDRSchemaDispatchSyncDelete',
    			'ZDRSchemaDispatchSyncConflict',
    		];
    	},

    	_ZDRModelSyncCallbackInput(param1, param2) {
    		if (!mod._ZDRModelSyncCallbackSignatures().includes(param1)) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (!param2.origin) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (param1 === 'ZDRSchemaDispatchSyncConflict') {
    			return param2;
    		}

    		return param2[param1 === 'ZDRSchemaDispatchSyncDelete' ? 'oldValue' : 'newValue'];
    	},

    	_ZDRModelSyncCallbackSignature(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			return;
    		}

    		if (inputData.origin === 'remote' && typeof inputData.oldValue === 'undefined' && typeof inputData.newValue !== 'undefined') {
    			return 'ZDRSchemaDispatchSyncCreate';
    		}

    		if (inputData.origin === 'remote' && typeof inputData.oldValue !== 'undefined' && typeof inputData.newValue !== 'undefined') {
    			return 'ZDRSchemaDispatchSyncUpdate';
    		}

    		if (inputData.origin === 'remote' && typeof inputData.oldValue !== 'undefined' && typeof inputData.newValue === 'undefined') {
    			return 'ZDRSchemaDispatchSyncDelete';
    		}

    		if (inputData.origin === 'conflict') {
    			return 'ZDRSchemaDispatchSyncConflict';
    		}

    		return;
    	},

    	_ZDRFissionObjectFilter(inputData) {
    		if (typeof inputData !== 'string') {
    			return false;
    		}

    		return ['{}', '[]'].includes(inputData[0] + inputData.slice(-1));
    	},

    	ZDRProtocolRemoteStorage() {
    		return 'ZDR_PROTOCOL_REMOTE_STORAGE';
    	},

    	ZDRProtocolFission() {
    		return 'ZDR_PROTOCOL_FISSION';
    	},

    	ZDRProtocolCustom() {
    		return 'ZDR_PROTOCOL_CUSTOM';
    	},

    	_ZDRProtocols() {
    		return [
    			mod.ZDRProtocolRemoteStorage(),
    			mod.ZDRProtocolFission(),
    			mod.ZDRProtocolCustom(),
    		];
    	},

    	ZDRProtocolForIdentity(inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		return inputData.match(/fission\.(codes|name)/) ? mod.ZDRProtocolFission() : mod.ZDRProtocolRemoteStorage();
    	},

    	_ZDRProtocol(inputData) {
    		if (typeof inputData === 'function' && Object.keys(inputData).includes('Authorize')) {
    			return mod.ZDRProtocolRemoteStorage();
    		}

    		if (!!inputData && typeof inputData === 'object' && Object.keys(inputData).includes('Scenario')) {
    			return mod.ZDRProtocolFission();
    		}

    		if (!!inputData && typeof inputData === 'object' && inputData.ZDRClientWriteFile && mod._ZDRClientObjectValidate(inputData)) {
    			return mod.ZDRProtocolCustom();
    		}

    		throw new Error('ZDRErrorInputNotValid');
    	},

    	_ZDRClientInterface(_client, protocol, options) {
    		return {

    			async ClientWriteFile(param1, param2, param3) {
    				await ({
    					[mod.ZDRProtocolRemoteStorage()]: (async function () {
    						return _client.storeFile(param3, param1, typeof Blob !== 'undefined' && param2.constructor === Blob ? await new Promise(function (res, rej) {
    							const reader = new FileReader();

    							reader.onload = function () {
    								res(reader.result);
    							};

    							reader.readAsArrayBuffer(param2);
    						}) : param2);
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return _client().write(mod.__ZDRFissionPathFile(param1), param2).then(function () {
    							return _client().publish();
    						});
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return _client.ZDRClientWriteFile(param1, param2, param3);
    					}),
    				})[protocol]();

    				return param2;
    			},

    			async ClientWriteObject(param1, param2) {
    				const _this = this;
    				const writeData = JSON.stringify(options._ZDRParamDispatchJSONPreStringify ? options._ZDRParamDispatchJSONPreStringify(param2) : param2);

    				await _this.ClientWriteFile(param1, writeData, 'application/json');

    				return param2;
    			},

    			ClientReadFile(inputData) {
    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (async function () {
    						return ((await _client.getFile(inputData, false)) || {}).data;
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return _client().cat(mod.__ZDRFissionPathFile(inputData));
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return _client.ZDRClientReadFile(inputData);
    					}),
    				})[protocol]();
    			},

    			async ClientReadObject(inputData) {
    				const result = await this.ClientReadFile(inputData);

    				if (!result) {
    					return null;
    				}

    				const parsed = JSON.parse(result);
    				return options._ZDRParamDispatchJSONPostParse ? options._ZDRParamDispatchJSONPostParse(parsed) : parsed;
    			},

    			async ClientListObjects(inputData) {
    				return Object.fromEntries((await ({
    					[mod.ZDRProtocolRemoteStorage()]: (async function () {
    						return Object.entries(await _client.getAll(inputData === '/' ? '' : inputData, false)).filter(function ([key, value]) {
    							if (mod._ZDRPathIsDirectory(key)) {
    								return false;
    							}

    							return value !== true;
    						});
    					}),
    					[mod.ZDRProtocolFission()]: (async function () {
    						return (await Promise.all(Object.entries(await _client().ls(mod.__ZDRFissionPathDirectory(inputData))).filter(function ([key, value]) {
    							return value.isFile;
    						}).map(async function ([key, value]) {
    							return [key, await _client().cat(mod.__ZDRFissionPathFile(inputData + key))];
    						}))).reduce(function (coll, [key, value]) {
    							if (!mod._ZDRFissionObjectFilter(value)) {
    								return coll;
    							}

    							try {
    								return coll.concat([
    									[key, JSON.parse(value)],
    								]);
    							} catch (error) {
    								return coll;
    							}
    						}, []);
    					}),
    					[mod.ZDRProtocolCustom()]: (async function () {
    						return Object.entries(await _client.ZDRClientListObjects(inputData));
    					}),
    				})[protocol]()).map(function ([key, value]) {
    					return [key, options._ZDRParamDispatchJSONPostParse ? options._ZDRParamDispatchJSONPostParse(value) : value];
    				}));
    			},

    			async ClientPaths(inputData) {
    				return await ({
    					[mod.ZDRProtocolRemoteStorage()]: (async function () {
    						return Object.keys(await _client.getListing(inputData, false));
    					}),
    					[mod.ZDRProtocolFission()]: (async function () {
    						if (!(await _client().exists(mod.__ZDRFissionPathDirectory(inputData)))) {
    							return [];
    						}

    						return Object.entries(await _client().ls(mod.__ZDRFissionPathDirectory(inputData))).map(function ([key, value]) {
    							return key + (!value.isFile ? '/' : '');
    						});
    					}),
    					[mod.ZDRProtocolCustom()]: (async function () {
    						return Object.keys(await _client.ZDRClientListObjects(inputData));
    					}),
    				})[protocol]();
    			},

    			ClientPermalink(inputData) {
    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (function () {
    						return _client.getItemURL(inputData);
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return _client().permalinkBase + inputData;
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						throw new Error('ZDRErrorMethodNotDefined');
    					}),
    				})[protocol]();
    			},

    			ClientDelete(inputData) {
    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (function () {
    						if (mod._ZDRPathIsDirectory(inputData)) {
    							return null;
    						}
    						
    						return _client.remove(inputData.replace(/^\/+/, ''));
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return _client().rm(mod.__ZDRFissionPathFile(inputData)).then(function () {
    							return _client().publish();
    						});
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return _client.ZDRClientDelete(inputData);
    					}),
    				})[protocol]();
    			},

    		};
    	},

    	_ZDRWrap(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		const ZDRStorageProtocol = mod._ZDRProtocol(inputData.ZDRParamLibrary);

    		if (!Array.isArray(inputData.ZDRParamScopes) || !inputData.ZDRParamScopes.length) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		const scopes = inputData.ZDRParamScopes.filter(mod._ZDRScopeObjectValidate);

    		if (!scopes.length) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (typeof inputData.ZDRParamDispatchReady !== 'function') {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		if (typeof inputData.ZDRParamDispatchError !== 'undefined') {
    			if (typeof inputData.ZDRParamDispatchError !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData.ZDRParamDispatchConnected !== 'undefined') {
    			if (typeof inputData.ZDRParamDispatchConnected !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData.ZDRParamDispatchOnline !== 'undefined') {
    			if (typeof inputData.ZDRParamDispatchOnline !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData.ZDRParamDispatchOffline !== 'undefined') {
    			if (typeof inputData.ZDRParamDispatchOffline !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData.ZDRParamDispatchSyncDidStart !== 'undefined') {
    			if (typeof inputData.ZDRParamDispatchSyncDidStart !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData.ZDRParamDispatchSyncDidStop !== 'undefined') {
    			if (typeof inputData.ZDRParamDispatchSyncDidStop !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData._ZDRParamDispatchJSONPreStringify !== 'undefined') {
    			if (typeof inputData._ZDRParamDispatchJSONPreStringify !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		if (typeof inputData._ZDRParamDispatchJSONPostParse !== 'undefined') {
    			if (typeof inputData._ZDRParamDispatchJSONPostParse !== 'function') {
    				throw new Error('ZDRErrorInputNotValid');
    			}
    		}

    		const library = (function () {
    			if (ZDRStorageProtocol !== mod.ZDRProtocolRemoteStorage()) {
    				return inputData.ZDRParamLibrary;
    			}

    			return new(inputData.ZDRParamLibrary)({
    				modules: scopes.reduce(function (coll, item) {
    					return coll.concat({
    						name: item.ZDRScopeDirectory,
    						builder: (function (privateClient, publicClient) {
    							return {
    								exports: {
    									privateClient,
    									publicClient,
    								},
    							};
    						}),
    					});
    				}, [])
    			});
    		})();

    		const fissionPermissions = {
    			permissions: scopes.reduce(function (coll, item) {
    				if (!item.ZDRScopeCreatorDirectory) {
    					coll.fs = coll.fs || {};

    					const key = item.ZDRScopeIsPublic ? 'public' : 'private';

    					coll.fs[key] = (coll.fs[key] || []).concat(mod.__ZDRFissionPathDirectory(item.ZDRScopeDirectory));
    				}
    				
    				return Object.assign(coll, item.ZDRScopeCreatorDirectory ? {
    					app: coll.app || {
    						name: item.ZDRScopeDirectory,
    						creator: item.ZDRScopeCreatorDirectory,
    					},
    				} : {});
    			}, {}),
    		};

    		let fissionClient = library._fs || {};
    		(async function fissionSetup() {
    			if (ZDRStorageProtocol !== mod.ZDRProtocolFission()) {
    				return;
    			}

    			const state = await library.initialize(fissionPermissions).catch(function (error) {});

    			if (!state) {
    				return inputData._ZDRParamDispatchInitialisationError && inputData._ZDRParamDispatchInitialisationError();
    			}

    			if (state.scenario === library.Scenario.AuthCancelled) {
    				return library.redirectToLobby(state.permissions);
    				return inputData.ZDRParamDispatchError && inputData.ZDRParamDispatchError(new Error('AuthorizationCancelled'));
    			}

    			if (state.scenario === library.Scenario.NotAuthorised) {
    				return library.redirectToLobby(state.permissions);
    			}

    			if (![library.Scenario.AuthSucceeded, library.Scenario.Continuation].includes(state.scenario)) {
    				// error?
    				return;
    			}

    			if (!Object.keys(fissionClient).length) {
    				fissionClient = state.fs;
    			}

    			await Promise.all(scopes.map(async function (e) {
    				const path = mod.__ZDRFissionPathDirectory('/' + (e.ZDRScopeIsPublic ? 'public' : 'private') + '/' + (e.ZDRScopeCreatorDirectory ? `Apps/${ e.ZDRScopeCreatorDirectory }/${ e.ZDRScopeDirectory }` : e.ZDRScopeDirectory) + '/');

    				if (!(await fissionClient.exists(path))) {
    					await fissionClient.mkdir(path);
    					await fissionClient.publish();
    				}
    			}));

    			fissionClient.permalinkBase = `https://${ state.username }.files.fission.name`;

    			inputData.ZDRParamDispatchConnected && inputData.ZDRParamDispatchConnected(state.username + '@fission.name', Math.random().toString());

    			inputData.ZDRParamDispatchReady();
    		})();

    		if (ZDRStorageProtocol === mod.ZDRProtocolRemoteStorage()) {
    			library.on('error', function (error) {
    				if (!library.remote.online && error.message === 'Sync failed: Network request failed.') {
    					return;
    				}

    				inputData.ZDRParamDispatchError && inputData.ZDRParamDispatchError(error);
    			});

    			library.on('connected', function () {
    				inputData.ZDRParamDispatchConnected && inputData.ZDRParamDispatchConnected(library.remote.userAddress, library.remote.token);
    			});

    			library.on('network-online', function () {
    				inputData.ZDRParamDispatchOnline && inputData.ZDRParamDispatchOnline();
    			});

    			library.on('network-offline', function () {
    				inputData.ZDRParamDispatchOffline && inputData.ZDRParamDispatchOffline();
    			});

    			library.on('sync-done', function () {
    				inputData.ZDRParamDispatchSyncDidStop && inputData.ZDRParamDispatchSyncDidStop();
    			});

    			library.on('ready', function () {
    				inputData.ZDRParamDispatchReady();
    			});
    		}

    		if (ZDRStorageProtocol === mod.ZDRProtocolCustom()) {
    			Promise.resolve((library.ZDRClientPrepare || function () {})()).then(inputData.ZDRParamDispatchReady);
    		}

    		const outputData = {

    			ZDRStorageProtocol,

    			ZDRStorageClient() {
    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (function () {
    						return library;
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return fissionClient;
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return inputData.ZDRParamLibrary;
    					}),
    				})[ZDRStorageProtocol]();
    			},

    			ZDRCloudConnect(inputData) {
    				if (typeof inputData !== 'string') {
    					throw new Error('ZDRErrorInputNotValid');
    				}

    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (function () {
    						return library.connect(inputData);
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return library.initialize(fissionPermissions);
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return library.ZDRClientConnect(inputData);
    					}),
    				})[ZDRStorageProtocol]();
    			},

    			ZDRCloudReconnect() {
    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (function () {
    						return library.reconnect(inputData);
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return library.initialize(fissionPermissions);
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return !library.ZDRClientReconnect ? library.ZDRClientConnect() : library.ZDRClientReconnect();
    					}),
    				})[ZDRStorageProtocol]();
    			},

    			ZDRCloudDisconnect() {
    				return ({
    					[mod.ZDRProtocolRemoteStorage()]: (function () {
    						return library.disconnect(inputData);
    					}),
    					[mod.ZDRProtocolFission()]: (function () {
    						return library.leave({
    							withoutRedirect: true,
    						});
    					}),
    					[mod.ZDRProtocolCustom()]: (function () {
    						return library.ZDRClientDisconnect(inputData);
    					}),
    				})[ZDRStorageProtocol]();
    			},

    		};

    		return scopes.reduce(function (coll, item) {
    			if (ZDRStorageProtocol === mod.ZDRProtocolRemoteStorage()) {
    				library.access.claim(item.ZDRScopeDirectory, 'rw');

    				library.caching.enable(`/${ item.ZDRScopeDirectory }/`);
    			}

    			const schemas = (item.ZDRScopeSchemas || []).filter(mod._ZDRSchemaObjectValidate);

    			const _client = {
    				[mod.ZDRProtocolRemoteStorage()]: (function () {
    					return library[item.ZDRScopeDirectory][item.ZDRScopeIsPublic ? 'publicClient' : 'privateClient'];
    				}),
    				[mod.ZDRProtocolFission()]: (function () {
    					return function () {
    						return fissionClient;
    					};
    				}),
    				[mod.ZDRProtocolCustom()]: (function () {
    					return library;
    				}),
    			}[ZDRStorageProtocol]();
    			const client = mod._ZDRClientInterface(_client, ZDRStorageProtocol, inputData);

    			if (ZDRStorageProtocol === mod.ZDRProtocolRemoteStorage() && schemas.filter(function (e) {
    					return Object.keys(e).filter(function (e) {
    						return mod._ZDRModelSyncCallbackSignatures().includes(e);
    					}).length;
    				}).length) {
    				_client.on('change', function (event) {
    					const signature = mod._ZDRModelSyncCallbackSignature(event);

    					if (!signature) {
    						return;
    					}

    					schemas.forEach(function (e) {
    						if (e.ZDRSchemaPath(e.ZDRSchemaStub(event.relativePath)) !== event.relativePath) {
    							return;
    						}

    						if (!e[signature]) {
    							return;
    						}

    						const outputData = mod._ZDRModelSyncCallbackInput(signature, event);
    						return e[signature](inputData._ZDRParamDispatchJSONPostParse ? inputData._ZDRParamDispatchJSONPostParse(outputData) : outputData);
    					});
    				});
    			}

    			const _ZDRStorageBasePath = function (inputData, pretty = false) {
    				if (typeof inputData !== 'string') {
    					throw new Error('ZDRErrorInputNotValid');
    				}

    				return ((ZDRStorageProtocol === mod.ZDRProtocolFission() ? `/${ pretty ? 'p' : (item.ZDRScopeIsPublic ? 'public' : 'private') }/${ item.ZDRScopeCreatorDirectory ? `Apps/${ item.ZDRScopeCreatorDirectory }/${ item.ZDRScopeDirectory }` : item.ZDRScopeDirectory }/` : '') + inputData).slice(ZDRStorageProtocol === mod.ZDRProtocolRemoteStorage() && inputData[0] === '/' ? 1 : 0);
    			};

    			return Object.assign(coll, {
    				[item.ZDRScopeKey]: Object.assign({

    					_ZDRStorageBasePath,

    					ZDRStorageWriteFile(param1, param2, param3) {
    						if (typeof param1 !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						if (typeof param3 !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientWriteFile(_ZDRStorageBasePath(param1), param2, param3);
    					},

    					ZDRStorageWriteObject(param1, param2) {
    						if (typeof param1 !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						if (typeof param2 !== 'object' || param2 === null) {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientWriteObject(_ZDRStorageBasePath(param1), param2);
    					},

    					ZDRStorageReadFile(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientReadFile(_ZDRStorageBasePath(inputData));
    					},

    					ZDRStorageReadObject(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientReadObject(_ZDRStorageBasePath(inputData));
    					},

    					ZDRStorageListingObjects(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientListObjects(mod._ZDRPathFormatDirectory(_ZDRStorageBasePath(inputData)));
    					},

    					_ZDRStoragePaths(inputData) {
    						return client.ClientPaths(_ZDRStorageBasePath(inputData));
    					},

    					ZDRStoragePaths(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return this._ZDRStoragePaths(mod._ZDRPathFormatDirectory(inputData));
    					},

    					async _ZDRStoragePathsRecursive(inputData, includeFolders = false) {
    						const _this = this;
    						return uFlatten(await Promise.all((await _this.ZDRStoragePaths(inputData)).map(function (e) {
    							return mod._ZDRPathIsDirectory(e) ? _this._ZDRStoragePathsRecursive(inputData + e, includeFolders) : inputData + e;
    						}))).concat(includeFolders ? inputData : []);
    					},

    					ZDRStoragePathsRecursive(inputData, includeFolders = false) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						if (typeof includeFolders !== 'undefined') {
    							if (typeof includeFolders !== 'boolean') {
    								throw new Error('ZDRErrorInputNotValid');
    							}
    						}

    						return this._ZDRStoragePathsRecursive(mod._ZDRPathFormatDirectory(inputData), includeFolders);
    					},

    					ZDRStoragePermalink(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientPermalink(_ZDRStorageBasePath(inputData, true));
    					},

    					_ZDRStorageDeleteFile(inputData) {
    						return client.ClientDelete(inputData);
    					},

    					ZDRStorageDeleteFile(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						return client.ClientDelete(_ZDRStorageBasePath(inputData));
    					},

    					async ZDRStorageDeleteFolderRecursive(inputData) {
    						if (typeof inputData !== 'string') {
    							throw new Error('ZDRErrorInputNotValid');
    						}

    						const _this = this._ZDRStoragePathsRecursive ? this : coll[item.ZDRScopeKey];

    						await Promise.all((await _this._ZDRStoragePathsRecursive(mod._ZDRPathFormatDirectory(inputData))).map(_ZDRStorageBasePath).map(_this._ZDRStorageDeleteFile));

    						return inputData;
    					},

    				}, schemas.reduce(function (map, model) {
    					return Object.assign(map, {
    						[model.ZDRSchemaKey]: Object.assign({

    							ZDRModelPath(inputData) {
    								if (typeof inputData !== 'object' || inputData === null) {
    									throw new Error('ZDRErrorInputNotValid');
    								}

    								return model.ZDRSchemaPath(...arguments);
    							},

    							ZDRModelWriteObject(inputData) {
    								if (model.ZDRSchemaDispatchValidate) {
    									const outputData = model.ZDRSchemaDispatchValidate(...arguments);

    									if (outputData) {
    										return Promise.reject(outputData);
    									}
    								}

    								return coll[item.ZDRScopeKey].ZDRStorageWriteObject(mod._ZDRPathFormatPath(map[model.ZDRSchemaKey].ZDRModelPath(...arguments)), inputData);
    							},

    							async _ZDRModelListObjects() {
    								const _this = this;

    								return (await coll[item.ZDRScopeKey].ZDRStoragePathsRecursive('/')).filter(function (e) {
    									return mod._ZDRPathFormatPath(e) === mod._ZDRPathFormatPath(_this.ZDRModelPath(model.ZDRSchemaStub(e)));
    								});
    							},

    							async ZDRModelListObjects() {
    								return Promise.all((await this._ZDRModelListObjects()).map(coll[item.ZDRScopeKey].ZDRStorageReadObject));
    							},

    							async ZDRModelDeleteObject(inputData) {
    								await coll[item.ZDRScopeKey].ZDRStorageDeleteFile(mod._ZDRPathFormatPath(map[model.ZDRSchemaKey].ZDRModelPath(inputData)));

    								return inputData;
    							},

    						}, Object.entries(model.ZDRSchemaMethods || {}).reduce(function (coll, [key, value]) {
    							if (typeof value !== 'function') {
    								throw new Error('ZDRErrorInputNotFunction');
    							}

    							return Object.assign(coll, {
    								[key]: value.bind(outputData),
    							});
    						}, {})),
    					});
    				}, {})),
    			});
    		}, outputData);
    	},

    	ZDRWrap(inputData = {}) {
    		const _this = this;
    		return new Promise(async function (res, rej) {
    			try {
    				const outputData = _this._ZDRWrap(Object.assign(inputData, {
    					ZDRParamDispatchReady: (function () {
    						setTimeout(function () {
    							return res(outputData);
    						});
    					}),
    				}));
    			} catch (error) {
    				rej(error);
    			}
    		});
    	},

    	ZDRPreferenceProtocol(inputData, _localStorage) {
    		if (!mod._ZDRProtocols().includes(inputData)) {
    			throw new Error('ZDRErrorInputNotValid');
    		}

    		const api = typeof localStorage === 'object' ? localStorage : _localStorage;
    		if (!api.getItem('ZDR_PREFERENCE_PROTOCOL')) {
    			api.setItem('ZDR_PREFERENCE_PROTOCOL', inputData);
    		}

    		return api.getItem('ZDR_PREFERENCE_PROTOCOL');
    	},

    	ZDRPreferenceProtocolClear(_localStorage) {
    		return (typeof localStorage === 'object' ? localStorage : _localStorage).removeItem('ZDR_PREFERENCE_PROTOCOL');
    	},

    	ZDRPreferenceProtocolMigrate(_localStorage) {
    		return (typeof localStorage === 'object' ? localStorage : _localStorage).getItem('ZDR_PREFERENCE_PROTOCOL_MIGRATE');
    	},

    	ZDRPreferenceProtocolMigrateClear(_localStorage) {
    		return (typeof localStorage === 'object' ? localStorage : _localStorage).removeItem('ZDR_PREFERENCE_PROTOCOL_MIGRATE');
    	},

    	ZDRPreferenceProtocolConnect(inputData, _localStorage) {
    		const protocol = this.ZDRProtocolForIdentity(inputData);

    		const api = typeof localStorage === 'object' ? localStorage : _localStorage;

    		if (api.getItem('ZDR_PREFERENCE_PROTOCOL') && (api.getItem('ZDR_PREFERENCE_PROTOCOL') !== protocol)) {
    			api.setItem('ZDR_PREFERENCE_PROTOCOL_MIGRATE', api.getItem('ZDR_PREFERENCE_PROTOCOL'));
    		}

    		api.setItem('ZDR_PREFERENCE_PROTOCOL', protocol);

    		return protocol;
    	},

    	ZDRLauncherFakeItemProxy() {
    		return {
    			LCHRecipeName: 'ZDRLauncherFakeItemProxy',
    			LCHRecipeCallback() {},
    		};
    	},

    	ZDRLauncherItemFakeDispatchError(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchError',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchError(new Error('ZDR_FAKE_CLOUD_ERROR'));
    			},
    		};
    	},

    	ZDRLauncherItemFakeDispatchConnected(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchConnected',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchConnected('ZDR_FAKE_CLOUD_IDENTITY', 'ZDR_FAKE_CLOUD_TOKEN');
    			},
    		};
    	},

    	ZDRLauncherItemFakeDispatchOnline(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchOnline',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchOnline();
    			},
    		};
    	},

    	ZDRLauncherItemFakeDispatchOffline(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchOffline',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchOffline();
    			},
    		};
    	},

    	ZDRLauncherItemFakeDispatchSyncDidStart(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchSyncDidStart',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchSyncDidStart();
    			},
    		};
    	},

    	ZDRLauncherItemFakeDispatchSyncDidStop(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchSyncDidStop',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchSyncDidStop();
    			},
    		};
    	},

    	ZDRLauncherItemFakeDispatchDisconnected(inputData) {
    		if (typeof inputData !== 'object' || inputData === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return {
    			LCHRecipeName: 'ZDRLauncherItemFakeDispatchDisconnected',
    			LCHRecipeCallback() {
    				return inputData.ZDRParamDispatchConnected(null);
    			},
    		};
    	},

    	ZDRRecipes(params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod !== 'object' || params.ParamMod === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamSpecUI !== 'boolean') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		return [
    			mod.ZDRLauncherFakeItemProxy(),
    			mod.ZDRLauncherItemFakeDispatchError(params.ParamMod),
    			mod.ZDRLauncherItemFakeDispatchConnected(params.ParamMod),
    			mod.ZDRLauncherItemFakeDispatchOnline(params.ParamMod),
    			mod.ZDRLauncherItemFakeDispatchOffline(params.ParamMod),
    			mod.ZDRLauncherItemFakeDispatchSyncDidStart(params.ParamMod),
    			mod.ZDRLauncherItemFakeDispatchSyncDidStop(params.ParamMod),
    			mod.ZDRLauncherItemFakeDispatchDisconnected(params.ParamMod),
    		].filter(function (e) {
    			if (params.ParamSpecUI) {
    				return true;
    			}

    			return !(e.LCHRecipeSignature || e.LCHRecipeName).match(/Fake/);
    		});
    	},

    };

    Object.assign(exports, mod);
    });

    var _OLSKInputClear = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKInputClear\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <circle id=\"_OLSKInputClear-oval2\" stroke=\"rgb(170, 170, 170)\" stroke-width=\"1.5\" fill=\"rgb(170, 170, 170)\" cx=\"8\" cy=\"8\" r=\"5.5\" />\n    <path id=\"_OLSKInputClear-bezier\" stroke=\"rgb(255, 255, 255)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 6,6 L 10,10\" />\n    <path id=\"_OLSKInputClear-bezier2\" stroke=\"rgb(255, 255, 255)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 6,10 L 10,6\" />\n</svg>\n";

    /* node_modules/OLSKInputWrapper/main.svelte generated by Svelte v3.54.0 */
    const file = "node_modules/OLSKInputWrapper/main.svelte";

    // (14:0) {#if OLSKInputWrapperValue}
    function create_if_block(ctx) {
    	let button;
    	let div;
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKInputWrapperClearButtonImage");
    			add_location(div, file, 15, 2, 565);
    			attr_dev(button, "type", "button");
    			attr_dev(button, "class", "OLSKInputWrapperClearButton OLSKDecorTappable OLSKDecorButtonNoStyle OLSKToolbarButton svelte-1clh3fc");
    			attr_dev(button, "title", button_title_value = main_1('OLSKInputWrapperClearButtonText'));
    			add_location(button, file, 14, 1, 292);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = _OLSKInputClear;

    			if (!mounted) {
    				dispose = [
    					listen_dev(button, "mousedown", mousedown_handler, false, false, false),
    					listen_dev(
    						button,
    						"click",
    						function () {
    							if (is_function(/*OLSKInputWrapperDispatchClear*/ ctx[1])) /*OLSKInputWrapperDispatchClear*/ ctx[1].apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block.name,
    		type: "if",
    		source: "(14:0) {#if OLSKInputWrapperValue}",
    		ctx
    	});

    	return block;
    }

    function create_fragment(ctx) {
    	let div;
    	let t;
    	let current;
    	const default_slot_template = /*#slots*/ ctx[3].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[2], null);
    	let if_block = /*OLSKInputWrapperValue*/ ctx[0] && create_if_block(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			t = space();
    			if (if_block) if_block.c();
    			attr_dev(div, "class", "OLSKInputWrapper svelte-1clh3fc");
    			add_location(div, file, 9, 0, 216);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			append_dev(div, t);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 4)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[2],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[2])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[2], dirty, null),
    						null
    					);
    				}
    			}

    			if (/*OLSKInputWrapperValue*/ ctx[0]) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block(ctx);
    					if_block.c();
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    const mousedown_handler = event => event.preventDefault();

    function instance($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, ['default']);
    	let { OLSKInputWrapperValue } = $$props;
    	let { OLSKInputWrapperDispatchClear } = $$props;

    	$$self.$$.on_mount.push(function () {
    		if (OLSKInputWrapperValue === undefined && !('OLSKInputWrapperValue' in $$props || $$self.$$.bound[$$self.$$.props['OLSKInputWrapperValue']])) {
    			console.warn("<Main> was created without expected prop 'OLSKInputWrapperValue'");
    		}

    		if (OLSKInputWrapperDispatchClear === undefined && !('OLSKInputWrapperDispatchClear' in $$props || $$self.$$.bound[$$self.$$.props['OLSKInputWrapperDispatchClear']])) {
    			console.warn("<Main> was created without expected prop 'OLSKInputWrapperDispatchClear'");
    		}
    	});

    	const writable_props = ['OLSKInputWrapperValue', 'OLSKInputWrapperDispatchClear'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('OLSKInputWrapperValue' in $$props) $$invalidate(0, OLSKInputWrapperValue = $$props.OLSKInputWrapperValue);
    		if ('OLSKInputWrapperDispatchClear' in $$props) $$invalidate(1, OLSKInputWrapperDispatchClear = $$props.OLSKInputWrapperDispatchClear);
    		if ('$$scope' in $$props) $$invalidate(2, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		OLSKInputWrapperValue,
    		OLSKInputWrapperDispatchClear,
    		OLSKLocalized: main_1,
    		_OLSKInputClear
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKInputWrapperValue' in $$props) $$invalidate(0, OLSKInputWrapperValue = $$props.OLSKInputWrapperValue);
    		if ('OLSKInputWrapperDispatchClear' in $$props) $$invalidate(1, OLSKInputWrapperDispatchClear = $$props.OLSKInputWrapperDispatchClear);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [OLSKInputWrapperValue, OLSKInputWrapperDispatchClear, $$scope, slots];
    }

    class Main extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance, create_fragment, safe_not_equal, {
    			OLSKInputWrapperValue: 0,
    			OLSKInputWrapperDispatchClear: 1
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment.name
    		});
    	}

    	get OLSKInputWrapperValue() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKInputWrapperValue(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKInputWrapperDispatchClear() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKInputWrapperDispatchClear(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const main$k = {

    	OLSKCollectionAPI (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKCollectionSortFunction !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params._OLSKCollectionKeyFunction !== 'function') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.OLSKCollectionItems !== 'undefined') {
    			if (!Array.isArray(params.OLSKCollectionItems)) {
    				throw new Error('OLSKErrorInputNotValid');
    			}
    		} else {
    			params.OLSKCollectionItems = [];
    		}

    		if (typeof params.OLSKCollectionDispatchChange !== 'undefined') {
    			if (typeof params.OLSKCollectionDispatchChange !== 'function') {
    				throw new Error('OLSKErrorInputNotValid');
    			}
    		}

    		const mod = {

    			ValueItemsAll (inputData) {
    				params.OLSKCollectionItems.splice(...[0, params.OLSKCollectionItems.length].concat(inputData));

    				params.OLSKCollectionDispatchChange && params.OLSKCollectionDispatchChange();
    			},

    		};

    		const api = {

    			// DATA
    		
    			OLSKCollectionDataItemsAll() {
    				return params.OLSKCollectionItems.slice();
    			},

    			// CONTROL

    			OLSKCollectionInsert (inputData) {
    				mod.ValueItemsAll([inputData].concat(params.OLSKCollectionItems));

    				return inputData;
    			},

    			OLSKCollectionUpdate (inputData) {
    				mod.ValueItemsAll(params.OLSKCollectionItems.map(function (e) {
    					return params._OLSKCollectionKeyFunction(e) === params._OLSKCollectionKeyFunction(inputData) ? inputData : e;
    				}));

    				return inputData;
    			},
    			
    			OLSKCollectionRemove (inputData) {
    				mod.ValueItemsAll(params.OLSKCollectionItems.filter(function (e) {
    					return params._OLSKCollectionKeyFunction(e) !== params._OLSKCollectionKeyFunction(inputData);
    				}));

    				return inputData;
    			},

    			OLSKCollectionSort () {
    				mod.ValueItemsAll(params.OLSKCollectionItems.sort(params.OLSKCollectionSortFunction));
    			},

    			_OLSKCollectionDebugReassign (inputData) {
    				params.OLSKCollectionItems = inputData;
    			},
    		
    		};
    		
    		return api;
    	},

    	OLSKCollectionConstrainIndex (param1, param2) {
    		if (!Array.isArray(param1)) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof param2 !== 'number') {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (param2 < 0) {
    			return param1.length - 1;
    		}

    		if (param2 >= param1.length) {
    			return 0;
    		}

    		return param2;
    	},

    };

    var _OLSKSharedAndroidMore = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedAndroidMore\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <circle id=\"_OLSKSharedAndroidMore-oval\" stroke=\"none\" fill=\"rgb(0, 0, 0)\" cx=\"8\" cy=\"8\" r=\"1.5\" />\n    <circle id=\"_OLSKSharedAndroidMore-oval2\" stroke=\"none\" fill=\"rgb(0, 0, 0)\" cx=\"8\" cy=\"3.5\" r=\"1.5\" />\n    <circle id=\"_OLSKSharedAndroidMore-oval3\" stroke=\"none\" fill=\"rgb(0, 0, 0)\" cx=\"8\" cy=\"12.5\" r=\"1.5\" />\n</svg>\n";

    var _OLSKSharedApropos = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedApropos\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    \n    <text  fill=\"rgb(0, 0, 0)\" font-family=\"Georgia, Times, 'Times New Roman', serif\" font-size=\"17\" x=\"5.51\" y=\"-0\" text-anchor=\"middle\"><tspan x=\"8\" y=\"14\">i</tspan></text>\n</svg>\n";

    var _OLSKSharedArchive = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedArchive\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedArchive-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 2,14 L 14,14 14,5 2,5 2,14 Z M 2,14\" />\n    <path id=\"_OLSKSharedArchive-rectangle2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1,5 L 15,5 15,2 1,2 1,5 Z M 1,5\" />\n    <path id=\"_OLSKSharedArchive-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"rgb(255, 255, 255)\" d=\"M 5.38,8.95 L 10.62,8.95\" />\n</svg>\n";

    var _OLSKSharedBack = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedBack\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedBack-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 11,1 L 4,8 11,15\" />\n</svg>\n";

    var _OLSKSharedClone = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedClone\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedClone-group2\" clip-path=\"url(#_OLSKSharedClone-clip)\">\n        <clipPath id=\"_OLSKSharedClone-clip\">\n            <path d=\"M 12,0.44 C 12.51,0.61 12.87,0.95 13.04,1.41 13.06,1.47 13.06,1.47 13.07,1.51 13.14,1.78 13.15,1.95 13.15,2.53 13.15,2.72 13.15,2.72 13.15,3.5 L 13.15,4.15 12.5,4.15 5.03,4.15 C 4.57,4.15 4.47,4.16 4.35,4.19 4.34,4.19 4.34,4.19 4.33,4.19 4.28,4.21 4.21,4.28 4.19,4.35 4.19,4.34 4.19,4.34 4.19,4.35 4.16,4.47 4.15,4.57 4.15,5.03 4.15,6.08 4.15,6.08 4.15,9.25 4.15,11.08 4.15,11.08 4.15,12.5 L 4.15,13.15 3.5,13.15 2.53,13.15 C 1.9,13.15 1.73,13.14 1.47,13.05 0.98,12.88 0.63,12.54 0.46,12.09 0.36,11.77 0.35,11.59 0.35,10.97 L 0.35,2.53 0.35,2.53 C 0.35,1.9 0.36,1.73 0.45,1.47 0.62,0.98 0.96,0.63 1.41,0.46 1.73,0.36 1.91,0.35 2.52,0.35 L 10.97,0.35 10.97,0.35 C 11.6,0.35 12,0.44 12,0.44 Z M 12,0.44\" />\n        </clipPath>\n        <rect id=\"_OLSKSharedClone-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" fill=\"none\" x=\"1\" y=\"1\" width=\"11.5\" height=\"11.5\" rx=\"1\" />\n    </g>\n    <rect id=\"_OLSKSharedClone-rectangle2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" fill=\"none\" x=\"3.5\" y=\"3.5\" width=\"11.5\" height=\"11.5\" rx=\"1\" />\n    <g id=\"_OLSKSharedClone-group\">\n        <path id=\"_OLSKSharedClone-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 9.5,6.5 L 9.5,12.5\" />\n        <path id=\"_OLSKSharedClone-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 6.5,9.5 L 12.5,9.5\" />\n    </g>\n</svg>\n";

    var _OLSKSharedCloud = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedCloud\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedCloud-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 9.44,3.25 C 8.04,3.25 7.01,4.06 6.52,5.03 L 6.53,5.03 C 6.44,5.21 6.22,5.28 6.05,5.19 5.44,4.89 4.72,4.92 4.15,5.26 3.58,5.61 3.15,6.24 3.15,7.21 L 3.15,7.21 C 3.15,7.38 3.03,7.53 2.86,7.56 1.78,7.75 1,8.83 1,9.91 1,11.21 2.02,12.25 3.69,12.25 L 12.49,12.25 C 13.88,12.25 15,11.13 15,9.73 15,8.5 14.13,7.48 12.98,7.25 L 12.97,7.25 C 12.79,7.21 12.66,7.04 12.68,6.86 12.86,5.08 11.46,3.25 9.44,3.25 Z M 9.44,3.25\" />\n</svg>\n";

    var _OLSKSharedCloudError = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedCloudError\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedCloudError-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 11.31,12 L 12.49,12 C 13.88,12 15,10.88 15,9.48 15,8.25 14.13,7.23 12.98,7 L 12.97,7 C 12.79,6.96 12.66,6.79 12.68,6.61 12.86,4.83 11.46,3 9.44,3 8.04,3 7.01,3.81 6.52,4.78 L 6.53,4.78 C 6.44,4.96 6.22,5.03 6.05,4.94 5.44,4.64 4.72,4.67 4.15,5.01 3.58,5.36 3.15,5.99 3.15,6.96 L 3.15,6.96 C 3.15,7.13 3.03,7.28 2.86,7.31 1.78,7.5 1,8.58 1,9.66 1,10.96 2.02,12 3.69,12 L 4.86,12\" />\n    <g id=\"_OLSKSharedCloudError-group\">\n    </g>\n    <path id=\"_OLSKSharedCloudError-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,8 L 8,11\" />\n    <path id=\"_OLSKSharedCloudError-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,13.5 L 8,13.5\" />\n</svg>\n";

    var _OLSKSharedCloudOffline = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedCloudOffline\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedCloudOffline-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 11.81,12 L 12.49,12 C 13.88,12 15,10.88 15,9.48 15,8.25 14.13,7.23 12.98,7 L 12.97,7 C 12.79,6.96 12.66,6.79 12.68,6.61 12.86,4.83 11.46,3 9.44,3 8.04,3 7.01,3.81 6.52,4.78 L 6.53,4.78 C 6.44,4.96 6.22,5.03 6.05,4.94 5.44,4.64 4.72,4.67 4.15,5.01 3.58,5.36 3.15,5.99 3.15,6.96 L 3.15,6.96 C 3.15,7.13 3.03,7.28 2.86,7.31 1.78,7.5 1,8.58 1,9.66 1,10.96 2.02,12 3.69,12 L 4.86,12\" />\n    <g id=\"_OLSKSharedCloudOffline-group\" transform=\"translate(8.3, 12.11) rotate(90)\" >\n        <path id=\"_OLSKSharedCloudOffline-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1.68,-1.68 L -1.68,1.68\" />\n        <path id=\"_OLSKSharedCloudOffline-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 3.35,-0 L 0,3.35\" transform=\"translate(-1.68, 1.68) rotate(-90)\"  />\n    </g>\n</svg>\n";

    var _OLSKSharedCreate = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedCreate\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedCreate-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,1 L 8,15\" />\n    <path id=\"_OLSKSharedCreate-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1,8 L 15,8\" />\n</svg>\n";

    var _OLSKSharedDiscard = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedDiscard\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedDiscard-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" fill=\"none\" d=\"M 4.53,6 L 13,6 13,13.47 C 13,13.91 13,14.13 12.93,14.33 L 12.93,14.37 C 12.83,14.63 12.63,14.83 12.37,14.93 12.13,15 11.91,15 11.47,15 L 4.53,15 C 4.09,15 3.87,15 3.67,14.93 L 3.63,14.93 C 3.37,14.83 3.17,14.63 3.07,14.37 3,14.13 3,13.91 3,13.47 L 3,6 Z M 4.53,6\" />\n    <path id=\"_OLSKSharedDiscard-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1,3.5 L 15,3.5\" />\n    <path id=\"_OLSKSharedDiscard-rectangle2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" fill=\"none\" d=\"M 8,1 L 8,1 C 9.75,1 9.75,1 9.75,1 L 9.75,1 C 10.44,1 11,1.56 11,2.25 11,2.25 11,2.25 11,2.25 11,2.25 11,2.25 11,2.25 L 11,2.25 C 11,2.25 11,2.25 11,2.25 L 11,3.5 5,3.5 5,2.25 C 5,1.56 5.56,1 6.25,1 6.25,1 6.25,1 6.25,1 L 8,1 Z M 8,1\" />\n    <path id=\"_OLSKSharedDiscard-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 5.5,5.5 L 5.5,15\" />\n    <path id=\"_OLSKSharedDiscard-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,6 L 8,15\" />\n    <path id=\"_OLSKSharedDiscard-bezier4\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 10.5,5.5 L 10.5,15\" />\n</svg>\n";

    var _OLSKSharedDismiss = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedDismiss\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedDismiss-group\" transform=\"translate(8, 8) rotate(-45)\" >\n        <path id=\"_OLSKSharedDismiss-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 0,-7 L 0,7\" />\n        <path id=\"_OLSKSharedDismiss-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M -7,0 L 7,0\" />\n    </g>\n</svg>\n";

    var _OLSKSharedEdit = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedEdit\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedEdit-group\">\n        <path id=\"_OLSKSharedEdit-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 13.12,10.17 L 13.12,12.43 C 13.12,13.05 13.12,13.37 13.03,13.65 L 13.01,13.7 C 12.88,14.07 12.58,14.36 12.2,14.49 11.86,14.6 11.54,14.6 10.9,14.6 L 3.72,14.6 C 3.08,14.6 2.76,14.6 2.47,14.5 L 2.42,14.49 C 2.04,14.36 1.75,14.07 1.61,13.7 1.5,13.37 1.5,13.05 1.5,12.43 L 1.5,5.42 C 1.5,4.79 1.5,4.48 1.6,4.2 L 1.61,4.14 C 1.75,3.78 2.04,3.49 2.42,3.35 2.76,3.25 3.08,3.25 3.72,3.25 L 8.01,3.25\" />\n        <path id=\"_OLSKSharedEdit-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1.09,-8.67 C 1.13,-8.55 1.13,-8.43 1.13,-8.21 L 1.58,0.46 C 1.58,0.53 1.58,0.61 1.58,0.73 1.58,1.5 0.89,2.54 0.21,2.54 -0.48,2.54 -1.16,1.5 -1.16,0.73 -1.16,0.63 -1.16,0.46 -1.16,0.46 L -1.61,-8.21 C -1.61,-8.43 -1.61,-8.55 -1.58,-8.65 -1.52,-8.81 -1.41,-8.91 -1.27,-8.96 -1.14,-9 0.29,-9 0.29,-9 0.53,-9 0.65,-9 0.76,-8.97 0.76,-8.97 1.04,-8.81 1.09,-8.67 Z M 1.09,-8.67\" transform=\"translate(7.76, 8.79) rotate(45)\"  />\n    </g>\n</svg>\n";

    var _OLSKSharediOSA2HS = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharediOSA2HS\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <rect id=\"_OLSKSharediOSA2HS-rectangle2\" stroke=\"rgb(0, 0, 0)\" fill=\"rgb(255, 255, 255)\" x=\"1\" y=\"1\" width=\"14\" height=\"14\" rx=\"1\" />\n    <g id=\"_OLSKSharediOSA2HS-group\">\n        <path id=\"_OLSKSharediOSA2HS-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,5 L 8,11\" />\n        <path id=\"_OLSKSharediOSA2HS-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 5,8 L 11,8\" />\n    </g>\n</svg>\n";

    var _OLSKSharediOSShare = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharediOSShare\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharediOSShare-bezier6\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-miterlimit=\"4\" fill=\"none\" d=\"M 10.84,5.96 L 12.54,5.96 C 13.18,5.96 13.69,6.46 13.69,7.09 L 13.69,13.98 C 13.69,14.61 13.18,15.11 12.54,15.11 L 3.85,15.11 C 3.21,15.11 2.69,14.61 2.69,13.98 L 2.69,7.09 C 2.69,6.46 3.21,5.96 3.85,5.96 L 5.5,5.96\" />\n    <path id=\"_OLSKSharediOSShare-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 4.94,3.56 L 8.19,0.5 11.44,3.56\" />\n    <path id=\"_OLSKSharediOSShare-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8.19,9.91 L 8.19,1.5\" />\n</svg>\n";

    var _OLSKSharedIconPlaceholder = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100\" height=\"100\"  xml:space=\"preserve\" id=\"_OLSKSharedIconPlaceholder\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <rect id=\"_OLSKSharedIconPlaceholder-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"2\" stroke-dasharray=\"10,2\" stroke-dashoffset=\"0\" fill=\"none\" x=\"5\" y=\"5\" width=\"90\" height=\"90\" rx=\"20\" />\n</svg>\n";

    var _OLSKSharedLanguage = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedLanguage\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <circle id=\"_OLSKSharedLanguage-oval\" stroke=\"rgb(0, 0, 0)\" fill=\"none\" cx=\"8\" cy=\"8\" r=\"6\" />\n    <path id=\"_OLSKSharedLanguage-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 2,8 L 14,8\" />\n    <path id=\"_OLSKSharedLanguage-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,14 L 8,2\" />\n    <path id=\"_OLSKSharedLanguage-bezier4\" stroke=\"rgb(0, 0, 0)\" stroke-linejoin=\"bevel\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 12.24,3.75 C 11.15,4.83 9.65,5.5 8,5.5 6.35,5.5 4.85,4.83 3.76,3.75 4.09,3.42 4.46,3.13 4.86,2.89 5.77,2.32 6.85,2 8,2 9.65,2 11.15,2.67 12.24,3.75 Z M 12.24,3.75\" />\n    <path id=\"_OLSKSharedLanguage-bezier5\" stroke=\"rgb(0, 0, 0)\" stroke-linejoin=\"bevel\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 12.24,12.25 C 11.15,13.33 9.65,14 8,14 6.35,14 4.85,13.33 3.76,12.25 4.09,11.92 4.46,11.63 4.86,11.39 5.77,10.82 6.85,10.5 8,10.5 9.65,10.5 11.15,11.17 12.24,12.25 Z M 12.24,12.25\" />\n    <ellipse id=\"_OLSKSharedLanguage-oval4\" stroke=\"rgb(0, 0, 0)\" fill=\"none\" cx=\"8\" cy=\"8\" rx=\"3\" ry=\"5.75\" />\n</svg>\n";

    var _OLSKSharedLauncher = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedLauncher\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedLauncher-group\" transform=\"scale(1.07, 1.07)\" >\n        <path id=\"_OLSKSharedLauncher-prompt\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8.25,2.5 L 13.25,7.5 8.25,12.5\" />\n        <g id=\"_OLSKSharedLauncher-linesSolid\">\n            <path id=\"_OLSKSharedLauncher-bezier5\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 2,5.5 L 8,5.5\" />\n            <path id=\"_OLSKSharedLauncher-bezier6\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 4.5,7.5 L 10,7.5\" />\n            <path id=\"_OLSKSharedLauncher-bezier7\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.2\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 2.5,9.5 L 7.5,9.5\" />\n        </g>\n    </g>\n</svg>\n";

    var _OLSKSharedLock = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedLock\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedLock-group\">\n        <rect id=\"_OLSKSharedLock-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" fill=\"none\" x=\"2.76\" y=\"7.56\" width=\"10.51\" height=\"6.69\" rx=\"1\" />\n        <path id=\"_OLSKSharedLock-rectangle2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 8,1.72 L 8,1.72 8,1.72 8,1.72 C 9.94,1.72 11.5,3.38 11.5,5.44 L 11.5,5.44 11.5,5.44 11.5,5.7 11.5,7.56 4.5,7.56 4.5,5.7 C 4.5,5.44 4.5,5.44 4.5,5.44 L 4.5,5.44 C 4.5,3.38 6.07,1.72 8,1.72 L 8,1.72 8,1.72 Z M 8,1.72\" />\n    </g>\n</svg>\n";

    var _OLSKSharedReload = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedReload\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedReload-oval2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 13,9 C 13,11.76 10.76,14 8,14 5.24,14 3,11.76 3,9 3,6.24 5.24,4 8,4\" />\n    <path id=\"_OLSKSharedReload-bezier8\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"rgb(0, 0, 0)\" d=\"M 8,2 L 8,6 11,4 8,2\" />\n</svg>\n";

    var _OLSKSharedStash = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedStash\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedStash-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 5.79,8.03 L 12.79,8.03\" />\n    <path id=\"_OLSKSharedStash-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 5.79,11.53 L 12.79,11.53\" />\n    <path id=\"_OLSKSharedStash-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 5.79,4.53 L 12.79,4.53\" />\n    <path id=\"_OLSKSharedStash-bezier4\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 3.29,8.03 L 3.29,8.03\" />\n    <path id=\"_OLSKSharedStash-bezier5\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 3.29,11.53 L 3.29,11.53\" />\n    <path id=\"_OLSKSharedStash-bezier6\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 3.29,4.53 L 3.29,4.53\" />\n</svg>\n";

    var _OLSKSharedStashSelected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedStashSelected\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedStashSelected-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 2,9 L 6,13 13,5\" />\n</svg>\n";

    var _OLSKSharedStorageDisconnect = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedStorageDisconnect\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedStorageDisconnect-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 9.44,3.25 C 8.04,3.25 7.01,4.06 6.52,5.03 L 6.53,5.03 C 6.44,5.21 6.22,5.28 6.05,5.19 5.44,4.89 4.72,4.92 4.15,5.26 3.58,5.61 3.15,6.24 3.15,7.21 L 3.15,7.21 C 3.15,7.38 3.03,7.53 2.86,7.56 1.78,7.75 1,8.83 1,9.91 1,11.21 2.02,12.25 3.69,12.25 L 12.49,12.25 C 13.88,12.25 15,11.13 15,9.73 15,8.5 14.13,7.48 12.98,7.25 L 12.97,7.25 C 12.79,7.21 12.66,7.04 12.68,6.86 12.86,5.08 11.46,3.25 9.44,3.25 Z M 9.44,3.25\" />\n    <path id=\"_OLSKSharedStorageDisconnect-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 12,1.5 L 4.5,14.5\" />\n</svg>\n";

    var _OLSKSharedSyncStart = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedSyncStart\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedSyncStart-group\" transform=\"\" >\n        <path id=\"_OLSKSharedSyncStart-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 13,6.5 L 10.5,6.5\" />\n        <path id=\"_OLSKSharedSyncStart-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 13,6.5 L 14,4.5\" />\n        <path id=\"_OLSKSharedSyncStart-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 4.86,8.83 L 2.83,8.83\" />\n        <path id=\"_OLSKSharedSyncStart-bezier5\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1.83,10.83 L 2.83,8.83\" />\n        <path id=\"_OLSKSharedSyncStart-oval\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 12.85,9.21 C 12.31,11.39 10.34,13 8,13 5.66,13 3.69,11.39 3.15,9.21\" />\n        <path id=\"_OLSKSharedSyncStart-oval3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 3.25,6.42 C 3.91,4.43 5.79,3 8,3 10.14,3 11.97,4.35 12.68,6.24\" />\n    </g>\n</svg>\n";

    var _OLSKSharedSyncStop = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedSyncStop\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <g id=\"_OLSKSharedSyncStop-group\" transform=\"\" >\n        <path id=\"_OLSKSharedSyncStop-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 13,6.5 L 10.5,6.5\" />\n        <path id=\"_OLSKSharedSyncStop-bezier3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 13,6.5 L 14,4.5\" />\n        <path id=\"_OLSKSharedSyncStop-bezier4\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 4.86,8.83 L 2.83,8.83\" />\n        <path id=\"_OLSKSharedSyncStop-bezier5\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1.83,10.83 L 2.83,8.83\" />\n        <path id=\"_OLSKSharedSyncStop-oval\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 12.85,9.21 C 12.31,11.39 10.34,13 8,13 5.66,13 3.69,11.39 3.15,9.21\" />\n        <path id=\"_OLSKSharedSyncStop-oval3\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 3.25,6.42 C 3.91,4.43 5.79,3 8,3 10.14,3 11.97,4.35 12.68,6.24\" />\n    </g>\n    <path id=\"_OLSKSharedSyncStop-bezier\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 11.62,1.66 L 3.96,13.91\" />\n</svg>\n";

    var _OLSKSharedUnarchive = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\"  xml:space=\"preserve\" id=\"_OLSKSharedUnarchive\">\n    <!-- Generated by PaintCode (www.paintcodeapp.com) -->\n    <path id=\"_OLSKSharedUnarchive-rectangle\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 2,14 L 14,14 14,5 2,5 2,14 Z M 2,14\" />\n    <path id=\"_OLSKSharedUnarchive-rectangle2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1,5 L 15,5 15,2 1,2 1,5 Z M 1,5\" />\n    <path id=\"_OLSKSharedUnarchive-bezier2\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.3\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" fill=\"rgb(255, 255, 255)\" d=\"M 5.38,8.95 L 10.62,8.95\" />\n    <path id=\"_OLSKSharedUnarchive-bezier4\" stroke=\"rgb(0, 0, 0)\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" fill=\"none\" d=\"M 1,15 L 15,1\" />\n</svg>\n";

    var OLSKUIAssets = {

    	_OLSKInputClear,
    	_OLSKSharedAndroidMore,
    	_OLSKSharedApropos,
    	_OLSKSharedArchive,
    	_OLSKSharedBack,
    	_OLSKSharedClone,
    	_OLSKSharedCloud,
    	_OLSKSharedCloudError,
    	_OLSKSharedCloudOffline,
    	_OLSKSharedCreate,
    	_OLSKSharedDiscard,
    	_OLSKSharedDismiss,
    	_OLSKSharedEdit,
    	_OLSKSharediOSA2HS,
    	_OLSKSharediOSShare,
    	_OLSKSharedIconPlaceholder,
    	_OLSKSharedLanguage,
    	_OLSKSharedLauncher,
    	_OLSKSharedLock,
    	_OLSKSharedReload,
    	_OLSKSharedStash,
    	_OLSKSharedStashSelected,
    	_OLSKSharedStorageDisconnect,
    	_OLSKSharedSyncStart,
    	_OLSKSharedSyncStop,
    	_OLSKSharedUnarchive,

    };

    /* node_modules/OLSKCollection/main.svelte generated by Svelte v3.54.0 */

    const { Object: Object_1 } = globals;
    const file$1 = "node_modules/OLSKCollection/main.svelte";

    function get_each_context(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[19] = list[i];
    	return child_ctx;
    }

    function get_each_context_1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[22] = list[i];
    	return child_ctx;
    }

    const get_OLSKCollectionItem_slot_changes = dirty => ({
    	OLSKCollectionItem: dirty & /*mod, OLSKCollectionItems*/ 65
    });

    const get_OLSKCollectionItem_slot_context = ctx => ({ OLSKCollectionItem: /*item*/ ctx[22] });
    const get_OLSKCollectionEmpty_slot_changes = dirty => ({});
    const get_OLSKCollectionEmpty_slot_context = ctx => ({});

    // (153:0) {#if !OLSKCollectionItems.length }
    function create_if_block_2(ctx) {
    	let div;
    	let current;
    	const OLSKCollectionEmpty_slot_template = /*#slots*/ ctx[16].OLSKCollectionEmpty;
    	const OLSKCollectionEmpty_slot = create_slot(OLSKCollectionEmpty_slot_template, ctx, /*$$scope*/ ctx[15], get_OLSKCollectionEmpty_slot_context);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (OLSKCollectionEmpty_slot) OLSKCollectionEmpty_slot.c();
    			attr_dev(div, "class", "OLSKCollectionEmpty");
    			attr_dev(div, "aria-hidden", "true");
    			add_location(div, file$1, 153, 1, 3755);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (OLSKCollectionEmpty_slot) {
    				OLSKCollectionEmpty_slot.m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKCollectionEmpty_slot) {
    				if (OLSKCollectionEmpty_slot.p && (!current || dirty & /*$$scope*/ 32768)) {
    					update_slot_base(
    						OLSKCollectionEmpty_slot,
    						OLSKCollectionEmpty_slot_template,
    						ctx,
    						/*$$scope*/ ctx[15],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[15])
    						: get_slot_changes(OLSKCollectionEmpty_slot_template, /*$$scope*/ ctx[15], dirty, get_OLSKCollectionEmpty_slot_changes),
    						get_OLSKCollectionEmpty_slot_context
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKCollectionEmpty_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKCollectionEmpty_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (OLSKCollectionEmpty_slot) OLSKCollectionEmpty_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2.name,
    		type: "if",
    		source: "(153:0) {#if !OLSKCollectionItems.length }",
    		ctx
    	});

    	return block;
    }

    // (162:1) {#if key }
    function create_if_block_1(ctx) {
    	let div;
    	let t_value = /*key*/ ctx[19] + "";
    	let t;

    	const block = {
    		c: function create() {
    			div = element("div");
    			t = text(t_value);
    			attr_dev(div, "class", "OLSKCollectionChunkHeading OLSKStickyHeader");
    			add_location(div, file$1, 162, 2, 3970);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*mod*/ 64 && t_value !== (t_value = /*key*/ ctx[19] + "")) set_data_dev(t, t_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1.name,
    		type: "if",
    		source: "(162:1) {#if key }",
    		ctx
    	});

    	return block;
    }

    // (169:4) {#if modPublic._OLSKCollectionStashEnabled }
    function create_if_block$1(ctx) {
    	let div1;
    	let div0;
    	let raw_value = OLSKUIAssets._OLSKSharedStashSelected + "";

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			div0 = element("div");
    			attr_dev(div0, "class", "OLSKCollectionItemStashStatusImage svelte-foe401");
    			add_location(div0, file$1, 170, 6, 4707);
    			attr_dev(div1, "class", "OLSKCollectionItemStashStatus svelte-foe401");
    			add_location(div1, file$1, 169, 5, 4657);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, div0);
    			div0.innerHTML = raw_value;
    		},
    		p: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$1.name,
    		type: "if",
    		source: "(169:4) {#if modPublic._OLSKCollectionStashEnabled }",
    		ctx
    	});

    	return block;
    }

    // (167:2) {#each (key ? mod._ValueItemsChunked[key] : OLSKCollectionItems) as item }
    function create_each_block_1(ctx) {
    	let div;
    	let t0;
    	let t1;
    	let div_class_value;
    	let div_aria_label_value;
    	let current;
    	let mounted;
    	let dispose;
    	let if_block = /*modPublic*/ ctx[1]._OLSKCollectionStashEnabled && create_if_block$1(ctx);
    	const OLSKCollectionItem_slot_template = /*#slots*/ ctx[16].OLSKCollectionItem;
    	const OLSKCollectionItem_slot = create_slot(OLSKCollectionItem_slot_template, ctx, /*$$scope*/ ctx[15], get_OLSKCollectionItem_slot_context);

    	function click_handler() {
    		return /*click_handler*/ ctx[17](/*item*/ ctx[22]);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			t0 = space();
    			if (OLSKCollectionItem_slot) OLSKCollectionItem_slot.c();
    			t1 = space();
    			attr_dev(div, "class", div_class_value = "OLSKCollectionItem " + /*OLSKCollectionItemClass*/ ctx[5] + " svelte-foe401");
    			attr_dev(div, "aria-label", div_aria_label_value = /*OLSKCollectionItemAccessibilitySummaryFunction*/ ctx[2](/*item*/ ctx[22]));
    			attr_dev(div, "role", "button");
    			toggle_class(div, "OLSKCollectionItemStash", /*modPublic*/ ctx[1]._OLSKCollectionStashItems.includes(/*item*/ ctx[22]));
    			toggle_class(div, "OLSKCollectionItemLocus", /*item*/ ctx[22] === /*OLSKCollectionItemsLocus*/ ctx[4]);
    			add_location(div, file$1, 167, 3, 4169);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			append_dev(div, t0);

    			if (OLSKCollectionItem_slot) {
    				OLSKCollectionItem_slot.m(div, null);
    			}

    			append_dev(div, t1);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(div, "click", click_handler, false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (/*modPublic*/ ctx[1]._OLSKCollectionStashEnabled) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$1(ctx);
    					if_block.c();
    					if_block.m(div, t0);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}

    			if (OLSKCollectionItem_slot) {
    				if (OLSKCollectionItem_slot.p && (!current || dirty & /*$$scope, mod, OLSKCollectionItems*/ 32833)) {
    					update_slot_base(
    						OLSKCollectionItem_slot,
    						OLSKCollectionItem_slot_template,
    						ctx,
    						/*$$scope*/ ctx[15],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[15])
    						: get_slot_changes(OLSKCollectionItem_slot_template, /*$$scope*/ ctx[15], dirty, get_OLSKCollectionItem_slot_changes),
    						get_OLSKCollectionItem_slot_context
    					);
    				}
    			}

    			if (!current || dirty & /*OLSKCollectionItemClass*/ 32 && div_class_value !== (div_class_value = "OLSKCollectionItem " + /*OLSKCollectionItemClass*/ ctx[5] + " svelte-foe401")) {
    				attr_dev(div, "class", div_class_value);
    			}

    			if (!current || dirty & /*OLSKCollectionItemAccessibilitySummaryFunction, mod, OLSKCollectionItems*/ 69 && div_aria_label_value !== (div_aria_label_value = /*OLSKCollectionItemAccessibilitySummaryFunction*/ ctx[2](/*item*/ ctx[22]))) {
    				attr_dev(div, "aria-label", div_aria_label_value);
    			}

    			if (!current || dirty & /*OLSKCollectionItemClass, modPublic, mod, undefined, OLSKCollectionItems*/ 99) {
    				toggle_class(div, "OLSKCollectionItemStash", /*modPublic*/ ctx[1]._OLSKCollectionStashItems.includes(/*item*/ ctx[22]));
    			}

    			if (!current || dirty & /*OLSKCollectionItemClass, mod, undefined, OLSKCollectionItems, OLSKCollectionItemsLocus*/ 113) {
    				toggle_class(div, "OLSKCollectionItemLocus", /*item*/ ctx[22] === /*OLSKCollectionItemsLocus*/ ctx[4]);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKCollectionItem_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKCollectionItem_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    			if (OLSKCollectionItem_slot) OLSKCollectionItem_slot.d(detaching);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1.name,
    		type: "each",
    		source: "(167:2) {#each (key ? mod._ValueItemsChunked[key] : OLSKCollectionItems) as item }",
    		ctx
    	});

    	return block;
    }

    // (159:0) {#each (mod._ValueItemsChunks || [undefined]) as key }
    function create_each_block(ctx) {
    	let div1;
    	let t0;
    	let div0;
    	let t1;
    	let current;
    	let if_block = /*key*/ ctx[19] && create_if_block_1(ctx);

    	let each_value_1 = /*key*/ ctx[19]
    	? /*mod*/ ctx[6]._ValueItemsChunked[/*key*/ ctx[19]]
    	: /*OLSKCollectionItems*/ ctx[0];

    	validate_each_argument(each_value_1);
    	let each_blocks = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			if (if_block) if_block.c();
    			t0 = space();
    			div0 = element("div");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t1 = space();
    			attr_dev(div0, "class", "OLSKCollectionChunkItems");
    			add_location(div0, file$1, 165, 1, 4050);
    			attr_dev(div1, "class", "OLSKCollectionChunk");
    			add_location(div1, file$1, 160, 0, 3922);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			if (if_block) if_block.m(div1, null);
    			append_dev(div1, t0);
    			append_dev(div1, div0);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div0, null);
    			}

    			append_dev(div1, t1);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*key*/ ctx[19]) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block_1(ctx);
    					if_block.c();
    					if_block.m(div1, t0);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}

    			if (dirty & /*OLSKCollectionItemClass, OLSKCollectionItemAccessibilitySummaryFunction, mod, undefined, OLSKCollectionItems, modPublic, OLSKCollectionItemsLocus, OLSKCollectionDispatchClick, $$scope, OLSKUIAssets*/ 32895) {
    				each_value_1 = /*key*/ ctx[19]
    				? /*mod*/ ctx[6]._ValueItemsChunked[/*key*/ ctx[19]]
    				: /*OLSKCollectionItems*/ ctx[0];

    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1(ctx, each_value_1, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block_1(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(div0, null);
    					}
    				}

    				group_outros();

    				for (i = each_value_1.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value_1.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			if (if_block) if_block.d();
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block.name,
    		type: "each",
    		source: "(159:0) {#each (mod._ValueItemsChunks || [undefined]) as key }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$1(ctx) {
    	let div;
    	let t0;
    	let t1;
    	let current;
    	let mounted;
    	let dispose;
    	const default_slot_template = /*#slots*/ ctx[16].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[15], null);
    	let if_block = !/*OLSKCollectionItems*/ ctx[0].length && create_if_block_2(ctx);
    	let each_value = /*mod*/ ctx[6]._ValueItemsChunks || [undefined];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			t0 = space();
    			if (if_block) if_block.c();
    			t1 = space();

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(div, "class", "OLSKCollection");
    			add_location(div, file$1, 148, 0, 3674);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			append_dev(div, t0);
    			if (if_block) if_block.m(div, null);
    			append_dev(div, t1);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(
    					window,
    					"keydown",
    					function () {
    						if (is_function(/*mod*/ ctx[6].InterfaceWindowDidKeydown)) /*mod*/ ctx[6].InterfaceWindowDidKeydown.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, [dirty]) {
    			ctx = new_ctx;

    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 32768)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[15],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[15])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[15], dirty, null),
    						null
    					);
    				}
    			}

    			if (!/*OLSKCollectionItems*/ ctx[0].length) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*OLSKCollectionItems*/ 1) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_2(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, t1);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}

    			if (dirty & /*mod, undefined, OLSKCollectionItems, OLSKCollectionItemClass, OLSKCollectionItemAccessibilitySummaryFunction, modPublic, OLSKCollectionItemsLocus, OLSKCollectionDispatchClick, $$scope, OLSKUIAssets*/ 32895) {
    				each_value = /*mod*/ ctx[6]._ValueItemsChunks || [undefined];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(div, null);
    					}
    				}

    				group_outros();

    				for (i = each_value.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			transition_in(if_block);

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			transition_out(if_block);
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    			if (if_block) if_block.d();
    			destroy_each(each_blocks, detaching);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$1.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$1($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, ['default','OLSKCollectionEmpty','OLSKCollectionItem']);
    	let { OLSKCollectionItemAccessibilitySummaryFunction } = $$props;
    	let { OLSKCollectionSortFunction } = $$props;
    	let { OLSKCollectionChunkFunction = null } = $$props;
    	let { OLSKCollectionChunkKeySortFunction = null } = $$props;
    	let { _OLSKCollectionDispatchKey } = $$props;
    	let { OLSKCollectionDispatchClick } = $$props;
    	let { OLSKCollectionDispatchArrow = null } = $$props;
    	let { OLSKCollectionDispatchStash = null } = $$props;
    	let { OLSKCollectionItems = [] } = $$props;
    	let { OLSKCollectionItemsLocus = null } = $$props;
    	let { OLSKCollectionItemClass = '' } = $$props;
    	let { OLSKCollectionEnableLooping = false } = $$props;
    	let { OLSKCollectionIgnoreKeyboard = false } = $$props;

    	const modPublic = Object.assign(
    		main$k.OLSKCollectionAPI({
    			OLSKCollectionItems,
    			_OLSKCollectionKeyFunction: _OLSKCollectionDispatchKey,
    			OLSKCollectionSortFunction,
    			OLSKCollectionDispatchChange() {
    				$$invalidate(0, OLSKCollectionItems);
    				_OLSKCollectionItemsDidChange(OLSKCollectionItems);
    			}
    		}),
    		{
    			_OLSKCollectionStashItems: [],
    			_OLSKCollectionStashEnabled: false,
    			OLSKCollectionStashEnabled(inputData) {
    				if (typeof inputData === 'undefined') {
    					return modPublic._OLSKCollectionStashEnabled;
    				}

    				$$invalidate(1, modPublic._OLSKCollectionStashItems = [], modPublic);
    				return $$invalidate(1, modPublic._OLSKCollectionStashEnabled = inputData, modPublic);
    			},
    			_OLSKCollectionStashToggle(inputData) {
    				$$invalidate(
    					1,
    					modPublic._OLSKCollectionStashItems = modPublic._OLSKCollectionStashItems.includes(inputData)
    					? modPublic._OLSKCollectionStashItems.filter(function (e) {
    							return e !== inputData;
    						})
    					: modPublic._OLSKCollectionStashItems.concat(inputData),
    					modPublic
    				);

    				OLSKCollectionDispatchStash && OLSKCollectionDispatchStash(modPublic._OLSKCollectionStashItems.slice());
    			}
    		}
    	);

    	const _OLSKCollectionItemsDidChange = function (inputData) {
    		modPublic._OLSKCollectionDebugReassign(inputData);

    		if (!OLSKCollectionChunkFunction) {
    			return;
    		}

    		const order = JSON.stringify(OLSKCollectionItems.map(_OLSKCollectionDispatchKey));

    		if (order === mod._ValueOrder) {
    			return;
    		}

    		$$invalidate(6, mod._ValueOrder = order, mod);
    		$$invalidate(6, mod._ValueItemsChunked = OLSKCollectionChunkFunction(OLSKCollectionItems), mod);

    		$$invalidate(
    			6,
    			mod._ValueItemsChunks = (function (inputData) {
    				return OLSKCollectionChunkKeySortFunction
    				? inputData.sort(OLSKCollectionChunkKeySortFunction)
    				: inputData;
    			})(Object.keys(mod._ValueItemsChunked)),
    			mod
    		);
    	};

    	const mod = {
    		// VALUE
    		_ValueOrder: '',
    		// INTERFACE
    		InterfaceWindowDidKeydown(event) {
    			if (!OLSKCollectionDispatchArrow) {
    				return;
    			}

    			if (OLSKCollectionIgnoreKeyboard) {
    				return;
    			}

    			if (!OLSKCollectionItems.length) {
    				return;
    			}

    			const handlerFunctions = {
    				ArrowUp() {
    					(function () {
    						if (!OLSKCollectionEnableLooping && OLSKCollectionItems[0] === OLSKCollectionItemsLocus) {
    							return;
    						}

    						mod.ControlArrowIncrement(-1);
    					})();

    					return event.preventDefault();
    				},
    				ArrowDown() {
    					(function () {
    						if (!OLSKCollectionEnableLooping && OLSKCollectionItems.slice(-1).pop() === OLSKCollectionItemsLocus) {
    							return;
    						}

    						mod.ControlArrowIncrement(1);
    					})();

    					return event.preventDefault();
    				}
    			};

    			handlerFunctions[event.code] && handlerFunctions[event.code]();
    		},
    		// CONTROL
    		ControlArrowIncrement(inputData) {
    			OLSKCollectionDispatchArrow(OLSKCollectionItems[main$k.OLSKCollectionConstrainIndex(OLSKCollectionItems, OLSKCollectionItems.indexOf(OLSKCollectionItemsLocus) + inputData)]);
    		}
    	};

    	$$self.$$.on_mount.push(function () {
    		if (OLSKCollectionItemAccessibilitySummaryFunction === undefined && !('OLSKCollectionItemAccessibilitySummaryFunction' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionItemAccessibilitySummaryFunction']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionItemAccessibilitySummaryFunction'");
    		}

    		if (OLSKCollectionSortFunction === undefined && !('OLSKCollectionSortFunction' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionSortFunction']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionSortFunction'");
    		}

    		if (_OLSKCollectionDispatchKey === undefined && !('_OLSKCollectionDispatchKey' in $$props || $$self.$$.bound[$$self.$$.props['_OLSKCollectionDispatchKey']])) {
    			console.warn("<Main> was created without expected prop '_OLSKCollectionDispatchKey'");
    		}

    		if (OLSKCollectionDispatchClick === undefined && !('OLSKCollectionDispatchClick' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionDispatchClick']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionDispatchClick'");
    		}
    	});

    	const writable_props = [
    		'OLSKCollectionItemAccessibilitySummaryFunction',
    		'OLSKCollectionSortFunction',
    		'OLSKCollectionChunkFunction',
    		'OLSKCollectionChunkKeySortFunction',
    		'_OLSKCollectionDispatchKey',
    		'OLSKCollectionDispatchClick',
    		'OLSKCollectionDispatchArrow',
    		'OLSKCollectionDispatchStash',
    		'OLSKCollectionItems',
    		'OLSKCollectionItemsLocus',
    		'OLSKCollectionItemClass',
    		'OLSKCollectionEnableLooping',
    		'OLSKCollectionIgnoreKeyboard'
    	];

    	Object_1.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	const click_handler = item => modPublic._OLSKCollectionStashEnabled
    	? modPublic._OLSKCollectionStashToggle(item)
    	: OLSKCollectionDispatchClick(item);

    	$$self.$$set = $$props => {
    		if ('OLSKCollectionItemAccessibilitySummaryFunction' in $$props) $$invalidate(2, OLSKCollectionItemAccessibilitySummaryFunction = $$props.OLSKCollectionItemAccessibilitySummaryFunction);
    		if ('OLSKCollectionSortFunction' in $$props) $$invalidate(7, OLSKCollectionSortFunction = $$props.OLSKCollectionSortFunction);
    		if ('OLSKCollectionChunkFunction' in $$props) $$invalidate(8, OLSKCollectionChunkFunction = $$props.OLSKCollectionChunkFunction);
    		if ('OLSKCollectionChunkKeySortFunction' in $$props) $$invalidate(9, OLSKCollectionChunkKeySortFunction = $$props.OLSKCollectionChunkKeySortFunction);
    		if ('_OLSKCollectionDispatchKey' in $$props) $$invalidate(10, _OLSKCollectionDispatchKey = $$props._OLSKCollectionDispatchKey);
    		if ('OLSKCollectionDispatchClick' in $$props) $$invalidate(3, OLSKCollectionDispatchClick = $$props.OLSKCollectionDispatchClick);
    		if ('OLSKCollectionDispatchArrow' in $$props) $$invalidate(11, OLSKCollectionDispatchArrow = $$props.OLSKCollectionDispatchArrow);
    		if ('OLSKCollectionDispatchStash' in $$props) $$invalidate(12, OLSKCollectionDispatchStash = $$props.OLSKCollectionDispatchStash);
    		if ('OLSKCollectionItems' in $$props) $$invalidate(0, OLSKCollectionItems = $$props.OLSKCollectionItems);
    		if ('OLSKCollectionItemsLocus' in $$props) $$invalidate(4, OLSKCollectionItemsLocus = $$props.OLSKCollectionItemsLocus);
    		if ('OLSKCollectionItemClass' in $$props) $$invalidate(5, OLSKCollectionItemClass = $$props.OLSKCollectionItemClass);
    		if ('OLSKCollectionEnableLooping' in $$props) $$invalidate(13, OLSKCollectionEnableLooping = $$props.OLSKCollectionEnableLooping);
    		if ('OLSKCollectionIgnoreKeyboard' in $$props) $$invalidate(14, OLSKCollectionIgnoreKeyboard = $$props.OLSKCollectionIgnoreKeyboard);
    		if ('$$scope' in $$props) $$invalidate(15, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		OLSKCollectionItemAccessibilitySummaryFunction,
    		OLSKCollectionSortFunction,
    		OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction,
    		_OLSKCollectionDispatchKey,
    		OLSKCollectionDispatchClick,
    		OLSKCollectionDispatchArrow,
    		OLSKCollectionDispatchStash,
    		OLSKCollectionItems,
    		OLSKCollectionItemsLocus,
    		OLSKCollectionItemClass,
    		OLSKCollectionEnableLooping,
    		OLSKCollectionIgnoreKeyboard,
    		OLSK_SPEC_UI: main_1$1,
    		OLSKCollectionLogic: main$k,
    		modPublic,
    		_OLSKCollectionItemsDidChange,
    		mod,
    		OLSKUIAssets
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKCollectionItemAccessibilitySummaryFunction' in $$props) $$invalidate(2, OLSKCollectionItemAccessibilitySummaryFunction = $$props.OLSKCollectionItemAccessibilitySummaryFunction);
    		if ('OLSKCollectionSortFunction' in $$props) $$invalidate(7, OLSKCollectionSortFunction = $$props.OLSKCollectionSortFunction);
    		if ('OLSKCollectionChunkFunction' in $$props) $$invalidate(8, OLSKCollectionChunkFunction = $$props.OLSKCollectionChunkFunction);
    		if ('OLSKCollectionChunkKeySortFunction' in $$props) $$invalidate(9, OLSKCollectionChunkKeySortFunction = $$props.OLSKCollectionChunkKeySortFunction);
    		if ('_OLSKCollectionDispatchKey' in $$props) $$invalidate(10, _OLSKCollectionDispatchKey = $$props._OLSKCollectionDispatchKey);
    		if ('OLSKCollectionDispatchClick' in $$props) $$invalidate(3, OLSKCollectionDispatchClick = $$props.OLSKCollectionDispatchClick);
    		if ('OLSKCollectionDispatchArrow' in $$props) $$invalidate(11, OLSKCollectionDispatchArrow = $$props.OLSKCollectionDispatchArrow);
    		if ('OLSKCollectionDispatchStash' in $$props) $$invalidate(12, OLSKCollectionDispatchStash = $$props.OLSKCollectionDispatchStash);
    		if ('OLSKCollectionItems' in $$props) $$invalidate(0, OLSKCollectionItems = $$props.OLSKCollectionItems);
    		if ('OLSKCollectionItemsLocus' in $$props) $$invalidate(4, OLSKCollectionItemsLocus = $$props.OLSKCollectionItemsLocus);
    		if ('OLSKCollectionItemClass' in $$props) $$invalidate(5, OLSKCollectionItemClass = $$props.OLSKCollectionItemClass);
    		if ('OLSKCollectionEnableLooping' in $$props) $$invalidate(13, OLSKCollectionEnableLooping = $$props.OLSKCollectionEnableLooping);
    		if ('OLSKCollectionIgnoreKeyboard' in $$props) $$invalidate(14, OLSKCollectionIgnoreKeyboard = $$props.OLSKCollectionIgnoreKeyboard);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*OLSKCollectionItems*/ 1) {
    			$: {
    				_OLSKCollectionItemsDidChange(OLSKCollectionItems);
    			}
    		}
    	};

    	return [
    		OLSKCollectionItems,
    		modPublic,
    		OLSKCollectionItemAccessibilitySummaryFunction,
    		OLSKCollectionDispatchClick,
    		OLSKCollectionItemsLocus,
    		OLSKCollectionItemClass,
    		mod,
    		OLSKCollectionSortFunction,
    		OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction,
    		_OLSKCollectionDispatchKey,
    		OLSKCollectionDispatchArrow,
    		OLSKCollectionDispatchStash,
    		OLSKCollectionEnableLooping,
    		OLSKCollectionIgnoreKeyboard,
    		$$scope,
    		slots,
    		click_handler
    	];
    }

    class Main$1 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
    			OLSKCollectionItemAccessibilitySummaryFunction: 2,
    			OLSKCollectionSortFunction: 7,
    			OLSKCollectionChunkFunction: 8,
    			OLSKCollectionChunkKeySortFunction: 9,
    			_OLSKCollectionDispatchKey: 10,
    			OLSKCollectionDispatchClick: 3,
    			OLSKCollectionDispatchArrow: 11,
    			OLSKCollectionDispatchStash: 12,
    			OLSKCollectionItems: 0,
    			OLSKCollectionItemsLocus: 4,
    			OLSKCollectionItemClass: 5,
    			OLSKCollectionEnableLooping: 13,
    			OLSKCollectionIgnoreKeyboard: 14,
    			modPublic: 1
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$1.name
    		});
    	}

    	get OLSKCollectionItemAccessibilitySummaryFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemAccessibilitySummaryFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionSortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionSortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionChunkFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionChunkFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionChunkKeySortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionChunkKeySortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get _OLSKCollectionDispatchKey() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set _OLSKCollectionDispatchKey(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchClick() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchClick(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchArrow() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchArrow(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchStash() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchStash(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItemsLocus() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemsLocus(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItemClass() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemClass(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionEnableLooping() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionEnableLooping(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionIgnoreKeyboard() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionIgnoreKeyboard(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get modPublic() {
    		return this.$$.ctx[1];
    	}

    	set modPublic(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKNarrow/main.svelte generated by Svelte v3.54.0 */
    const file$2 = "node_modules/OLSKNarrow/main.svelte";
    const get_OLSKNarrowBodyTail_slot_changes = dirty => ({});
    const get_OLSKNarrowBodyTail_slot_context = ctx => ({});

    const get_OLSKCollectionItem_slot_changes$1 = dirty => ({
    	OLSKCollectionItem: dirty & /*item*/ 268435456
    });

    const get_OLSKCollectionItem_slot_context$1 = ctx => ({ OLSKCollectionItem: /*item*/ ctx[28] });
    const get_OLSKCollectionEmpty_slot_changes$1 = dirty => ({});
    const get_OLSKCollectionEmpty_slot_context$1 = ctx => ({});
    const get_OLSKNarrowToolbarTail_slot_changes = dirty => ({});
    const get_OLSKNarrowToolbarTail_slot_context = ctx => ({});
    const get_OLSKNarrowToolbarHead_slot_changes = dirty => ({});
    const get_OLSKNarrowToolbarHead_slot_context = ctx => ({});

    // (132:1) {:else}
    function create_else_block(ctx) {
    	let input;
    	let input_class_value;
    	let input_placeholder_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			input = element("input");
    			attr_dev(input, "class", input_class_value = "OLSKNarrowFilterField " + /*OLSKNarrowFilterFieldClass*/ ctx[15] + " OLSKDecorInput");
    			attr_dev(input, "placeholder", input_placeholder_value = /*OLSKNarrowFilterFieldPlaceholderText*/ ctx[16] || main_1('OLSKNarrowFilterFieldText'));
    			input.autofocus = /*OLSKNarrowFilterFieldAutofocus*/ ctx[18];
    			add_location(input, file$2, 132, 2, 3665);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, input, anchor);
    			set_input_value(input, /*OLSKNarrowFilterText*/ ctx[0]);
    			if (/*OLSKNarrowFilterFieldAutofocus*/ ctx[18]) input.focus();

    			if (!mounted) {
    				dispose = [
    					listen_dev(input, "input", /*input_input_handler_1*/ ctx[25]),
    					listen_dev(
    						input,
    						"input",
    						function () {
    							if (is_function(/*mod*/ ctx[19].InterfaceFilterFieldDidInput)) /*mod*/ ctx[19].InterfaceFilterFieldDidInput.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty & /*OLSKNarrowFilterFieldClass*/ 32768 && input_class_value !== (input_class_value = "OLSKNarrowFilterField " + /*OLSKNarrowFilterFieldClass*/ ctx[15] + " OLSKDecorInput")) {
    				attr_dev(input, "class", input_class_value);
    			}

    			if (dirty & /*OLSKNarrowFilterFieldPlaceholderText*/ 65536 && input_placeholder_value !== (input_placeholder_value = /*OLSKNarrowFilterFieldPlaceholderText*/ ctx[16] || main_1('OLSKNarrowFilterFieldText'))) {
    				attr_dev(input, "placeholder", input_placeholder_value);
    			}

    			if (dirty & /*OLSKNarrowFilterFieldAutofocus*/ 262144) {
    				prop_dev(input, "autofocus", /*OLSKNarrowFilterFieldAutofocus*/ ctx[18]);
    			}

    			if (dirty & /*OLSKNarrowFilterText*/ 1 && input.value !== /*OLSKNarrowFilterText*/ ctx[0]) {
    				set_input_value(input, /*OLSKNarrowFilterText*/ ctx[0]);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(input);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block.name,
    		type: "else",
    		source: "(132:1) {:else}",
    		ctx
    	});

    	return block;
    }

    // (126:1) {#if OLSKNarrowFilterFieldClearButton }
    function create_if_block_2$1(ctx) {
    	let form;
    	let olskinputwrapper;
    	let current;
    	let mounted;
    	let dispose;

    	olskinputwrapper = new Main({
    			props: {
    				OLSKInputWrapperValue: /*OLSKNarrowFilterFieldClearButton*/ ctx[17]
    				? /*OLSKNarrowFilterText*/ ctx[0]
    				: '',
    				OLSKInputWrapperDispatchClear: /*mod*/ ctx[19].OLSKInputWrapperDispatchClear,
    				$$slots: { default: [create_default_slot] },
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			form = element("form");
    			create_component(olskinputwrapper.$$.fragment);
    			attr_dev(form, "class", "OLSKNarrowForm OLSKToolbarFlexible");
    			add_location(form, file$2, 126, 1, 3040);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, form, anchor);
    			mount_component(olskinputwrapper, form, null);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(
    					form,
    					"submit",
    					function () {
    						if (is_function(/*mod*/ ctx[19].InterfaceFormDidSubmit)) /*mod*/ ctx[19].InterfaceFormDidSubmit.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    			const olskinputwrapper_changes = {};

    			if (dirty & /*OLSKNarrowFilterFieldClearButton, OLSKNarrowFilterText*/ 131073) olskinputwrapper_changes.OLSKInputWrapperValue = /*OLSKNarrowFilterFieldClearButton*/ ctx[17]
    			? /*OLSKNarrowFilterText*/ ctx[0]
    			: '';

    			if (dirty & /*mod*/ 524288) olskinputwrapper_changes.OLSKInputWrapperDispatchClear = /*mod*/ ctx[19].OLSKInputWrapperDispatchClear;

    			if (dirty & /*$$scope, OLSKNarrowFilterFieldClass, OLSKNarrowFilterFieldPlaceholderText, OLSKNarrowFilterFieldAutofocus, OLSKNarrowFilterText, mod*/ 135102465) {
    				olskinputwrapper_changes.$$scope = { dirty, ctx };
    			}

    			olskinputwrapper.$set(olskinputwrapper_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskinputwrapper.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskinputwrapper.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(form);
    			destroy_component(olskinputwrapper);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$1.name,
    		type: "if",
    		source: "(126:1) {#if OLSKNarrowFilterFieldClearButton }",
    		ctx
    	});

    	return block;
    }

    // (128:2) <OLSKInputWrapper OLSKInputWrapperValue={ OLSKNarrowFilterFieldClearButton ? OLSKNarrowFilterText : '' } OLSKInputWrapperDispatchClear={ mod.OLSKInputWrapperDispatchClear } >
    function create_default_slot(ctx) {
    	let input;
    	let input_class_value;
    	let input_placeholder_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			input = element("input");
    			attr_dev(input, "class", input_class_value = "OLSKNarrowFilterField " + /*OLSKNarrowFilterFieldClass*/ ctx[15] + " OLSKDecorInput");
    			attr_dev(input, "placeholder", input_placeholder_value = /*OLSKNarrowFilterFieldPlaceholderText*/ ctx[16] || main_1('OLSKNarrowFilterFieldText'));
    			input.autofocus = /*OLSKNarrowFilterFieldAutofocus*/ ctx[18];
    			add_location(input, file$2, 128, 3, 3311);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, input, anchor);
    			set_input_value(input, /*OLSKNarrowFilterText*/ ctx[0]);
    			if (/*OLSKNarrowFilterFieldAutofocus*/ ctx[18]) input.focus();

    			if (!mounted) {
    				dispose = [
    					listen_dev(input, "input", /*input_input_handler*/ ctx[24]),
    					listen_dev(
    						input,
    						"input",
    						function () {
    							if (is_function(/*mod*/ ctx[19].InterfaceFilterFieldDidInput)) /*mod*/ ctx[19].InterfaceFilterFieldDidInput.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty & /*OLSKNarrowFilterFieldClass*/ 32768 && input_class_value !== (input_class_value = "OLSKNarrowFilterField " + /*OLSKNarrowFilterFieldClass*/ ctx[15] + " OLSKDecorInput")) {
    				attr_dev(input, "class", input_class_value);
    			}

    			if (dirty & /*OLSKNarrowFilterFieldPlaceholderText*/ 65536 && input_placeholder_value !== (input_placeholder_value = /*OLSKNarrowFilterFieldPlaceholderText*/ ctx[16] || main_1('OLSKNarrowFilterFieldText'))) {
    				attr_dev(input, "placeholder", input_placeholder_value);
    			}

    			if (dirty & /*OLSKNarrowFilterFieldAutofocus*/ 262144) {
    				prop_dev(input, "autofocus", /*OLSKNarrowFilterFieldAutofocus*/ ctx[18]);
    			}

    			if (dirty & /*OLSKNarrowFilterText*/ 1 && input.value !== /*OLSKNarrowFilterText*/ ctx[0]) {
    				set_input_value(input, /*OLSKNarrowFilterText*/ ctx[0]);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(input);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot.name,
    		type: "slot",
    		source: "(128:2) <OLSKInputWrapper OLSKInputWrapperValue={ OLSKNarrowFilterFieldClearButton ? OLSKNarrowFilterText : '' } OLSKInputWrapperDispatchClear={ mod.OLSKInputWrapperDispatchClear } >",
    		ctx
    	});

    	return block;
    }

    // (164:3) {#if $$slots.OLSKCollectionItem}
    function create_if_block_1$1(ctx) {
    	let current;
    	const OLSKCollectionItem_slot_template = /*#slots*/ ctx[23].OLSKCollectionItem;
    	const OLSKCollectionItem_slot = create_slot(OLSKCollectionItem_slot_template, ctx, /*$$scope*/ ctx[27], get_OLSKCollectionItem_slot_context$1);

    	const block = {
    		c: function create() {
    			if (OLSKCollectionItem_slot) OLSKCollectionItem_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKCollectionItem_slot) {
    				OLSKCollectionItem_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKCollectionItem_slot) {
    				if (OLSKCollectionItem_slot.p && (!current || dirty & /*$$scope, item*/ 402653184)) {
    					update_slot_base(
    						OLSKCollectionItem_slot,
    						OLSKCollectionItem_slot_template,
    						ctx,
    						/*$$scope*/ ctx[27],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[27])
    						: get_slot_changes(OLSKCollectionItem_slot_template, /*$$scope*/ ctx[27], dirty, get_OLSKCollectionItem_slot_changes$1),
    						get_OLSKCollectionItem_slot_context$1
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKCollectionItem_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKCollectionItem_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKCollectionItem_slot) OLSKCollectionItem_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$1.name,
    		type: "if",
    		source: "(164:3) {#if $$slots.OLSKCollectionItem}",
    		ctx
    	});

    	return block;
    }

    // (163:2) 
    function create_OLSKCollectionItem_slot(ctx) {
    	let div;
    	let current;
    	let if_block = /*$$slots*/ ctx[20].OLSKCollectionItem && create_if_block_1$1(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKCollectionItem");
    			add_location(div, file$2, 162, 2, 4950);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[20].OLSKCollectionItem) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 1048576) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_1$1(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKCollectionItem_slot.name,
    		type: "slot",
    		source: "(163:2) ",
    		ctx
    	});

    	return block;
    }

    // (169:3) {#if $$slots.OLSKCollectionEmpty}
    function create_if_block$2(ctx) {
    	let current;
    	const OLSKCollectionEmpty_slot_template = /*#slots*/ ctx[23].OLSKCollectionEmpty;
    	const OLSKCollectionEmpty_slot = create_slot(OLSKCollectionEmpty_slot_template, ctx, /*$$scope*/ ctx[27], get_OLSKCollectionEmpty_slot_context$1);

    	const block = {
    		c: function create() {
    			if (OLSKCollectionEmpty_slot) OLSKCollectionEmpty_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKCollectionEmpty_slot) {
    				OLSKCollectionEmpty_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKCollectionEmpty_slot) {
    				if (OLSKCollectionEmpty_slot.p && (!current || dirty & /*$$scope*/ 134217728)) {
    					update_slot_base(
    						OLSKCollectionEmpty_slot,
    						OLSKCollectionEmpty_slot_template,
    						ctx,
    						/*$$scope*/ ctx[27],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[27])
    						: get_slot_changes(OLSKCollectionEmpty_slot_template, /*$$scope*/ ctx[27], dirty, get_OLSKCollectionEmpty_slot_changes$1),
    						get_OLSKCollectionEmpty_slot_context$1
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKCollectionEmpty_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKCollectionEmpty_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKCollectionEmpty_slot) OLSKCollectionEmpty_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$2.name,
    		type: "if",
    		source: "(169:3) {#if $$slots.OLSKCollectionEmpty}",
    		ctx
    	});

    	return block;
    }

    // (168:2) 
    function create_OLSKCollectionEmpty_slot(ctx) {
    	let div;
    	let current;
    	let if_block = /*$$slots*/ ctx[20].OLSKCollectionEmpty && create_if_block$2(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKCollectionEmpty");
    			add_location(div, file$2, 167, 2, 5111);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[20].OLSKCollectionEmpty) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 1048576) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block$2(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKCollectionEmpty_slot.name,
    		type: "slot",
    		source: "(168:2) ",
    		ctx
    	});

    	return block;
    }

    function create_fragment$2(ctx) {
    	let div;
    	let header;
    	let t0;
    	let current_block_type_index;
    	let if_block;
    	let t1;
    	let t2;
    	let section;
    	let t3;
    	let olskcollection;
    	let t4;
    	let div_class_value;
    	let div_aria_hidden_value;
    	let current;
    	const OLSKNarrowToolbarHead_slot_template = /*#slots*/ ctx[23].OLSKNarrowToolbarHead;
    	const OLSKNarrowToolbarHead_slot = create_slot(OLSKNarrowToolbarHead_slot_template, ctx, /*$$scope*/ ctx[27], get_OLSKNarrowToolbarHead_slot_context);
    	const if_block_creators = [create_if_block_2$1, create_else_block];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*OLSKNarrowFilterFieldClearButton*/ ctx[17]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    	const OLSKNarrowToolbarTail_slot_template = /*#slots*/ ctx[23].OLSKNarrowToolbarTail;
    	const OLSKNarrowToolbarTail_slot = create_slot(OLSKNarrowToolbarTail_slot_template, ctx, /*$$scope*/ ctx[27], get_OLSKNarrowToolbarTail_slot_context);
    	const default_slot_template = /*#slots*/ ctx[23].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[27], null);

    	let olskcollection_props = {
    		OLSKCollectionItems: /*OLSKCollectionItems*/ ctx[7],
    		OLSKCollectionItemsLocus: /*OLSKCollectionItemsLocus*/ ctx[8],
    		OLSKCollectionIgnoreKeyboard: !/*mod*/ ctx[19].DataIsFocused(),
    		OLSKCollectionItemClass: /*OLSKCollectionItemClass*/ ctx[6],
    		OLSKCollectionSortFunction: /*OLSKCollectionSortFunction*/ ctx[2],
    		_OLSKCollectionDispatchKey: /*_OLSKCollectionDispatchKey*/ ctx[3],
    		OLSKCollectionChunkFunction: /*OLSKCollectionChunkFunction*/ ctx[4],
    		OLSKCollectionChunkKeySortFunction: /*OLSKCollectionChunkKeySortFunction*/ ctx[5],
    		OLSKCollectionItemAccessibilitySummaryFunction: /*OLSKCollectionItemAccessibilitySummaryFunction*/ ctx[9],
    		OLSKCollectionDispatchClick: /*OLSKCollectionDispatchClick*/ ctx[10],
    		OLSKCollectionDispatchArrow: /*OLSKCollectionDispatchArrow*/ ctx[11],
    		OLSKCollectionDispatchStash: /*OLSKCollectionDispatchStash*/ ctx[12],
    		$$slots: {
    			OLSKCollectionEmpty: [
    				create_OLSKCollectionEmpty_slot,
    				({ OLSKCollectionItem: item }) => ({ 28: item }),
    				({ OLSKCollectionItem: item }) => item ? 268435456 : 0
    			],
    			OLSKCollectionItem: [
    				create_OLSKCollectionItem_slot,
    				({ OLSKCollectionItem: item }) => ({ 28: item }),
    				({ OLSKCollectionItem: item }) => item ? 268435456 : 0
    			]
    		},
    		$$scope: { ctx }
    	};

    	olskcollection = new Main$1({
    			props: olskcollection_props,
    			$$inline: true
    		});

    	/*olskcollection_binding*/ ctx[26](olskcollection);
    	const OLSKNarrowBodyTail_slot_template = /*#slots*/ ctx[23].OLSKNarrowBodyTail;
    	const OLSKNarrowBodyTail_slot = create_slot(OLSKNarrowBodyTail_slot_template, ctx, /*$$scope*/ ctx[27], get_OLSKNarrowBodyTail_slot_context);

    	const block = {
    		c: function create() {
    			div = element("div");
    			header = element("header");
    			if (OLSKNarrowToolbarHead_slot) OLSKNarrowToolbarHead_slot.c();
    			t0 = space();
    			if_block.c();
    			t1 = space();
    			if (OLSKNarrowToolbarTail_slot) OLSKNarrowToolbarTail_slot.c();
    			t2 = space();
    			section = element("section");
    			if (default_slot) default_slot.c();
    			t3 = space();
    			create_component(olskcollection.$$.fragment);
    			t4 = space();
    			if (OLSKNarrowBodyTail_slot) OLSKNarrowBodyTail_slot.c();
    			attr_dev(header, "class", "OLSKNarrowToolbar OLSKMobileViewHeader OLSKToolbar OLSKCommonEdgeBottom");
    			add_location(header, file$2, 122, 0, 2863);
    			attr_dev(section, "class", "OLSKNarrowBody");
    			add_location(section, file$2, 138, 0, 4041);
    			attr_dev(div, "class", div_class_value = "OLSKNarrow OLSKViewportMaster OLSKCommonEdgeRight " + /*OLSKNarrowClass*/ ctx[14]);
    			attr_dev(div, "aria-hidden", div_aria_hidden_value = /*OLSKMobileViewInactive*/ ctx[13] ? true : null);
    			toggle_class(div, "OLSKMobileViewInactive", /*OLSKMobileViewInactive*/ ctx[13]);
    			toggle_class(div, "OLSKNarrowFocused", /*mod*/ ctx[19]._ValueFilterFieldFocused);
    			add_location(div, file$2, 120, 0, 2612);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, header);

    			if (OLSKNarrowToolbarHead_slot) {
    				OLSKNarrowToolbarHead_slot.m(header, null);
    			}

    			append_dev(header, t0);
    			if_blocks[current_block_type_index].m(header, null);
    			append_dev(header, t1);

    			if (OLSKNarrowToolbarTail_slot) {
    				OLSKNarrowToolbarTail_slot.m(header, null);
    			}

    			append_dev(div, t2);
    			append_dev(div, section);

    			if (default_slot) {
    				default_slot.m(section, null);
    			}

    			append_dev(section, t3);
    			mount_component(olskcollection, section, null);
    			append_dev(section, t4);

    			if (OLSKNarrowBodyTail_slot) {
    				OLSKNarrowBodyTail_slot.m(section, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (OLSKNarrowToolbarHead_slot) {
    				if (OLSKNarrowToolbarHead_slot.p && (!current || dirty & /*$$scope*/ 134217728)) {
    					update_slot_base(
    						OLSKNarrowToolbarHead_slot,
    						OLSKNarrowToolbarHead_slot_template,
    						ctx,
    						/*$$scope*/ ctx[27],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[27])
    						: get_slot_changes(OLSKNarrowToolbarHead_slot_template, /*$$scope*/ ctx[27], dirty, get_OLSKNarrowToolbarHead_slot_changes),
    						get_OLSKNarrowToolbarHead_slot_context
    					);
    				}
    			}

    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block = if_blocks[current_block_type_index];

    				if (!if_block) {
    					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block.c();
    				} else {
    					if_block.p(ctx, dirty);
    				}

    				transition_in(if_block, 1);
    				if_block.m(header, t1);
    			}

    			if (OLSKNarrowToolbarTail_slot) {
    				if (OLSKNarrowToolbarTail_slot.p && (!current || dirty & /*$$scope*/ 134217728)) {
    					update_slot_base(
    						OLSKNarrowToolbarTail_slot,
    						OLSKNarrowToolbarTail_slot_template,
    						ctx,
    						/*$$scope*/ ctx[27],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[27])
    						: get_slot_changes(OLSKNarrowToolbarTail_slot_template, /*$$scope*/ ctx[27], dirty, get_OLSKNarrowToolbarTail_slot_changes),
    						get_OLSKNarrowToolbarTail_slot_context
    					);
    				}
    			}

    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 134217728)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[27],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[27])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[27], dirty, null),
    						null
    					);
    				}
    			}

    			const olskcollection_changes = {};
    			if (dirty & /*OLSKCollectionItems*/ 128) olskcollection_changes.OLSKCollectionItems = /*OLSKCollectionItems*/ ctx[7];
    			if (dirty & /*OLSKCollectionItemsLocus*/ 256) olskcollection_changes.OLSKCollectionItemsLocus = /*OLSKCollectionItemsLocus*/ ctx[8];
    			if (dirty & /*mod*/ 524288) olskcollection_changes.OLSKCollectionIgnoreKeyboard = !/*mod*/ ctx[19].DataIsFocused();
    			if (dirty & /*OLSKCollectionItemClass*/ 64) olskcollection_changes.OLSKCollectionItemClass = /*OLSKCollectionItemClass*/ ctx[6];
    			if (dirty & /*OLSKCollectionSortFunction*/ 4) olskcollection_changes.OLSKCollectionSortFunction = /*OLSKCollectionSortFunction*/ ctx[2];
    			if (dirty & /*_OLSKCollectionDispatchKey*/ 8) olskcollection_changes._OLSKCollectionDispatchKey = /*_OLSKCollectionDispatchKey*/ ctx[3];
    			if (dirty & /*OLSKCollectionChunkFunction*/ 16) olskcollection_changes.OLSKCollectionChunkFunction = /*OLSKCollectionChunkFunction*/ ctx[4];
    			if (dirty & /*OLSKCollectionChunkKeySortFunction*/ 32) olskcollection_changes.OLSKCollectionChunkKeySortFunction = /*OLSKCollectionChunkKeySortFunction*/ ctx[5];
    			if (dirty & /*OLSKCollectionItemAccessibilitySummaryFunction*/ 512) olskcollection_changes.OLSKCollectionItemAccessibilitySummaryFunction = /*OLSKCollectionItemAccessibilitySummaryFunction*/ ctx[9];
    			if (dirty & /*OLSKCollectionDispatchClick*/ 1024) olskcollection_changes.OLSKCollectionDispatchClick = /*OLSKCollectionDispatchClick*/ ctx[10];
    			if (dirty & /*OLSKCollectionDispatchArrow*/ 2048) olskcollection_changes.OLSKCollectionDispatchArrow = /*OLSKCollectionDispatchArrow*/ ctx[11];
    			if (dirty & /*OLSKCollectionDispatchStash*/ 4096) olskcollection_changes.OLSKCollectionDispatchStash = /*OLSKCollectionDispatchStash*/ ctx[12];

    			if (dirty & /*$$scope, $$slots, item*/ 403701760) {
    				olskcollection_changes.$$scope = { dirty, ctx };
    			}

    			olskcollection.$set(olskcollection_changes);

    			if (OLSKNarrowBodyTail_slot) {
    				if (OLSKNarrowBodyTail_slot.p && (!current || dirty & /*$$scope*/ 134217728)) {
    					update_slot_base(
    						OLSKNarrowBodyTail_slot,
    						OLSKNarrowBodyTail_slot_template,
    						ctx,
    						/*$$scope*/ ctx[27],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[27])
    						: get_slot_changes(OLSKNarrowBodyTail_slot_template, /*$$scope*/ ctx[27], dirty, get_OLSKNarrowBodyTail_slot_changes),
    						get_OLSKNarrowBodyTail_slot_context
    					);
    				}
    			}

    			if (!current || dirty & /*OLSKNarrowClass*/ 16384 && div_class_value !== (div_class_value = "OLSKNarrow OLSKViewportMaster OLSKCommonEdgeRight " + /*OLSKNarrowClass*/ ctx[14])) {
    				attr_dev(div, "class", div_class_value);
    			}

    			if (!current || dirty & /*OLSKMobileViewInactive*/ 8192 && div_aria_hidden_value !== (div_aria_hidden_value = /*OLSKMobileViewInactive*/ ctx[13] ? true : null)) {
    				attr_dev(div, "aria-hidden", div_aria_hidden_value);
    			}

    			if (!current || dirty & /*OLSKNarrowClass, OLSKMobileViewInactive*/ 24576) {
    				toggle_class(div, "OLSKMobileViewInactive", /*OLSKMobileViewInactive*/ ctx[13]);
    			}

    			if (!current || dirty & /*OLSKNarrowClass, mod*/ 540672) {
    				toggle_class(div, "OLSKNarrowFocused", /*mod*/ ctx[19]._ValueFilterFieldFocused);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKNarrowToolbarHead_slot, local);
    			transition_in(if_block);
    			transition_in(OLSKNarrowToolbarTail_slot, local);
    			transition_in(default_slot, local);
    			transition_in(olskcollection.$$.fragment, local);
    			transition_in(OLSKNarrowBodyTail_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKNarrowToolbarHead_slot, local);
    			transition_out(if_block);
    			transition_out(OLSKNarrowToolbarTail_slot, local);
    			transition_out(default_slot, local);
    			transition_out(olskcollection.$$.fragment, local);
    			transition_out(OLSKNarrowBodyTail_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (OLSKNarrowToolbarHead_slot) OLSKNarrowToolbarHead_slot.d(detaching);
    			if_blocks[current_block_type_index].d();
    			if (OLSKNarrowToolbarTail_slot) OLSKNarrowToolbarTail_slot.d(detaching);
    			if (default_slot) default_slot.d(detaching);
    			/*olskcollection_binding*/ ctx[26](null);
    			destroy_component(olskcollection);
    			if (OLSKNarrowBodyTail_slot) OLSKNarrowBodyTail_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$2.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$2($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;

    	validate_slots('Main', slots, [
    		'OLSKNarrowToolbarHead','OLSKNarrowToolbarTail','default','OLSKCollectionEmpty','OLSKCollectionItem','OLSKNarrowBodyTail'
    	]);

    	const $$slots = compute_slots(slots);
    	let { OLSKCollectionSortFunction } = $$props;
    	let { _OLSKCollectionDispatchKey } = $$props;
    	let { OLSKCollectionChunkFunction = null } = $$props;
    	let { OLSKCollectionChunkKeySortFunction = null } = $$props;
    	let { OLSKCollectionItemClass = '' } = $$props;
    	let { OLSKNarrowFilterText } = $$props;
    	let { OLSKCollectionItems } = $$props;
    	let { OLSKCollectionItemsLocus = null } = $$props;
    	let { OLSKCollectionItemAccessibilitySummaryFunction } = $$props;
    	let { OLSKCollectionDispatchClick } = $$props;
    	let { OLSKCollectionDispatchArrow } = $$props;
    	let { OLSKCollectionDispatchStash = null } = $$props;
    	let { OLSKNarrowDispatchFilter } = $$props;
    	let { OLSKNarrowDispatchSubmit = null } = $$props;
    	let { OLSKMobileViewInactive = false } = $$props;
    	let { OLSKNarrowClass = '' } = $$props;
    	let { OLSKNarrowFilterFieldClass = '' } = $$props;
    	let { OLSKNarrowFilterFieldPlaceholderText = '' } = $$props;
    	let { OLSKNarrowFilterFieldClearButton = true } = $$props;
    	let { OLSKNarrowFilterFieldAutofocus = false } = $$props;
    	const modPublic = {};

    	const mod = {
    		// VALUE
    		_ValueFilterFieldFocused: false,
    		// DATA
    		DataIsFocused() {
    			return document.activeElement === document.querySelector('.OLSKNarrowFilterField');
    		},
    		DataIsMobile() {
    			return window.innerWidth <= 760;
    		},
    		// INTERFACE
    		InterfaceFilterFieldDidInput(event) {
    			OLSKNarrowDispatchFilter(this.value);
    		},
    		InterfaceFormDidSubmit(event) {
    			event.preventDefault();
    			OLSKNarrowDispatchSubmit && OLSKNarrowDispatchSubmit();
    		},
    		// MESSAGE
    		OLSKInputWrapperDispatchClear() {
    			OLSKNarrowDispatchFilter('');
    		},
    		// SETUP
    		SetupEverything() {
    			mod.SetupFilterFieldEventListeners();
    		},
    		SetupFilterFieldEventListeners() {
    			document.querySelector('.OLSKNarrowFilterField').addEventListener('focus', function () {
    				$$invalidate(19, mod._ValueFilterFieldFocused = true, mod);
    			});

    			document.querySelector('.OLSKNarrowFilterField').addEventListener('blur', function () {
    				$$invalidate(19, mod._ValueFilterFieldFocused = false, mod);
    			});
    		},
    		// LIFECYCLE
    		LifecycleComponentDidMount() {
    			mod.SetupEverything();
    		},
    		LifecycleComponentDidUpdate() {
    			if (main_1$1()) {
    				return;
    			}

    			if (mod.DataIsMobile()) {
    				return;
    			}

    			const element = document.querySelector('.OLSKCollectionItemLocus');

    			if (!element) {
    				return;
    			}

    			element.scrollIntoView({ block: 'nearest', inline: 'nearest' });
    		}
    	};

    	onMount(mod.LifecycleComponentDidMount);
    	afterUpdate(mod.LifecycleComponentDidUpdate);

    	$$self.$$.on_mount.push(function () {
    		if (OLSKCollectionSortFunction === undefined && !('OLSKCollectionSortFunction' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionSortFunction']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionSortFunction'");
    		}

    		if (_OLSKCollectionDispatchKey === undefined && !('_OLSKCollectionDispatchKey' in $$props || $$self.$$.bound[$$self.$$.props['_OLSKCollectionDispatchKey']])) {
    			console.warn("<Main> was created without expected prop '_OLSKCollectionDispatchKey'");
    		}

    		if (OLSKNarrowFilterText === undefined && !('OLSKNarrowFilterText' in $$props || $$self.$$.bound[$$self.$$.props['OLSKNarrowFilterText']])) {
    			console.warn("<Main> was created without expected prop 'OLSKNarrowFilterText'");
    		}

    		if (OLSKCollectionItems === undefined && !('OLSKCollectionItems' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionItems']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionItems'");
    		}

    		if (OLSKCollectionItemAccessibilitySummaryFunction === undefined && !('OLSKCollectionItemAccessibilitySummaryFunction' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionItemAccessibilitySummaryFunction']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionItemAccessibilitySummaryFunction'");
    		}

    		if (OLSKCollectionDispatchClick === undefined && !('OLSKCollectionDispatchClick' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionDispatchClick']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionDispatchClick'");
    		}

    		if (OLSKCollectionDispatchArrow === undefined && !('OLSKCollectionDispatchArrow' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionDispatchArrow']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionDispatchArrow'");
    		}

    		if (OLSKNarrowDispatchFilter === undefined && !('OLSKNarrowDispatchFilter' in $$props || $$self.$$.bound[$$self.$$.props['OLSKNarrowDispatchFilter']])) {
    			console.warn("<Main> was created without expected prop 'OLSKNarrowDispatchFilter'");
    		}
    	});

    	const writable_props = [
    		'OLSKCollectionSortFunction',
    		'_OLSKCollectionDispatchKey',
    		'OLSKCollectionChunkFunction',
    		'OLSKCollectionChunkKeySortFunction',
    		'OLSKCollectionItemClass',
    		'OLSKNarrowFilterText',
    		'OLSKCollectionItems',
    		'OLSKCollectionItemsLocus',
    		'OLSKCollectionItemAccessibilitySummaryFunction',
    		'OLSKCollectionDispatchClick',
    		'OLSKCollectionDispatchArrow',
    		'OLSKCollectionDispatchStash',
    		'OLSKNarrowDispatchFilter',
    		'OLSKNarrowDispatchSubmit',
    		'OLSKMobileViewInactive',
    		'OLSKNarrowClass',
    		'OLSKNarrowFilterFieldClass',
    		'OLSKNarrowFilterFieldPlaceholderText',
    		'OLSKNarrowFilterFieldClearButton',
    		'OLSKNarrowFilterFieldAutofocus'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function input_input_handler() {
    		OLSKNarrowFilterText = this.value;
    		$$invalidate(0, OLSKNarrowFilterText);
    	}

    	function input_input_handler_1() {
    		OLSKNarrowFilterText = this.value;
    		$$invalidate(0, OLSKNarrowFilterText);
    	}

    	function olskcollection_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			modPublic._OLSKCollection = $$value;
    			$$invalidate(1, modPublic);
    		});
    	}

    	$$self.$$set = $$props => {
    		if ('OLSKCollectionSortFunction' in $$props) $$invalidate(2, OLSKCollectionSortFunction = $$props.OLSKCollectionSortFunction);
    		if ('_OLSKCollectionDispatchKey' in $$props) $$invalidate(3, _OLSKCollectionDispatchKey = $$props._OLSKCollectionDispatchKey);
    		if ('OLSKCollectionChunkFunction' in $$props) $$invalidate(4, OLSKCollectionChunkFunction = $$props.OLSKCollectionChunkFunction);
    		if ('OLSKCollectionChunkKeySortFunction' in $$props) $$invalidate(5, OLSKCollectionChunkKeySortFunction = $$props.OLSKCollectionChunkKeySortFunction);
    		if ('OLSKCollectionItemClass' in $$props) $$invalidate(6, OLSKCollectionItemClass = $$props.OLSKCollectionItemClass);
    		if ('OLSKNarrowFilterText' in $$props) $$invalidate(0, OLSKNarrowFilterText = $$props.OLSKNarrowFilterText);
    		if ('OLSKCollectionItems' in $$props) $$invalidate(7, OLSKCollectionItems = $$props.OLSKCollectionItems);
    		if ('OLSKCollectionItemsLocus' in $$props) $$invalidate(8, OLSKCollectionItemsLocus = $$props.OLSKCollectionItemsLocus);
    		if ('OLSKCollectionItemAccessibilitySummaryFunction' in $$props) $$invalidate(9, OLSKCollectionItemAccessibilitySummaryFunction = $$props.OLSKCollectionItemAccessibilitySummaryFunction);
    		if ('OLSKCollectionDispatchClick' in $$props) $$invalidate(10, OLSKCollectionDispatchClick = $$props.OLSKCollectionDispatchClick);
    		if ('OLSKCollectionDispatchArrow' in $$props) $$invalidate(11, OLSKCollectionDispatchArrow = $$props.OLSKCollectionDispatchArrow);
    		if ('OLSKCollectionDispatchStash' in $$props) $$invalidate(12, OLSKCollectionDispatchStash = $$props.OLSKCollectionDispatchStash);
    		if ('OLSKNarrowDispatchFilter' in $$props) $$invalidate(21, OLSKNarrowDispatchFilter = $$props.OLSKNarrowDispatchFilter);
    		if ('OLSKNarrowDispatchSubmit' in $$props) $$invalidate(22, OLSKNarrowDispatchSubmit = $$props.OLSKNarrowDispatchSubmit);
    		if ('OLSKMobileViewInactive' in $$props) $$invalidate(13, OLSKMobileViewInactive = $$props.OLSKMobileViewInactive);
    		if ('OLSKNarrowClass' in $$props) $$invalidate(14, OLSKNarrowClass = $$props.OLSKNarrowClass);
    		if ('OLSKNarrowFilterFieldClass' in $$props) $$invalidate(15, OLSKNarrowFilterFieldClass = $$props.OLSKNarrowFilterFieldClass);
    		if ('OLSKNarrowFilterFieldPlaceholderText' in $$props) $$invalidate(16, OLSKNarrowFilterFieldPlaceholderText = $$props.OLSKNarrowFilterFieldPlaceholderText);
    		if ('OLSKNarrowFilterFieldClearButton' in $$props) $$invalidate(17, OLSKNarrowFilterFieldClearButton = $$props.OLSKNarrowFilterFieldClearButton);
    		if ('OLSKNarrowFilterFieldAutofocus' in $$props) $$invalidate(18, OLSKNarrowFilterFieldAutofocus = $$props.OLSKNarrowFilterFieldAutofocus);
    		if ('$$scope' in $$props) $$invalidate(27, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		OLSKCollectionSortFunction,
    		_OLSKCollectionDispatchKey,
    		OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction,
    		OLSKCollectionItemClass,
    		OLSKNarrowFilterText,
    		OLSKCollectionItems,
    		OLSKCollectionItemsLocus,
    		OLSKCollectionItemAccessibilitySummaryFunction,
    		OLSKCollectionDispatchClick,
    		OLSKCollectionDispatchArrow,
    		OLSKCollectionDispatchStash,
    		OLSKNarrowDispatchFilter,
    		OLSKNarrowDispatchSubmit,
    		OLSKMobileViewInactive,
    		OLSKNarrowClass,
    		OLSKNarrowFilterFieldClass,
    		OLSKNarrowFilterFieldPlaceholderText,
    		OLSKNarrowFilterFieldClearButton,
    		OLSKNarrowFilterFieldAutofocus,
    		OLSKLocalized: main_1,
    		OLSK_SPEC_UI: main_1$1,
    		modPublic,
    		mod,
    		onMount,
    		afterUpdate,
    		OLSKInputWrapper: Main,
    		OLSKCollection: Main$1
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKCollectionSortFunction' in $$props) $$invalidate(2, OLSKCollectionSortFunction = $$props.OLSKCollectionSortFunction);
    		if ('_OLSKCollectionDispatchKey' in $$props) $$invalidate(3, _OLSKCollectionDispatchKey = $$props._OLSKCollectionDispatchKey);
    		if ('OLSKCollectionChunkFunction' in $$props) $$invalidate(4, OLSKCollectionChunkFunction = $$props.OLSKCollectionChunkFunction);
    		if ('OLSKCollectionChunkKeySortFunction' in $$props) $$invalidate(5, OLSKCollectionChunkKeySortFunction = $$props.OLSKCollectionChunkKeySortFunction);
    		if ('OLSKCollectionItemClass' in $$props) $$invalidate(6, OLSKCollectionItemClass = $$props.OLSKCollectionItemClass);
    		if ('OLSKNarrowFilterText' in $$props) $$invalidate(0, OLSKNarrowFilterText = $$props.OLSKNarrowFilterText);
    		if ('OLSKCollectionItems' in $$props) $$invalidate(7, OLSKCollectionItems = $$props.OLSKCollectionItems);
    		if ('OLSKCollectionItemsLocus' in $$props) $$invalidate(8, OLSKCollectionItemsLocus = $$props.OLSKCollectionItemsLocus);
    		if ('OLSKCollectionItemAccessibilitySummaryFunction' in $$props) $$invalidate(9, OLSKCollectionItemAccessibilitySummaryFunction = $$props.OLSKCollectionItemAccessibilitySummaryFunction);
    		if ('OLSKCollectionDispatchClick' in $$props) $$invalidate(10, OLSKCollectionDispatchClick = $$props.OLSKCollectionDispatchClick);
    		if ('OLSKCollectionDispatchArrow' in $$props) $$invalidate(11, OLSKCollectionDispatchArrow = $$props.OLSKCollectionDispatchArrow);
    		if ('OLSKCollectionDispatchStash' in $$props) $$invalidate(12, OLSKCollectionDispatchStash = $$props.OLSKCollectionDispatchStash);
    		if ('OLSKNarrowDispatchFilter' in $$props) $$invalidate(21, OLSKNarrowDispatchFilter = $$props.OLSKNarrowDispatchFilter);
    		if ('OLSKNarrowDispatchSubmit' in $$props) $$invalidate(22, OLSKNarrowDispatchSubmit = $$props.OLSKNarrowDispatchSubmit);
    		if ('OLSKMobileViewInactive' in $$props) $$invalidate(13, OLSKMobileViewInactive = $$props.OLSKMobileViewInactive);
    		if ('OLSKNarrowClass' in $$props) $$invalidate(14, OLSKNarrowClass = $$props.OLSKNarrowClass);
    		if ('OLSKNarrowFilterFieldClass' in $$props) $$invalidate(15, OLSKNarrowFilterFieldClass = $$props.OLSKNarrowFilterFieldClass);
    		if ('OLSKNarrowFilterFieldPlaceholderText' in $$props) $$invalidate(16, OLSKNarrowFilterFieldPlaceholderText = $$props.OLSKNarrowFilterFieldPlaceholderText);
    		if ('OLSKNarrowFilterFieldClearButton' in $$props) $$invalidate(17, OLSKNarrowFilterFieldClearButton = $$props.OLSKNarrowFilterFieldClearButton);
    		if ('OLSKNarrowFilterFieldAutofocus' in $$props) $$invalidate(18, OLSKNarrowFilterFieldAutofocus = $$props.OLSKNarrowFilterFieldAutofocus);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		OLSKNarrowFilterText,
    		modPublic,
    		OLSKCollectionSortFunction,
    		_OLSKCollectionDispatchKey,
    		OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction,
    		OLSKCollectionItemClass,
    		OLSKCollectionItems,
    		OLSKCollectionItemsLocus,
    		OLSKCollectionItemAccessibilitySummaryFunction,
    		OLSKCollectionDispatchClick,
    		OLSKCollectionDispatchArrow,
    		OLSKCollectionDispatchStash,
    		OLSKMobileViewInactive,
    		OLSKNarrowClass,
    		OLSKNarrowFilterFieldClass,
    		OLSKNarrowFilterFieldPlaceholderText,
    		OLSKNarrowFilterFieldClearButton,
    		OLSKNarrowFilterFieldAutofocus,
    		mod,
    		$$slots,
    		OLSKNarrowDispatchFilter,
    		OLSKNarrowDispatchSubmit,
    		slots,
    		input_input_handler,
    		input_input_handler_1,
    		olskcollection_binding,
    		$$scope
    	];
    }

    class Main$2 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$2, create_fragment$2, safe_not_equal, {
    			OLSKCollectionSortFunction: 2,
    			_OLSKCollectionDispatchKey: 3,
    			OLSKCollectionChunkFunction: 4,
    			OLSKCollectionChunkKeySortFunction: 5,
    			OLSKCollectionItemClass: 6,
    			OLSKNarrowFilterText: 0,
    			OLSKCollectionItems: 7,
    			OLSKCollectionItemsLocus: 8,
    			OLSKCollectionItemAccessibilitySummaryFunction: 9,
    			OLSKCollectionDispatchClick: 10,
    			OLSKCollectionDispatchArrow: 11,
    			OLSKCollectionDispatchStash: 12,
    			OLSKNarrowDispatchFilter: 21,
    			OLSKNarrowDispatchSubmit: 22,
    			OLSKMobileViewInactive: 13,
    			OLSKNarrowClass: 14,
    			OLSKNarrowFilterFieldClass: 15,
    			OLSKNarrowFilterFieldPlaceholderText: 16,
    			OLSKNarrowFilterFieldClearButton: 17,
    			OLSKNarrowFilterFieldAutofocus: 18,
    			modPublic: 1
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$2.name
    		});
    	}

    	get OLSKCollectionSortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionSortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get _OLSKCollectionDispatchKey() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set _OLSKCollectionDispatchKey(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionChunkFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionChunkFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionChunkKeySortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionChunkKeySortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItemClass() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemClass(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowFilterText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowFilterText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItemsLocus() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemsLocus(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItemAccessibilitySummaryFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemAccessibilitySummaryFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchClick() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchClick(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchArrow() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchArrow(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchStash() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchStash(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowDispatchFilter() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowDispatchFilter(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowDispatchSubmit() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowDispatchSubmit(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKMobileViewInactive() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKMobileViewInactive(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowClass() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowClass(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowFilterFieldClass() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowFilterFieldClass(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowFilterFieldPlaceholderText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowFilterFieldPlaceholderText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowFilterFieldClearButton() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowFilterFieldClearButton(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowFilterFieldAutofocus() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowFilterFieldAutofocus(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get modPublic() {
    		return this.$$.ctx[1];
    	}

    	set modPublic(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKPlaceholder/main.svelte generated by Svelte v3.54.0 */
    const file$3 = "node_modules/OLSKPlaceholder/main.svelte";

    function create_fragment$3(ctx) {
    	let div;
    	let raw_value = (/*OLSKPlaceholderHTML*/ ctx[0] || main_1('OLSKPlaceholderText')) + "";

    	const block = {
    		c: function create() {
    			div = element("div");
    			attr_dev(div, "class", "OLSKPlaceholder OLSKDecorTextVisual svelte-1fqi4c");
    			add_location(div, file$3, 6, 0, 109);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			div.innerHTML = raw_value;
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*OLSKPlaceholderHTML*/ 1 && raw_value !== (raw_value = (/*OLSKPlaceholderHTML*/ ctx[0] || main_1('OLSKPlaceholderText')) + "")) div.innerHTML = raw_value;		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$3.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$3($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKPlaceholderHTML = '' } = $$props;
    	const writable_props = ['OLSKPlaceholderHTML'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('OLSKPlaceholderHTML' in $$props) $$invalidate(0, OLSKPlaceholderHTML = $$props.OLSKPlaceholderHTML);
    	};

    	$$self.$capture_state = () => ({ OLSKPlaceholderHTML, OLSKLocalized: main_1 });

    	$$self.$inject_state = $$props => {
    		if ('OLSKPlaceholderHTML' in $$props) $$invalidate(0, OLSKPlaceholderHTML = $$props.OLSKPlaceholderHTML);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [OLSKPlaceholderHTML];
    }

    class Main$3 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$3, create_fragment$3, safe_not_equal, { OLSKPlaceholderHTML: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$3.name
    		});
    	}

    	get OLSKPlaceholderHTML() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKPlaceholderHTML(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKCatalog/main.svelte generated by Svelte v3.54.0 */

    const { window: window_1 } = globals;
    const file$4 = "node_modules/OLSKCatalog/main.svelte";

    const get_OLSKCatalogDetailContent_slot_changes = dirty => ({
    	OLSKCatalogItemSelected: dirty & /*mod*/ 1024
    });

    const get_OLSKCatalogDetailContent_slot_context = ctx => ({
    	OLSKCatalogItemSelected: /*mod*/ ctx[10]._ValueItemSelected
    });

    const get_OLSKNarrowToolbarHead_slot_changes$1 = dirty => ({});
    const get_OLSKNarrowToolbarHead_slot_context$1 = ctx => ({});
    const get_OLSKNarrowToolbarTail_slot_changes$1 = dirty => ({});
    const get_OLSKNarrowToolbarTail_slot_context$1 = ctx => ({});

    const get_OLSKCollectionItem_slot_changes$2 = dirty => ({
    	OLSKCollectionItem: dirty & /*e*/ 1073741824
    });

    const get_OLSKCollectionItem_slot_context$2 = ctx => ({ OLSKCollectionItem: /*e*/ ctx[30] });
    const get_OLSKNarrowBodyTail_slot_changes$1 = dirty => ({});
    const get_OLSKNarrowBodyTail_slot_context$1 = ctx => ({});

    // (429:0) <OLSKNarrow  bind:this={ modPublic._OLSKNarrow }  OLSKCollectionSortFunction={ OLSKCatalogSortFunction }  _OLSKCollectionDispatchKey={ _OLSKCatalogDispatchKey }  OLSKCollectionChunkFunction={ OLSKCollectionChunkFunction }  OLSKCollectionChunkKeySortFunction={ OLSKCollectionChunkKeySortFunction }  OLSKCollectionItemClass={ OLSKCollectionItemClass }    OLSKCollectionItems={ mod._ValueItemsVisible }  OLSKCollectionItemsLocus={ mod._ValueItemSelected }   OLSKNarrowFilterText={ mod._ValueFilterText }  OLSKNarrowFilterFieldPlaceholderText={ OLSKNarrowFilterFieldPlaceholderText }   OLSKCollectionDispatchClick={ OLSKCollectionDispatchClick }  OLSKCollectionDispatchArrow={ OLSKCollectionDispatchArrow }  OLSKCollectionDispatchStash={ mod.OLSKCollectionDispatchStash }  OLSKNarrowDispatchFilter={ mod.OLSKNarrowDispatchFilter }  OLSKNarrowDispatchSubmit={ mod.OLSKNarrowDispatchSubmit }   let:OLSKCollectionItem={ e }   OLSKCollectionItemAccessibilitySummaryFunction={ OLSKCollectionItemAccessibilitySummaryFunction }    OLSKMobileViewInactive={ mod.OLSKMobileViewInactive }  >
    function create_default_slot$1(ctx) {
    	let current;
    	const default_slot_template = /*#slots*/ ctx[26].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[29], null);

    	const block = {
    		c: function create() {
    			if (default_slot) default_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (default_slot) {
    				default_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 536870912)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[29],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[29])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[29], dirty, null),
    						null
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$1.name,
    		type: "slot",
    		source: "(429:0) <OLSKNarrow  bind:this={ modPublic._OLSKNarrow }  OLSKCollectionSortFunction={ OLSKCatalogSortFunction }  _OLSKCollectionDispatchKey={ _OLSKCatalogDispatchKey }  OLSKCollectionChunkFunction={ OLSKCollectionChunkFunction }  OLSKCollectionChunkKeySortFunction={ OLSKCollectionChunkKeySortFunction }  OLSKCollectionItemClass={ OLSKCollectionItemClass }    OLSKCollectionItems={ mod._ValueItemsVisible }  OLSKCollectionItemsLocus={ mod._ValueItemSelected }   OLSKNarrowFilterText={ mod._ValueFilterText }  OLSKNarrowFilterFieldPlaceholderText={ OLSKNarrowFilterFieldPlaceholderText }   OLSKCollectionDispatchClick={ OLSKCollectionDispatchClick }  OLSKCollectionDispatchArrow={ OLSKCollectionDispatchArrow }  OLSKCollectionDispatchStash={ mod.OLSKCollectionDispatchStash }  OLSKNarrowDispatchFilter={ mod.OLSKNarrowDispatchFilter }  OLSKNarrowDispatchSubmit={ mod.OLSKNarrowDispatchSubmit }   let:OLSKCollectionItem={ e }   OLSKCollectionItemAccessibilitySummaryFunction={ OLSKCollectionItemAccessibilitySummaryFunction }    OLSKMobileViewInactive={ mod.OLSKMobileViewInactive }  >",
    		ctx
    	});

    	return block;
    }

    // (456:2) {#if $$slots.OLSKNarrowToolbarHead}
    function create_if_block_7(ctx) {
    	let current;
    	const OLSKNarrowToolbarHead_slot_template = /*#slots*/ ctx[26].OLSKNarrowToolbarHead;
    	const OLSKNarrowToolbarHead_slot = create_slot(OLSKNarrowToolbarHead_slot_template, ctx, /*$$scope*/ ctx[29], get_OLSKNarrowToolbarHead_slot_context$1);

    	const block = {
    		c: function create() {
    			if (OLSKNarrowToolbarHead_slot) OLSKNarrowToolbarHead_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKNarrowToolbarHead_slot) {
    				OLSKNarrowToolbarHead_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKNarrowToolbarHead_slot) {
    				if (OLSKNarrowToolbarHead_slot.p && (!current || dirty & /*$$scope*/ 536870912)) {
    					update_slot_base(
    						OLSKNarrowToolbarHead_slot,
    						OLSKNarrowToolbarHead_slot_template,
    						ctx,
    						/*$$scope*/ ctx[29],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[29])
    						: get_slot_changes(OLSKNarrowToolbarHead_slot_template, /*$$scope*/ ctx[29], dirty, get_OLSKNarrowToolbarHead_slot_changes$1),
    						get_OLSKNarrowToolbarHead_slot_context$1
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKNarrowToolbarHead_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKNarrowToolbarHead_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKNarrowToolbarHead_slot) OLSKNarrowToolbarHead_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_7.name,
    		type: "if",
    		source: "(456:2) {#if $$slots.OLSKNarrowToolbarHead}",
    		ctx
    	});

    	return block;
    }

    // (455:1) 
    function create_OLSKNarrowToolbarHead_slot(ctx) {
    	let div;
    	let current;
    	let if_block = /*$$slots*/ ctx[11].OLSKNarrowToolbarHead && create_if_block_7(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKNarrowToolbarHead");
    			add_location(div, file$4, 454, 1, 11187);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[11].OLSKNarrowToolbarHead) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 2048) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_7(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKNarrowToolbarHead_slot.name,
    		type: "slot",
    		source: "(455:1) ",
    		ctx
    	});

    	return block;
    }

    // (466:42) 
    function create_if_block_6(ctx) {
    	let current;
    	const OLSKNarrowToolbarTail_slot_template = /*#slots*/ ctx[26].OLSKNarrowToolbarTail;
    	const OLSKNarrowToolbarTail_slot = create_slot(OLSKNarrowToolbarTail_slot_template, ctx, /*$$scope*/ ctx[29], get_OLSKNarrowToolbarTail_slot_context$1);

    	const block = {
    		c: function create() {
    			if (OLSKNarrowToolbarTail_slot) OLSKNarrowToolbarTail_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKNarrowToolbarTail_slot) {
    				OLSKNarrowToolbarTail_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKNarrowToolbarTail_slot) {
    				if (OLSKNarrowToolbarTail_slot.p && (!current || dirty & /*$$scope*/ 536870912)) {
    					update_slot_base(
    						OLSKNarrowToolbarTail_slot,
    						OLSKNarrowToolbarTail_slot_template,
    						ctx,
    						/*$$scope*/ ctx[29],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[29])
    						: get_slot_changes(OLSKNarrowToolbarTail_slot_template, /*$$scope*/ ctx[29], dirty, get_OLSKNarrowToolbarTail_slot_changes$1),
    						get_OLSKNarrowToolbarTail_slot_context$1
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKNarrowToolbarTail_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKNarrowToolbarTail_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKNarrowToolbarTail_slot) OLSKNarrowToolbarTail_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_6.name,
    		type: "if",
    		source: "(466:42) ",
    		ctx
    	});

    	return block;
    }

    // (462:2) {#if mod._ValueStashEnabled }
    function create_if_block_5(ctx) {
    	let div;
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div = element("div");
    			button = element("button");
    			button.textContent = "OK";
    			attr_dev(button, "class", "OLSKCatalogStashDoneButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton svelte-14fqf3h");
    			add_location(button, file$4, 463, 4, 11437);
    			attr_dev(div, "class", "OLSKToolbarElementGroup");
    			add_location(div, file$4, 462, 3, 11395);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, button);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*mod*/ ctx[10].InterfaceStashDoneButtonDidClick)) /*mod*/ ctx[10].InterfaceStashDoneButtonDidClick.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_5.name,
    		type: "if",
    		source: "(462:2) {#if mod._ValueStashEnabled }",
    		ctx
    	});

    	return block;
    }

    // (461:1) 
    function create_OLSKNarrowToolbarTail_slot(ctx) {
    	let div;
    	let current_block_type_index;
    	let if_block;
    	let current;
    	const if_block_creators = [create_if_block_5, create_if_block_6];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*mod*/ ctx[10]._ValueStashEnabled) return 0;
    		if (/*$$slots*/ ctx[11].OLSKNarrowToolbarTail) return 1;
    		return -1;
    	}

    	if (~(current_block_type_index = select_block_type(ctx))) {
    		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    	}

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKNarrowToolbarTail");
    			add_location(div, file$4, 460, 1, 11325);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (~current_block_type_index) {
    				if_blocks[current_block_type_index].m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if (~current_block_type_index) {
    					if_blocks[current_block_type_index].p(ctx, dirty);
    				}
    			} else {
    				if (if_block) {
    					group_outros();

    					transition_out(if_blocks[previous_block_index], 1, 1, () => {
    						if_blocks[previous_block_index] = null;
    					});

    					check_outros();
    				}

    				if (~current_block_type_index) {
    					if_block = if_blocks[current_block_type_index];

    					if (!if_block) {
    						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    						if_block.c();
    					} else {
    						if_block.p(ctx, dirty);
    					}

    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				} else {
    					if_block = null;
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);

    			if (~current_block_type_index) {
    				if_blocks[current_block_type_index].d();
    			}
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKNarrowToolbarTail_slot.name,
    		type: "slot",
    		source: "(461:1) ",
    		ctx
    	});

    	return block;
    }

    // (474:2) {#if $$slots.OLSKCollectionItem}
    function create_if_block_4(ctx) {
    	let current;
    	const OLSKCollectionItem_slot_template = /*#slots*/ ctx[26].OLSKCollectionItem;
    	const OLSKCollectionItem_slot = create_slot(OLSKCollectionItem_slot_template, ctx, /*$$scope*/ ctx[29], get_OLSKCollectionItem_slot_context$2);

    	const block = {
    		c: function create() {
    			if (OLSKCollectionItem_slot) OLSKCollectionItem_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKCollectionItem_slot) {
    				OLSKCollectionItem_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKCollectionItem_slot) {
    				if (OLSKCollectionItem_slot.p && (!current || dirty & /*$$scope, e*/ 1610612736)) {
    					update_slot_base(
    						OLSKCollectionItem_slot,
    						OLSKCollectionItem_slot_template,
    						ctx,
    						/*$$scope*/ ctx[29],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[29])
    						: get_slot_changes(OLSKCollectionItem_slot_template, /*$$scope*/ ctx[29], dirty, get_OLSKCollectionItem_slot_changes$2),
    						get_OLSKCollectionItem_slot_context$2
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKCollectionItem_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKCollectionItem_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKCollectionItem_slot) OLSKCollectionItem_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_4.name,
    		type: "if",
    		source: "(474:2) {#if $$slots.OLSKCollectionItem}",
    		ctx
    	});

    	return block;
    }

    // (473:1) 
    function create_OLSKCollectionItem_slot$1(ctx) {
    	let div;
    	let current;
    	let if_block = /*$$slots*/ ctx[11].OLSKCollectionItem && create_if_block_4(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKCollectionItem");
    			add_location(div, file$4, 472, 1, 11735);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[11].OLSKCollectionItem) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 2048) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_4(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKCollectionItem_slot$1.name,
    		type: "slot",
    		source: "(473:1) ",
    		ctx
    	});

    	return block;
    }

    // (479:1) 
    function create_OLSKCollectionEmpty_slot$1(ctx) {
    	let div;
    	let olskplaceholder;
    	let current;

    	olskplaceholder = new Main$3({
    			props: {
    				OLSKPlaceholderHTML: main_1('OLSKCatalogMasterPlaceholderText')
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div = element("div");
    			create_component(olskplaceholder.$$.fragment);
    			attr_dev(div, "slot", "OLSKCollectionEmpty");
    			add_location(div, file$4, 478, 1, 11889);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			mount_component(olskplaceholder, div, null);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskplaceholder.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskplaceholder.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_component(olskplaceholder);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKCollectionEmpty_slot$1.name,
    		type: "slot",
    		source: "(479:1) ",
    		ctx
    	});

    	return block;
    }

    // (484:2) {#if $$slots.OLSKNarrowBodyTail}
    function create_if_block_3(ctx) {
    	let current;
    	const OLSKNarrowBodyTail_slot_template = /*#slots*/ ctx[26].OLSKNarrowBodyTail;
    	const OLSKNarrowBodyTail_slot = create_slot(OLSKNarrowBodyTail_slot_template, ctx, /*$$scope*/ ctx[29], get_OLSKNarrowBodyTail_slot_context$1);

    	const block = {
    		c: function create() {
    			if (OLSKNarrowBodyTail_slot) OLSKNarrowBodyTail_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKNarrowBodyTail_slot) {
    				OLSKNarrowBodyTail_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKNarrowBodyTail_slot) {
    				if (OLSKNarrowBodyTail_slot.p && (!current || dirty & /*$$scope*/ 536870912)) {
    					update_slot_base(
    						OLSKNarrowBodyTail_slot,
    						OLSKNarrowBodyTail_slot_template,
    						ctx,
    						/*$$scope*/ ctx[29],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[29])
    						: get_slot_changes(OLSKNarrowBodyTail_slot_template, /*$$scope*/ ctx[29], dirty, get_OLSKNarrowBodyTail_slot_changes$1),
    						get_OLSKNarrowBodyTail_slot_context$1
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKNarrowBodyTail_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKNarrowBodyTail_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKNarrowBodyTail_slot) OLSKNarrowBodyTail_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3.name,
    		type: "if",
    		source: "(484:2) {#if $$slots.OLSKNarrowBodyTail}",
    		ctx
    	});

    	return block;
    }

    // (483:1) 
    function create_OLSKNarrowBodyTail_slot(ctx) {
    	let div;
    	let current;
    	let if_block = /*$$slots*/ ctx[11].OLSKNarrowBodyTail && create_if_block_3(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKNarrowBodyTail");
    			add_location(div, file$4, 482, 1, 12028);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[11].OLSKNarrowBodyTail) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 2048) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_3(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKNarrowBodyTail_slot.name,
    		type: "slot",
    		source: "(483:1) ",
    		ctx
    	});

    	return block;
    }

    // (491:1) {#if !mod._ValueItemSelected }
    function create_if_block_2$2(ctx) {
    	let olskplaceholder;
    	let current;

    	olskplaceholder = new Main$3({
    			props: {
    				OLSKPlaceholderHTML: !/*mod*/ ctx[10]._ValueStashEnabled
    				? ''
    				: main_1$2(main_1('OLSKCatalogStashPlaceholderTextFormat'), /*mod*/ ctx[10]._ValueStashCount)
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(olskplaceholder.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskplaceholder, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskplaceholder_changes = {};

    			if (dirty & /*mod*/ 1024) olskplaceholder_changes.OLSKPlaceholderHTML = !/*mod*/ ctx[10]._ValueStashEnabled
    			? ''
    			: main_1$2(main_1('OLSKCatalogStashPlaceholderTextFormat'), /*mod*/ ctx[10]._ValueStashCount);

    			olskplaceholder.$set(olskplaceholder_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskplaceholder.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskplaceholder.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olskplaceholder, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$2.name,
    		type: "if",
    		source: "(491:1) {#if !mod._ValueItemSelected }",
    		ctx
    	});

    	return block;
    }

    // (495:1) {#if mod._ValueItemSelected }
    function create_if_block$3(ctx) {
    	let if_block_anchor;
    	let current;
    	let if_block = /*$$slots*/ ctx[11].OLSKCatalogDetailContent && create_if_block_1$2(ctx);

    	const block = {
    		c: function create() {
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[11].OLSKCatalogDetailContent) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 2048) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_1$2(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$3.name,
    		type: "if",
    		source: "(495:1) {#if mod._ValueItemSelected }",
    		ctx
    	});

    	return block;
    }

    // (496:2) {#if $$slots.OLSKCatalogDetailContent }
    function create_if_block_1$2(ctx) {
    	let div;
    	let mod_LifecycleDetailDidCreate_action;
    	let t;
    	let current;
    	let mounted;
    	let dispose;
    	const OLSKCatalogDetailContent_slot_template = /*#slots*/ ctx[26].OLSKCatalogDetailContent;
    	const OLSKCatalogDetailContent_slot = create_slot(OLSKCatalogDetailContent_slot_template, ctx, /*$$scope*/ ctx[29], get_OLSKCatalogDetailContent_slot_context);

    	const block = {
    		c: function create() {
    			div = element("div");
    			t = space();
    			if (OLSKCatalogDetailContent_slot) OLSKCatalogDetailContent_slot.c();
    			set_style(div, "display", "none");
    			add_location(div, file$4, 496, 3, 12625);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			/*div_binding*/ ctx[28](div);
    			insert_dev(target, t, anchor);

    			if (OLSKCatalogDetailContent_slot) {
    				OLSKCatalogDetailContent_slot.m(target, anchor);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = action_destroyer(mod_LifecycleDetailDidCreate_action = /*mod*/ ctx[10].LifecycleDetailDidCreate(div));
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKCatalogDetailContent_slot) {
    				if (OLSKCatalogDetailContent_slot.p && (!current || dirty & /*$$scope, mod*/ 536871936)) {
    					update_slot_base(
    						OLSKCatalogDetailContent_slot,
    						OLSKCatalogDetailContent_slot_template,
    						ctx,
    						/*$$scope*/ ctx[29],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[29])
    						: get_slot_changes(OLSKCatalogDetailContent_slot_template, /*$$scope*/ ctx[29], dirty, get_OLSKCatalogDetailContent_slot_changes),
    						get_OLSKCatalogDetailContent_slot_context
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKCatalogDetailContent_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKCatalogDetailContent_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*div_binding*/ ctx[28](null);
    			if (detaching) detach_dev(t);
    			if (OLSKCatalogDetailContent_slot) OLSKCatalogDetailContent_slot.d(detaching);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$2.name,
    		type: "if",
    		source: "(496:2) {#if $$slots.OLSKCatalogDetailContent }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$4(ctx) {
    	let div1;
    	let olsknarrow;
    	let t0;
    	let div0;
    	let t1;
    	let div0_aria_hidden_value;
    	let current;
    	let mounted;
    	let dispose;

    	let olsknarrow_props = {
    		OLSKCollectionSortFunction: /*OLSKCatalogSortFunction*/ ctx[4],
    		_OLSKCollectionDispatchKey: /*_OLSKCatalogDispatchKey*/ ctx[5],
    		OLSKCollectionChunkFunction: /*OLSKCollectionChunkFunction*/ ctx[6],
    		OLSKCollectionChunkKeySortFunction: /*OLSKCollectionChunkKeySortFunction*/ ctx[7],
    		OLSKCollectionItemClass: /*OLSKCollectionItemClass*/ ctx[2],
    		OLSKCollectionItems: /*mod*/ ctx[10]._ValueItemsVisible,
    		OLSKCollectionItemsLocus: /*mod*/ ctx[10]._ValueItemSelected,
    		OLSKNarrowFilterText: /*mod*/ ctx[10]._ValueFilterText,
    		OLSKNarrowFilterFieldPlaceholderText: /*OLSKNarrowFilterFieldPlaceholderText*/ ctx[3],
    		OLSKCollectionDispatchClick: /*OLSKCollectionDispatchClick*/ ctx[8],
    		OLSKCollectionDispatchArrow: /*OLSKCollectionDispatchArrow*/ ctx[9],
    		OLSKCollectionDispatchStash: /*mod*/ ctx[10].OLSKCollectionDispatchStash,
    		OLSKNarrowDispatchFilter: /*mod*/ ctx[10].OLSKNarrowDispatchFilter,
    		OLSKNarrowDispatchSubmit: /*mod*/ ctx[10].OLSKNarrowDispatchSubmit,
    		OLSKCollectionItemAccessibilitySummaryFunction: /*OLSKCollectionItemAccessibilitySummaryFunction*/ ctx[1],
    		OLSKMobileViewInactive: /*mod*/ ctx[10].OLSKMobileViewInactive,
    		$$slots: {
    			OLSKNarrowBodyTail: [
    				create_OLSKNarrowBodyTail_slot,
    				({ OLSKCollectionItem: e }) => ({ 30: e }),
    				({ OLSKCollectionItem: e }) => e ? 1073741824 : 0
    			],
    			OLSKCollectionEmpty: [
    				create_OLSKCollectionEmpty_slot$1,
    				({ OLSKCollectionItem: e }) => ({ 30: e }),
    				({ OLSKCollectionItem: e }) => e ? 1073741824 : 0
    			],
    			OLSKCollectionItem: [
    				create_OLSKCollectionItem_slot$1,
    				({ OLSKCollectionItem: e }) => ({ 30: e }),
    				({ OLSKCollectionItem: e }) => e ? 1073741824 : 0
    			],
    			OLSKNarrowToolbarTail: [
    				create_OLSKNarrowToolbarTail_slot,
    				({ OLSKCollectionItem: e }) => ({ 30: e }),
    				({ OLSKCollectionItem: e }) => e ? 1073741824 : 0
    			],
    			OLSKNarrowToolbarHead: [
    				create_OLSKNarrowToolbarHead_slot,
    				({ OLSKCollectionItem: e }) => ({ 30: e }),
    				({ OLSKCollectionItem: e }) => e ? 1073741824 : 0
    			],
    			default: [
    				create_default_slot$1,
    				({ OLSKCollectionItem: e }) => ({ 30: e }),
    				({ OLSKCollectionItem: e }) => e ? 1073741824 : 0
    			]
    		},
    		$$scope: { ctx }
    	};

    	olsknarrow = new Main$2({ props: olsknarrow_props, $$inline: true });
    	/*olsknarrow_binding*/ ctx[27](olsknarrow);
    	let if_block0 = !/*mod*/ ctx[10]._ValueItemSelected && create_if_block_2$2(ctx);
    	let if_block1 = /*mod*/ ctx[10]._ValueItemSelected && create_if_block$3(ctx);

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			create_component(olsknarrow.$$.fragment);
    			t0 = space();
    			div0 = element("div");
    			if (if_block0) if_block0.c();
    			t1 = space();
    			if (if_block1) if_block1.c();
    			attr_dev(div0, "class", "OLSKCatalogDetail OLSKViewportDetail svelte-14fqf3h");
    			attr_dev(div0, "aria-hidden", div0_aria_hidden_value = !/*mod*/ ctx[10].OLSKMobileViewInactive ? true : null);
    			toggle_class(div0, "OLSKMobileViewInactive", !/*mod*/ ctx[10].OLSKMobileViewInactive);
    			add_location(div0, file$4, 489, 0, 12170);
    			attr_dev(div1, "class", "OLSKCatalog svelte-14fqf3h");
    			add_location(div1, file$4, 426, 0, 10082);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			mount_component(olsknarrow, div1, null);
    			append_dev(div1, t0);
    			append_dev(div1, div0);
    			if (if_block0) if_block0.m(div0, null);
    			append_dev(div0, t1);
    			if (if_block1) if_block1.m(div0, null);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(
    					window_1,
    					"keydown",
    					function () {
    						if (is_function(/*mod*/ ctx[10].InterfaceWindowDidKeydown)) /*mod*/ ctx[10].InterfaceWindowDidKeydown.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, [dirty]) {
    			ctx = new_ctx;
    			const olsknarrow_changes = {};
    			if (dirty & /*OLSKCatalogSortFunction*/ 16) olsknarrow_changes.OLSKCollectionSortFunction = /*OLSKCatalogSortFunction*/ ctx[4];
    			if (dirty & /*_OLSKCatalogDispatchKey*/ 32) olsknarrow_changes._OLSKCollectionDispatchKey = /*_OLSKCatalogDispatchKey*/ ctx[5];
    			if (dirty & /*OLSKCollectionChunkFunction*/ 64) olsknarrow_changes.OLSKCollectionChunkFunction = /*OLSKCollectionChunkFunction*/ ctx[6];
    			if (dirty & /*OLSKCollectionChunkKeySortFunction*/ 128) olsknarrow_changes.OLSKCollectionChunkKeySortFunction = /*OLSKCollectionChunkKeySortFunction*/ ctx[7];
    			if (dirty & /*OLSKCollectionItemClass*/ 4) olsknarrow_changes.OLSKCollectionItemClass = /*OLSKCollectionItemClass*/ ctx[2];
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKCollectionItems = /*mod*/ ctx[10]._ValueItemsVisible;
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKCollectionItemsLocus = /*mod*/ ctx[10]._ValueItemSelected;
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKNarrowFilterText = /*mod*/ ctx[10]._ValueFilterText;
    			if (dirty & /*OLSKNarrowFilterFieldPlaceholderText*/ 8) olsknarrow_changes.OLSKNarrowFilterFieldPlaceholderText = /*OLSKNarrowFilterFieldPlaceholderText*/ ctx[3];
    			if (dirty & /*OLSKCollectionDispatchClick*/ 256) olsknarrow_changes.OLSKCollectionDispatchClick = /*OLSKCollectionDispatchClick*/ ctx[8];
    			if (dirty & /*OLSKCollectionDispatchArrow*/ 512) olsknarrow_changes.OLSKCollectionDispatchArrow = /*OLSKCollectionDispatchArrow*/ ctx[9];
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKCollectionDispatchStash = /*mod*/ ctx[10].OLSKCollectionDispatchStash;
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKNarrowDispatchFilter = /*mod*/ ctx[10].OLSKNarrowDispatchFilter;
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKNarrowDispatchSubmit = /*mod*/ ctx[10].OLSKNarrowDispatchSubmit;
    			if (dirty & /*OLSKCollectionItemAccessibilitySummaryFunction*/ 2) olsknarrow_changes.OLSKCollectionItemAccessibilitySummaryFunction = /*OLSKCollectionItemAccessibilitySummaryFunction*/ ctx[1];
    			if (dirty & /*mod*/ 1024) olsknarrow_changes.OLSKMobileViewInactive = /*mod*/ ctx[10].OLSKMobileViewInactive;

    			if (dirty & /*$$scope, $$slots, e, mod*/ 1610615808) {
    				olsknarrow_changes.$$scope = { dirty, ctx };
    			}

    			olsknarrow.$set(olsknarrow_changes);

    			if (!/*mod*/ ctx[10]._ValueItemSelected) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);

    					if (dirty & /*mod*/ 1024) {
    						transition_in(if_block0, 1);
    					}
    				} else {
    					if_block0 = create_if_block_2$2(ctx);
    					if_block0.c();
    					transition_in(if_block0, 1);
    					if_block0.m(div0, t1);
    				}
    			} else if (if_block0) {
    				group_outros();

    				transition_out(if_block0, 1, 1, () => {
    					if_block0 = null;
    				});

    				check_outros();
    			}

    			if (/*mod*/ ctx[10]._ValueItemSelected) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);

    					if (dirty & /*mod*/ 1024) {
    						transition_in(if_block1, 1);
    					}
    				} else {
    					if_block1 = create_if_block$3(ctx);
    					if_block1.c();
    					transition_in(if_block1, 1);
    					if_block1.m(div0, null);
    				}
    			} else if (if_block1) {
    				group_outros();

    				transition_out(if_block1, 1, 1, () => {
    					if_block1 = null;
    				});

    				check_outros();
    			}

    			if (!current || dirty & /*mod*/ 1024 && div0_aria_hidden_value !== (div0_aria_hidden_value = !/*mod*/ ctx[10].OLSKMobileViewInactive ? true : null)) {
    				attr_dev(div0, "aria-hidden", div0_aria_hidden_value);
    			}

    			if (!current || dirty & /*mod*/ 1024) {
    				toggle_class(div0, "OLSKMobileViewInactive", !/*mod*/ ctx[10].OLSKMobileViewInactive);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olsknarrow.$$.fragment, local);
    			transition_in(if_block0);
    			transition_in(if_block1);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olsknarrow.$$.fragment, local);
    			transition_out(if_block0);
    			transition_out(if_block1);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			/*olsknarrow_binding*/ ctx[27](null);
    			destroy_component(olsknarrow);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$4.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$4($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;

    	validate_slots('Main', slots, [
    		'OLSKNarrowBodyTail','OLSKCollectionItem','OLSKNarrowToolbarTail','OLSKNarrowToolbarHead','default','OLSKCatalogDetailContent'
    	]);

    	const $$slots = compute_slots(slots);
    	let { OLSKCollectionItemAccessibilitySummaryFunction } = $$props;
    	let { OLSKCollectionItemClass = '' } = $$props;
    	let { OLSKNarrowFilterFieldPlaceholderText = '' } = $$props;
    	let { _OLSKCatalogArchiveField = null } = $$props;
    	let { OLSKCatalogSortFunction } = $$props;
    	let { OLSKCatalogIsMatch } = $$props;
    	let { OLSKCatalogExactSortFunction = null } = $$props;
    	let { _OLSKCatalogDispatchKey } = $$props;
    	let { OLSKCollectionChunkFunction = null } = $$props;
    	let { OLSKCollectionChunkKeySortFunction = null } = $$props;
    	let { OLSKCollectionDispatchClick } = $$props;
    	let { OLSKCollectionDispatchArrow } = $$props;
    	let { OLSKCollectionDispatchStash = null } = $$props;
    	let { OLSKCatalogDispatchDetailActivate = null } = $$props;
    	let { OLSKCatalogDispatchMasterShouldActivate = null } = $$props;
    	let { OLSKCatalogDispatchArchivedHide = null } = $$props;
    	let { OLSKCatalogDispatchArchivedShow = null } = $$props;
    	let { OLSKCatalogDispatchFilterSubmit = null } = $$props;
    	let { OLSKCatalogDispatchQuantity = null } = $$props;
    	let { OLSKCatalogDispatchEscapeOnEmpty = null } = $$props;
    	let { OLSKCatalogDispatchStash = null } = $$props;
    	let { OLSKCatalogItems = [] } = $$props;
    	let { OLSKCatalogDisableEscape = false } = $$props;

    	const modPublic = {
    		// VALUE
    		OLSKCatalogDisableEscape,
    		// DATA
    		_OLSKCatalogDataItemsAll() {
    			return mod._ValueItemsAll.slice();
    		},
    		OLSKCatalogDataItemSelected() {
    			return mod._ValueItemSelected;
    		},
    		_OLSKCatalogDataFilterText() {
    			return mod._ValueFilterText;
    		},
    		DataIsMobile() {
    			return window.innerWidth <= 760;
    		},
    		// CONTROL
    		OLSKCatalogInsert(inputData) {
    			mod.ValueItemsAll([inputData].concat(mod._ValueItemsAll), !mod._ValueItemSelected);
    			OLSKCatalogDispatchQuantity && OLSKCatalogDispatchQuantity(mod._ValueItemsAll.length);

    			if (inputData[_OLSKCatalogArchiveField]) {
    				OLSKCatalogDispatchArchivedHide();
    			}

    			return inputData;
    		},
    		_OLSKCatalogInsertAndSort(inputData) {
    			modPublic.OLSKCatalogInsert(inputData);
    			mod.ValueItemsAll([].concat(mod._ValueItemsAll), true);
    			return inputData;
    		},
    		OLSKCatalogSelect(inputData) {
    			return $$invalidate(10, mod._ValueItemSelected = inputData, mod);
    		},
    		OLSKCatalogUpdate(inputData) {
    			$$invalidate(
    				10,
    				mod._ValueItemsAll = mod._ValueItemsAll.map(function (e) {
    					return _OLSKCatalogDispatchKey(e) === _OLSKCatalogDispatchKey(inputData)
    					? inputData
    					: e;
    				}),
    				mod
    			);

    			$$invalidate(
    				10,
    				mod._ValueItemsVisible = mod._ValueItemsVisible.map(function (e) {
    					return _OLSKCatalogDispatchKey(e) === _OLSKCatalogDispatchKey(inputData)
    					? inputData
    					: e;
    				}),
    				mod
    			);

    			if (!mod._ValueItemSelected) {
    				mod.ValueItemsAll(mod._ValueItemsAll);
    			}

    			return inputData;
    		},
    		OLSKCatalogRemove(inputData) {
    			mod.ValueItemsAll(
    				mod._ValueItemsAll.filter(function (e) {
    					return _OLSKCatalogDispatchKey(e) !== _OLSKCatalogDispatchKey(inputData);
    				}),
    				!mod._ValueItemSelected
    			);

    			OLSKCatalogDispatchQuantity && OLSKCatalogDispatchQuantity(mod._ValueItemsAll.length);

    			if (!mod._ValueItemSelected) {
    				return;
    			}

    			if (_OLSKCatalogDispatchKey(inputData) !== _OLSKCatalogDispatchKey(mod._ValueItemSelected)) {
    				return;
    			}

    			modPublic.OLSKCatalogSelect(null);
    			modPublic.OLSKCatalogFocusMaster();
    			mod.ControlFocusMaster();
    		},
    		OLSKCatalogActivateDetail() {
    			if (mod.DataIsMobile()) {
    				return;
    			}

    			if (mod._OLSKCatalogDetail) {
    				return OLSKCatalogDispatchDetailActivate && OLSKCatalogDispatchDetailActivate();
    			}

    			$$invalidate(10, mod._ValueShouldActivate = true, mod);
    		},
    		OLSKCatalogFilterWithNoThrottle(inputData) {
    			mod.ControlFilterWithNoThrottle($$invalidate(10, mod._ValueFilterText = inputData, mod));
    		},
    		OLSKCatalogRevealArchive() {
    			$$invalidate(10, mod._ValueArchiveIsVisible = true, mod);
    			mod.ValueItemsVisible(mod._ValueItemsAll);
    			OLSKCatalogDispatchArchivedShow();
    		},
    		OLSKCatalogFocusDetail() {
    			$$invalidate(10, mod.OLSKMobileViewInactive = true, mod);
    		},
    		OLSKCatalogFocusMaster() {
    			$$invalidate(10, mod.OLSKMobileViewInactive = false, mod);

    			if (!mod.DataIsMobile()) {
    				return;
    			}

    			const element = document.querySelector('.OLSKCollectionItemLocus');

    			if (!element) {
    				return;
    			}

    			setTimeout(function () {
    				element.scrollIntoView({ block: 'center', inline: 'center' });
    			});
    		},
    		OLSKCatalogStashEnabled(inputData) {
    			if (typeof inputData === 'undefined') {
    				return mod._ValueStashEnabled;
    			}

    			const selected = mod._ValueItemSelected;

    			if (!modPublic._OLSKNarrow.modPublic._OLSKCollection.modPublic.OLSKCollectionStashEnabled($$invalidate(10, mod._ValueStashEnabled = inputData, mod)) || !selected) {
    				return $$invalidate(10, mod._ValueStashCount = 0, mod);
    			}

    			$$invalidate(10, mod._ValueItemSelected = null, mod);
    			modPublic._OLSKNarrow.modPublic._OLSKCollection.modPublic._OLSKCollectionStashToggle(selected);
    		}
    	};

    	const mod = {
    		OLSKMobileViewInactive: false,
    		// VALUE
    		_ValueItemsAll: [],
    		ValueItemsAll(inputData, shouldSort = true) {
    			mod.ValueArchiveCount(inputData);

    			mod.ValueItemsVisible(
    				$$invalidate(
    					10,
    					mod._ValueItemsAll = shouldSort
    					? inputData.sort(OLSKCatalogSortFunction)
    					: inputData,
    					mod
    				),
    				shouldSort
    			);
    		},
    		_ValueArchiveCount: 0,
    		_ValueArchiveIsVisible: false,
    		ValueArchiveCount(inputData) {
    			if (!_OLSKCatalogArchiveField) {
    				return;
    			}

    			$$invalidate(
    				10,
    				mod._ValueArchiveCount = inputData.filter(function (e) {
    					return e[_OLSKCatalogArchiveField];
    				}).length,
    				mod
    			);
    		},
    		_ValueItemsVisible: [],
    		ValueItemsVisible(inputData, shouldSort = true) {
    			const items = inputData.filter(function (e) {
    				if (!mod._ValueArchiveIsVisible && _OLSKCatalogArchiveField && e[_OLSKCatalogArchiveField]) {
    					return false;
    				}

    				return !mod._ValueFilterText || OLSKCatalogIsMatch(e, mod._ValueFilterText);
    			});

    			$$invalidate(10, mod._ValueItemsVisible = shouldSort ? items.sort(OLSKCatalogSortFunction) : items, mod);
    		},
    		_ValueItemSelected: null,
    		ValueItemSelected(inputData) {
    			$$invalidate(10, mod._ValueItemSelected = inputData, mod);

    			if (!inputData) {
    				$$invalidate(10, mod.OLSKMobileViewInactive = false, mod);
    			}
    		},
    		_ValueFilterText: '',
    		_ValueStashEnabled: false,
    		// DATA
    		DataIsMobile() {
    			return window.innerWidth <= 760;
    		},
    		// INTERFACE
    		InterfaceStashDoneButtonDidClick() {
    			OLSKCatalogDispatchStash && OLSKCatalogDispatchStash(modPublic._OLSKNarrow.modPublic._OLSKCollection.modPublic._OLSKCollectionStashItems);
    			modPublic.OLSKCatalogStashEnabled(false);
    		},
    		InterfaceWindowDidKeydown(event) {
    			if (document.querySelector('.LCHLauncher')) {
    				// #spec
    				return;
    			}

    			const handlerFunctions = {
    				Escape() {
    					if (modPublic.OLSKCatalogDisableEscape) {
    						return;
    					}

    					if (!mod._ValueFilterText && !mod._ValueItemSelected) {
    						OLSKCatalogDispatchEscapeOnEmpty && OLSKCatalogDispatchEscapeOnEmpty();
    					}

    					mod.ControlDeselect();
    				},
    				Tab() {
    					if (document.activeElement === document.querySelector('.OLSKNarrowFilterField') && mod._ValueItemSelected) {
    						return event.preventDefault(OLSKCatalogDispatchDetailActivate && OLSKCatalogDispatchDetailActivate());
    					}

    					if (event.shiftKey && document.activeElement !== document.querySelector('.OLSKNarrowFilterField') && OLSKCatalogDispatchMasterShouldActivate && OLSKCatalogDispatchMasterShouldActivate()) {
    						return event.preventDefault(mod.ControlFocusMaster());
    					}
    				}
    			};

    			handlerFunctions[event.key] && handlerFunctions[event.key]();
    		},
    		// CONTROL
    		ControlSelect(inputData) {
    			mod.ValueItemSelected(inputData);

    			if (!inputData) {
    				return !mod.DataIsMobile() && mod.ControlFocusMaster();
    			}
    		},
    		ControlFilterWithThrottle(inputData) {
    			$$invalidate(10, mod._ValueFilterText = inputData, mod);

    			OLSKThrottle.OLSKThrottleMappedTimeout(mod, '_ValueFilterThrottle', {
    				OLSKThrottleDuration: 200,
    				OLSKThrottleCallback() {
    					return mod.ControlFilterWithNoThrottle(mod._ValueFilterText);
    				}
    			});

    			if (main_1$1()) {
    				OLSKThrottle.OLSKThrottleSkip(mod._ValueFilterThrottle);
    			}
    		},
    		ControlFilterWithNoThrottle(inputData) {
    			if (mod._ValueArchiveCount) {
    				$$invalidate(10, mod._ValueArchiveIsVisible = !!inputData, mod)
    				? OLSKCatalogDispatchArchivedShow()
    				: OLSKCatalogDispatchArchivedHide();
    			}

    			mod.ValueItemsVisible(mod._ValueItemsAll);

    			if (!inputData) {
    				return mod.ControlSelect(null);
    			}

    			if (!mod._ValueItemsVisible.length) {
    				return mod.ControlSelect(null);
    			}

    			OLSKCatalogExactSortFunction && mod.ValueItemSelected(mod._ValueItemsVisible.slice().sort(function (a, b) {
    				return OLSKCatalogExactSortFunction(inputData, a, b);
    			}).shift());
    		},
    		ControlFocusMaster() {
    			$$invalidate(10, mod.OLSKMobileViewInactive = false, mod);

    			if (mod.DataIsMobile()) {
    				return;
    			}

    			document.querySelector('.OLSKNarrowFilterField').focus();
    		},
    		ControlFocusDetail() {
    			$$invalidate(10, mod.OLSKMobileViewInactive = true, mod);
    			setTimeout(mod.ControlFocusDetail);
    		},
    		ControlDeselect() {
    			mod.ValueArchiveCount(mod._ValueItemsAll);
    			mod._ValueItemsAll.sort(OLSKCatalogSortFunction);
    			mod.ControlFilterWithNoThrottle($$invalidate(10, mod._ValueFilterText = '', mod));

    			if (typeof main_1$1 !== 'undefined' && !main_1$1()) {
    				document.querySelector('.OLSKNarrowBody').scrollTo(0, 0);
    			}
    		},
    		// MESSAGE
    		OLSKNarrowDispatchFilter(inputData) {
    			mod.ControlFilterWithThrottle(inputData);
    		},
    		OLSKNarrowDispatchSubmit() {
    			mod._ValueFilterText && OLSKCatalogDispatchFilterSubmit && OLSKCatalogDispatchFilterSubmit(mod._ValueFilterText);
    		},
    		OLSKCollectionDispatchStash(inputData) {
    			$$invalidate(10, mod._ValueStashCount = inputData.length, mod);
    			OLSKCollectionDispatchStash && OLSKCollectionDispatchStash(inputData);
    		},
    		// SETUP
    		SetupEverything() {
    			mod.SetupFocus();
    			mod.SetupItems();
    		},
    		SetupFocus() {
    			setTimeout(mod.ControlFocusMaster);
    		},
    		SetupItems() {
    			mod.ValueItemsAll(OLSKCatalogItems);

    			if (mod._ValueArchiveCount) {
    				OLSKCatalogDispatchArchivedHide();
    			}
    		},
    		// LIFECYCLE
    		LifecycleModuleWillMount() {
    			mod.SetupEverything();
    		},
    		LifecycleDetailDidCreate() {
    			if (!mod._ValueShouldActivate) {
    				return;
    			}

    			delete mod._ValueShouldActivate;
    			OLSKCatalogDispatchDetailActivate && OLSKCatalogDispatchDetailActivate();
    		}
    	};

    	onMount(mod.LifecycleModuleWillMount);

    	$$self.$$.on_mount.push(function () {
    		if (OLSKCollectionItemAccessibilitySummaryFunction === undefined && !('OLSKCollectionItemAccessibilitySummaryFunction' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionItemAccessibilitySummaryFunction']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionItemAccessibilitySummaryFunction'");
    		}

    		if (OLSKCatalogSortFunction === undefined && !('OLSKCatalogSortFunction' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCatalogSortFunction']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCatalogSortFunction'");
    		}

    		if (OLSKCatalogIsMatch === undefined && !('OLSKCatalogIsMatch' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCatalogIsMatch']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCatalogIsMatch'");
    		}

    		if (_OLSKCatalogDispatchKey === undefined && !('_OLSKCatalogDispatchKey' in $$props || $$self.$$.bound[$$self.$$.props['_OLSKCatalogDispatchKey']])) {
    			console.warn("<Main> was created without expected prop '_OLSKCatalogDispatchKey'");
    		}

    		if (OLSKCollectionDispatchClick === undefined && !('OLSKCollectionDispatchClick' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionDispatchClick']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionDispatchClick'");
    		}

    		if (OLSKCollectionDispatchArrow === undefined && !('OLSKCollectionDispatchArrow' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCollectionDispatchArrow']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCollectionDispatchArrow'");
    		}
    	});

    	const writable_props = [
    		'OLSKCollectionItemAccessibilitySummaryFunction',
    		'OLSKCollectionItemClass',
    		'OLSKNarrowFilterFieldPlaceholderText',
    		'_OLSKCatalogArchiveField',
    		'OLSKCatalogSortFunction',
    		'OLSKCatalogIsMatch',
    		'OLSKCatalogExactSortFunction',
    		'_OLSKCatalogDispatchKey',
    		'OLSKCollectionChunkFunction',
    		'OLSKCollectionChunkKeySortFunction',
    		'OLSKCollectionDispatchClick',
    		'OLSKCollectionDispatchArrow',
    		'OLSKCollectionDispatchStash',
    		'OLSKCatalogDispatchDetailActivate',
    		'OLSKCatalogDispatchMasterShouldActivate',
    		'OLSKCatalogDispatchArchivedHide',
    		'OLSKCatalogDispatchArchivedShow',
    		'OLSKCatalogDispatchFilterSubmit',
    		'OLSKCatalogDispatchQuantity',
    		'OLSKCatalogDispatchEscapeOnEmpty',
    		'OLSKCatalogDispatchStash',
    		'OLSKCatalogItems',
    		'OLSKCatalogDisableEscape'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function olsknarrow_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			modPublic._OLSKNarrow = $$value;
    			$$invalidate(0, modPublic);
    		});
    	}

    	function div_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._OLSKCatalogDetail = $$value;
    			$$invalidate(10, mod);
    		});
    	}

    	$$self.$$set = $$props => {
    		if ('OLSKCollectionItemAccessibilitySummaryFunction' in $$props) $$invalidate(1, OLSKCollectionItemAccessibilitySummaryFunction = $$props.OLSKCollectionItemAccessibilitySummaryFunction);
    		if ('OLSKCollectionItemClass' in $$props) $$invalidate(2, OLSKCollectionItemClass = $$props.OLSKCollectionItemClass);
    		if ('OLSKNarrowFilterFieldPlaceholderText' in $$props) $$invalidate(3, OLSKNarrowFilterFieldPlaceholderText = $$props.OLSKNarrowFilterFieldPlaceholderText);
    		if ('_OLSKCatalogArchiveField' in $$props) $$invalidate(12, _OLSKCatalogArchiveField = $$props._OLSKCatalogArchiveField);
    		if ('OLSKCatalogSortFunction' in $$props) $$invalidate(4, OLSKCatalogSortFunction = $$props.OLSKCatalogSortFunction);
    		if ('OLSKCatalogIsMatch' in $$props) $$invalidate(13, OLSKCatalogIsMatch = $$props.OLSKCatalogIsMatch);
    		if ('OLSKCatalogExactSortFunction' in $$props) $$invalidate(14, OLSKCatalogExactSortFunction = $$props.OLSKCatalogExactSortFunction);
    		if ('_OLSKCatalogDispatchKey' in $$props) $$invalidate(5, _OLSKCatalogDispatchKey = $$props._OLSKCatalogDispatchKey);
    		if ('OLSKCollectionChunkFunction' in $$props) $$invalidate(6, OLSKCollectionChunkFunction = $$props.OLSKCollectionChunkFunction);
    		if ('OLSKCollectionChunkKeySortFunction' in $$props) $$invalidate(7, OLSKCollectionChunkKeySortFunction = $$props.OLSKCollectionChunkKeySortFunction);
    		if ('OLSKCollectionDispatchClick' in $$props) $$invalidate(8, OLSKCollectionDispatchClick = $$props.OLSKCollectionDispatchClick);
    		if ('OLSKCollectionDispatchArrow' in $$props) $$invalidate(9, OLSKCollectionDispatchArrow = $$props.OLSKCollectionDispatchArrow);
    		if ('OLSKCollectionDispatchStash' in $$props) $$invalidate(15, OLSKCollectionDispatchStash = $$props.OLSKCollectionDispatchStash);
    		if ('OLSKCatalogDispatchDetailActivate' in $$props) $$invalidate(16, OLSKCatalogDispatchDetailActivate = $$props.OLSKCatalogDispatchDetailActivate);
    		if ('OLSKCatalogDispatchMasterShouldActivate' in $$props) $$invalidate(17, OLSKCatalogDispatchMasterShouldActivate = $$props.OLSKCatalogDispatchMasterShouldActivate);
    		if ('OLSKCatalogDispatchArchivedHide' in $$props) $$invalidate(18, OLSKCatalogDispatchArchivedHide = $$props.OLSKCatalogDispatchArchivedHide);
    		if ('OLSKCatalogDispatchArchivedShow' in $$props) $$invalidate(19, OLSKCatalogDispatchArchivedShow = $$props.OLSKCatalogDispatchArchivedShow);
    		if ('OLSKCatalogDispatchFilterSubmit' in $$props) $$invalidate(20, OLSKCatalogDispatchFilterSubmit = $$props.OLSKCatalogDispatchFilterSubmit);
    		if ('OLSKCatalogDispatchQuantity' in $$props) $$invalidate(21, OLSKCatalogDispatchQuantity = $$props.OLSKCatalogDispatchQuantity);
    		if ('OLSKCatalogDispatchEscapeOnEmpty' in $$props) $$invalidate(22, OLSKCatalogDispatchEscapeOnEmpty = $$props.OLSKCatalogDispatchEscapeOnEmpty);
    		if ('OLSKCatalogDispatchStash' in $$props) $$invalidate(23, OLSKCatalogDispatchStash = $$props.OLSKCatalogDispatchStash);
    		if ('OLSKCatalogItems' in $$props) $$invalidate(24, OLSKCatalogItems = $$props.OLSKCatalogItems);
    		if ('OLSKCatalogDisableEscape' in $$props) $$invalidate(25, OLSKCatalogDisableEscape = $$props.OLSKCatalogDisableEscape);
    		if ('$$scope' in $$props) $$invalidate(29, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		OLSKCollectionItemAccessibilitySummaryFunction,
    		OLSKCollectionItemClass,
    		OLSKNarrowFilterFieldPlaceholderText,
    		_OLSKCatalogArchiveField,
    		OLSKCatalogSortFunction,
    		OLSKCatalogIsMatch,
    		OLSKCatalogExactSortFunction,
    		_OLSKCatalogDispatchKey,
    		OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction,
    		OLSKCollectionDispatchClick,
    		OLSKCollectionDispatchArrow,
    		OLSKCollectionDispatchStash,
    		OLSKCatalogDispatchDetailActivate,
    		OLSKCatalogDispatchMasterShouldActivate,
    		OLSKCatalogDispatchArchivedHide,
    		OLSKCatalogDispatchArchivedShow,
    		OLSKCatalogDispatchFilterSubmit,
    		OLSKCatalogDispatchQuantity,
    		OLSKCatalogDispatchEscapeOnEmpty,
    		OLSKCatalogDispatchStash,
    		OLSKCatalogItems,
    		OLSKCatalogDisableEscape,
    		OLSKLocalized: main_1,
    		OLSKFormatted: main_1$2,
    		OLSK_SPEC_UI: main_1$1,
    		OLSKThrottle,
    		modPublic,
    		mod,
    		onMount,
    		OLSKNarrow: Main$2,
    		OLSKPlaceholder: Main$3
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKCollectionItemAccessibilitySummaryFunction' in $$props) $$invalidate(1, OLSKCollectionItemAccessibilitySummaryFunction = $$props.OLSKCollectionItemAccessibilitySummaryFunction);
    		if ('OLSKCollectionItemClass' in $$props) $$invalidate(2, OLSKCollectionItemClass = $$props.OLSKCollectionItemClass);
    		if ('OLSKNarrowFilterFieldPlaceholderText' in $$props) $$invalidate(3, OLSKNarrowFilterFieldPlaceholderText = $$props.OLSKNarrowFilterFieldPlaceholderText);
    		if ('_OLSKCatalogArchiveField' in $$props) $$invalidate(12, _OLSKCatalogArchiveField = $$props._OLSKCatalogArchiveField);
    		if ('OLSKCatalogSortFunction' in $$props) $$invalidate(4, OLSKCatalogSortFunction = $$props.OLSKCatalogSortFunction);
    		if ('OLSKCatalogIsMatch' in $$props) $$invalidate(13, OLSKCatalogIsMatch = $$props.OLSKCatalogIsMatch);
    		if ('OLSKCatalogExactSortFunction' in $$props) $$invalidate(14, OLSKCatalogExactSortFunction = $$props.OLSKCatalogExactSortFunction);
    		if ('_OLSKCatalogDispatchKey' in $$props) $$invalidate(5, _OLSKCatalogDispatchKey = $$props._OLSKCatalogDispatchKey);
    		if ('OLSKCollectionChunkFunction' in $$props) $$invalidate(6, OLSKCollectionChunkFunction = $$props.OLSKCollectionChunkFunction);
    		if ('OLSKCollectionChunkKeySortFunction' in $$props) $$invalidate(7, OLSKCollectionChunkKeySortFunction = $$props.OLSKCollectionChunkKeySortFunction);
    		if ('OLSKCollectionDispatchClick' in $$props) $$invalidate(8, OLSKCollectionDispatchClick = $$props.OLSKCollectionDispatchClick);
    		if ('OLSKCollectionDispatchArrow' in $$props) $$invalidate(9, OLSKCollectionDispatchArrow = $$props.OLSKCollectionDispatchArrow);
    		if ('OLSKCollectionDispatchStash' in $$props) $$invalidate(15, OLSKCollectionDispatchStash = $$props.OLSKCollectionDispatchStash);
    		if ('OLSKCatalogDispatchDetailActivate' in $$props) $$invalidate(16, OLSKCatalogDispatchDetailActivate = $$props.OLSKCatalogDispatchDetailActivate);
    		if ('OLSKCatalogDispatchMasterShouldActivate' in $$props) $$invalidate(17, OLSKCatalogDispatchMasterShouldActivate = $$props.OLSKCatalogDispatchMasterShouldActivate);
    		if ('OLSKCatalogDispatchArchivedHide' in $$props) $$invalidate(18, OLSKCatalogDispatchArchivedHide = $$props.OLSKCatalogDispatchArchivedHide);
    		if ('OLSKCatalogDispatchArchivedShow' in $$props) $$invalidate(19, OLSKCatalogDispatchArchivedShow = $$props.OLSKCatalogDispatchArchivedShow);
    		if ('OLSKCatalogDispatchFilterSubmit' in $$props) $$invalidate(20, OLSKCatalogDispatchFilterSubmit = $$props.OLSKCatalogDispatchFilterSubmit);
    		if ('OLSKCatalogDispatchQuantity' in $$props) $$invalidate(21, OLSKCatalogDispatchQuantity = $$props.OLSKCatalogDispatchQuantity);
    		if ('OLSKCatalogDispatchEscapeOnEmpty' in $$props) $$invalidate(22, OLSKCatalogDispatchEscapeOnEmpty = $$props.OLSKCatalogDispatchEscapeOnEmpty);
    		if ('OLSKCatalogDispatchStash' in $$props) $$invalidate(23, OLSKCatalogDispatchStash = $$props.OLSKCatalogDispatchStash);
    		if ('OLSKCatalogItems' in $$props) $$invalidate(24, OLSKCatalogItems = $$props.OLSKCatalogItems);
    		if ('OLSKCatalogDisableEscape' in $$props) $$invalidate(25, OLSKCatalogDisableEscape = $$props.OLSKCatalogDisableEscape);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		modPublic,
    		OLSKCollectionItemAccessibilitySummaryFunction,
    		OLSKCollectionItemClass,
    		OLSKNarrowFilterFieldPlaceholderText,
    		OLSKCatalogSortFunction,
    		_OLSKCatalogDispatchKey,
    		OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction,
    		OLSKCollectionDispatchClick,
    		OLSKCollectionDispatchArrow,
    		mod,
    		$$slots,
    		_OLSKCatalogArchiveField,
    		OLSKCatalogIsMatch,
    		OLSKCatalogExactSortFunction,
    		OLSKCollectionDispatchStash,
    		OLSKCatalogDispatchDetailActivate,
    		OLSKCatalogDispatchMasterShouldActivate,
    		OLSKCatalogDispatchArchivedHide,
    		OLSKCatalogDispatchArchivedShow,
    		OLSKCatalogDispatchFilterSubmit,
    		OLSKCatalogDispatchQuantity,
    		OLSKCatalogDispatchEscapeOnEmpty,
    		OLSKCatalogDispatchStash,
    		OLSKCatalogItems,
    		OLSKCatalogDisableEscape,
    		slots,
    		olsknarrow_binding,
    		div_binding,
    		$$scope
    	];
    }

    class Main$4 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$4, create_fragment$4, safe_not_equal, {
    			OLSKCollectionItemAccessibilitySummaryFunction: 1,
    			OLSKCollectionItemClass: 2,
    			OLSKNarrowFilterFieldPlaceholderText: 3,
    			_OLSKCatalogArchiveField: 12,
    			OLSKCatalogSortFunction: 4,
    			OLSKCatalogIsMatch: 13,
    			OLSKCatalogExactSortFunction: 14,
    			_OLSKCatalogDispatchKey: 5,
    			OLSKCollectionChunkFunction: 6,
    			OLSKCollectionChunkKeySortFunction: 7,
    			OLSKCollectionDispatchClick: 8,
    			OLSKCollectionDispatchArrow: 9,
    			OLSKCollectionDispatchStash: 15,
    			OLSKCatalogDispatchDetailActivate: 16,
    			OLSKCatalogDispatchMasterShouldActivate: 17,
    			OLSKCatalogDispatchArchivedHide: 18,
    			OLSKCatalogDispatchArchivedShow: 19,
    			OLSKCatalogDispatchFilterSubmit: 20,
    			OLSKCatalogDispatchQuantity: 21,
    			OLSKCatalogDispatchEscapeOnEmpty: 22,
    			OLSKCatalogDispatchStash: 23,
    			OLSKCatalogItems: 24,
    			OLSKCatalogDisableEscape: 25,
    			modPublic: 0
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$4.name
    		});
    	}

    	get OLSKCollectionItemAccessibilitySummaryFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemAccessibilitySummaryFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionItemClass() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionItemClass(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKNarrowFilterFieldPlaceholderText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKNarrowFilterFieldPlaceholderText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get _OLSKCatalogArchiveField() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set _OLSKCatalogArchiveField(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogSortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogSortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogIsMatch() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogIsMatch(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogExactSortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogExactSortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get _OLSKCatalogDispatchKey() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set _OLSKCatalogDispatchKey(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionChunkFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionChunkFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionChunkKeySortFunction() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionChunkKeySortFunction(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchClick() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchClick(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchArrow() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchArrow(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCollectionDispatchStash() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCollectionDispatchStash(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchDetailActivate() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchDetailActivate(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchMasterShouldActivate() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchMasterShouldActivate(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchArchivedHide() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchArchivedHide(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchArchivedShow() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchArchivedShow(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchFilterSubmit() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchFilterSubmit(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchQuantity() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchQuantity(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchEscapeOnEmpty() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchEscapeOnEmpty(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDispatchStash() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDispatchStash(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCatalogDisableEscape() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCatalogDisableEscape(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get modPublic() {
    		return this.$$.ctx[0];
    	}

    	set modPublic(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    const mod$3 = {

    	JBXPlayListItemHumanURL (inputData) {
    		if (typeof inputData !== 'string') {
    			throw new Error('JBXErrorInputNotValid');
    		}

    		return OLSKString.OLSKStringSnippet(inputData.replace(/https?:\/\/(www\.)?/, ''));
    	},

    };

    /* os-app/sub-item/main.svelte generated by Svelte v3.54.0 */
    const file$5 = "os-app/sub-item/main.svelte";

    // (10:0) {#if JBXPlayListItemObject.JBXDocumentImageURL }
    function create_if_block$4(ctx) {
    	let img;
    	let img_src_value;

    	const block = {
    		c: function create() {
    			img = element("img");
    			attr_dev(img, "class", "JBXPlayListItemImage");
    			if (!src_url_equal(img.src, img_src_value = /*JBXPlayListItemObject*/ ctx[0].JBXDocumentImageURL)) attr_dev(img, "src", img_src_value);
    			attr_dev(img, "role", "presentation");
    			add_location(img, file$5, 10, 1, 317);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, img, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*JBXPlayListItemObject*/ 1 && !src_url_equal(img.src, img_src_value = /*JBXPlayListItemObject*/ ctx[0].JBXDocumentImageURL)) {
    				attr_dev(img, "src", img_src_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(img);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$4.name,
    		type: "if",
    		source: "(10:0) {#if JBXPlayListItemObject.JBXDocumentImageURL }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$5(ctx) {
    	let div;
    	let t0;
    	let section;
    	let span0;
    	let t1_value = OLSKString.OLSKStringSnippet(/*JBXPlayListItemObject*/ ctx[0].JBXDocumentName || mod$3.JBXPlayListItemHumanURL(/*JBXPlayListItemObject*/ ctx[0].JBXDocumentURL || '')) + "";
    	let t1;
    	let t2;
    	let span1;
    	let t3_value = OLSKString.OLSKStringSnippet(/*JBXPlayListItemObject*/ ctx[0].JBXDocumentNotes) + "";
    	let t3;
    	let t4;
    	let span2;
    	let t5_value = (/*JBXPlayListItemObject*/ ctx[0].JBXDocumentTags || []).join(', ') + "";
    	let t5;
    	let if_block = /*JBXPlayListItemObject*/ ctx[0].JBXDocumentImageURL && create_if_block$4(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			t0 = space();
    			section = element("section");
    			span0 = element("span");
    			t1 = text(t1_value);
    			t2 = space();
    			span1 = element("span");
    			t3 = text(t3_value);
    			t4 = space();
    			span2 = element("span");
    			t5 = text(t5_value);
    			attr_dev(span0, "class", "JBXPlayListItemTitle svelte-vr5lf1");
    			add_location(span0, file$5, 14, 1, 442);
    			attr_dev(span1, "class", "JBXPlayListItemSnippet svelte-vr5lf1");
    			add_location(span1, file$5, 16, 1, 650);
    			attr_dev(span2, "class", "JBXPlayListItemTags svelte-vr5lf1");
    			add_location(span2, file$5, 18, 1, 769);
    			add_location(section, file$5, 13, 0, 431);
    			attr_dev(div, "class", "JBXPlayListItem OLSKCommonCard svelte-vr5lf1");
    			toggle_class(div, "JBXPlayListItemArchived", /*JBXPlayListItemObject*/ ctx[0].JBXDocumentArchiveDate);
    			add_location(div, file$5, 7, 0, 142);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			append_dev(div, t0);
    			append_dev(div, section);
    			append_dev(section, span0);
    			append_dev(span0, t1);
    			append_dev(section, t2);
    			append_dev(section, span1);
    			append_dev(span1, t3);
    			append_dev(section, t4);
    			append_dev(section, span2);
    			append_dev(span2, t5);
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*JBXPlayListItemObject*/ ctx[0].JBXDocumentImageURL) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$4(ctx);
    					if_block.c();
    					if_block.m(div, t0);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}

    			if (dirty & /*JBXPlayListItemObject*/ 1 && t1_value !== (t1_value = OLSKString.OLSKStringSnippet(/*JBXPlayListItemObject*/ ctx[0].JBXDocumentName || mod$3.JBXPlayListItemHumanURL(/*JBXPlayListItemObject*/ ctx[0].JBXDocumentURL || '')) + "")) set_data_dev(t1, t1_value);
    			if (dirty & /*JBXPlayListItemObject*/ 1 && t3_value !== (t3_value = OLSKString.OLSKStringSnippet(/*JBXPlayListItemObject*/ ctx[0].JBXDocumentNotes) + "")) set_data_dev(t3, t3_value);
    			if (dirty & /*JBXPlayListItemObject*/ 1 && t5_value !== (t5_value = (/*JBXPlayListItemObject*/ ctx[0].JBXDocumentTags || []).join(', ') + "")) set_data_dev(t5, t5_value);

    			if (dirty & /*JBXPlayListItemObject*/ 1) {
    				toggle_class(div, "JBXPlayListItemArchived", /*JBXPlayListItemObject*/ ctx[0].JBXDocumentArchiveDate);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$5.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { JBXPlayListItemObject } = $$props;

    	$$self.$$.on_mount.push(function () {
    		if (JBXPlayListItemObject === undefined && !('JBXPlayListItemObject' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayListItemObject']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayListItemObject'");
    		}
    	});

    	const writable_props = ['JBXPlayListItemObject'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('JBXPlayListItemObject' in $$props) $$invalidate(0, JBXPlayListItemObject = $$props.JBXPlayListItemObject);
    	};

    	$$self.$capture_state = () => ({
    		JBXPlayListItemObject,
    		OLSKString,
    		JBXPlayListItemLogic: mod$3
    	});

    	$$self.$inject_state = $$props => {
    		if ('JBXPlayListItemObject' in $$props) $$invalidate(0, JBXPlayListItemObject = $$props.JBXPlayListItemObject);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [JBXPlayListItemObject];
    }

    class Main$5 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$5, create_fragment$5, safe_not_equal, { JBXPlayListItemObject: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$5.name
    		});
    	}

    	get JBXPlayListItemObject() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayListItemObject(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var choices = createCommonjsModule(function (module, exports) {
    /*! choices.js v10.2.0 | © 2022 Josh Johnson | https://github.com/jshjohnson/Choices#readme */
    (function webpackUniversalModuleDefinition(root, factory) {
    	module.exports = factory();
    })(window, function() {
    return /******/ (function() { // webpackBootstrap
    /******/ 	var __webpack_modules__ = ({

    /***/ 282:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.clearChoices = exports.activateChoices = exports.filterChoices = exports.addChoice = void 0;
    var constants_1 = __webpack_require__(883);
    var addChoice = function (_a) {
      var value = _a.value,
        label = _a.label,
        id = _a.id,
        groupId = _a.groupId,
        disabled = _a.disabled,
        elementId = _a.elementId,
        customProperties = _a.customProperties,
        placeholder = _a.placeholder,
        keyCode = _a.keyCode;
      return {
        type: constants_1.ACTION_TYPES.ADD_CHOICE,
        value: value,
        label: label,
        id: id,
        groupId: groupId,
        disabled: disabled,
        elementId: elementId,
        customProperties: customProperties,
        placeholder: placeholder,
        keyCode: keyCode
      };
    };
    exports.addChoice = addChoice;
    var filterChoices = function (results) {
      return {
        type: constants_1.ACTION_TYPES.FILTER_CHOICES,
        results: results
      };
    };
    exports.filterChoices = filterChoices;
    var activateChoices = function (active) {
      if (active === void 0) {
        active = true;
      }
      return {
        type: constants_1.ACTION_TYPES.ACTIVATE_CHOICES,
        active: active
      };
    };
    exports.activateChoices = activateChoices;
    var clearChoices = function () {
      return {
        type: constants_1.ACTION_TYPES.CLEAR_CHOICES
      };
    };
    exports.clearChoices = clearChoices;

    /***/ }),

    /***/ 783:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.addGroup = void 0;
    var constants_1 = __webpack_require__(883);
    var addGroup = function (_a) {
      var value = _a.value,
        id = _a.id,
        active = _a.active,
        disabled = _a.disabled;
      return {
        type: constants_1.ACTION_TYPES.ADD_GROUP,
        value: value,
        id: id,
        active: active,
        disabled: disabled
      };
    };
    exports.addGroup = addGroup;

    /***/ }),

    /***/ 464:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.highlightItem = exports.removeItem = exports.addItem = void 0;
    var constants_1 = __webpack_require__(883);
    var addItem = function (_a) {
      var value = _a.value,
        label = _a.label,
        id = _a.id,
        choiceId = _a.choiceId,
        groupId = _a.groupId,
        customProperties = _a.customProperties,
        placeholder = _a.placeholder,
        keyCode = _a.keyCode;
      return {
        type: constants_1.ACTION_TYPES.ADD_ITEM,
        value: value,
        label: label,
        id: id,
        choiceId: choiceId,
        groupId: groupId,
        customProperties: customProperties,
        placeholder: placeholder,
        keyCode: keyCode
      };
    };
    exports.addItem = addItem;
    var removeItem = function (id, choiceId) {
      return {
        type: constants_1.ACTION_TYPES.REMOVE_ITEM,
        id: id,
        choiceId: choiceId
      };
    };
    exports.removeItem = removeItem;
    var highlightItem = function (id, highlighted) {
      return {
        type: constants_1.ACTION_TYPES.HIGHLIGHT_ITEM,
        id: id,
        highlighted: highlighted
      };
    };
    exports.highlightItem = highlightItem;

    /***/ }),

    /***/ 137:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.setIsLoading = exports.resetTo = exports.clearAll = void 0;
    var constants_1 = __webpack_require__(883);
    var clearAll = function () {
      return {
        type: constants_1.ACTION_TYPES.CLEAR_ALL
      };
    };
    exports.clearAll = clearAll;
    var resetTo = function (state) {
      return {
        type: constants_1.ACTION_TYPES.RESET_TO,
        state: state
      };
    };
    exports.resetTo = resetTo;
    var setIsLoading = function (isLoading) {
      return {
        type: constants_1.ACTION_TYPES.SET_IS_LOADING,
        isLoading: isLoading
      };
    };
    exports.setIsLoading = setIsLoading;

    /***/ }),

    /***/ 373:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __spreadArray = this && this.__spreadArray || function (to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var deepmerge_1 = __importDefault(__webpack_require__(996));
    /* eslint-disable @typescript-eslint/no-explicit-any */
    var fuse_js_1 = __importDefault(__webpack_require__(221));
    var choices_1 = __webpack_require__(282);
    var groups_1 = __webpack_require__(783);
    var items_1 = __webpack_require__(464);
    var misc_1 = __webpack_require__(137);
    var components_1 = __webpack_require__(520);
    var constants_1 = __webpack_require__(883);
    var defaults_1 = __webpack_require__(789);
    var utils_1 = __webpack_require__(799);
    var reducers_1 = __webpack_require__(655);
    var store_1 = __importDefault(__webpack_require__(744));
    var templates_1 = __importDefault(__webpack_require__(686));
    /** @see {@link http://browserhacks.com/#hack-acea075d0ac6954f275a70023906050c} */
    var IS_IE11 = '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style;
    var USER_DEFAULTS = {};
    /**
     * Choices
     * @author Josh Johnson<josh@joshuajohnson.co.uk>
     */
    var Choices = /** @class */function () {
      function Choices(element, userConfig) {
        if (element === void 0) {
          element = '[data-choice]';
        }
        if (userConfig === void 0) {
          userConfig = {};
        }
        var _this = this;
        if (userConfig.allowHTML === undefined) {
          console.warn('Deprecation warning: allowHTML will default to false in a future release. To render HTML in Choices, you will need to set it to true. Setting allowHTML will suppress this message.');
        }
        this.config = deepmerge_1.default.all([defaults_1.DEFAULT_CONFIG, Choices.defaults.options, userConfig],
        // When merging array configs, replace with a copy of the userConfig array,
        // instead of concatenating with the default array
        {
          arrayMerge: function (_, sourceArray) {
            return __spreadArray([], sourceArray, true);
          }
        });
        var invalidConfigOptions = (0, utils_1.diff)(this.config, defaults_1.DEFAULT_CONFIG);
        if (invalidConfigOptions.length) {
          console.warn('Unknown config option(s) passed', invalidConfigOptions.join(', '));
        }
        var passedElement = typeof element === 'string' ? document.querySelector(element) : element;
        if (!(passedElement instanceof HTMLInputElement || passedElement instanceof HTMLSelectElement)) {
          throw TypeError('Expected one of the following types text|select-one|select-multiple');
        }
        this._isTextElement = passedElement.type === constants_1.TEXT_TYPE;
        this._isSelectOneElement = passedElement.type === constants_1.SELECT_ONE_TYPE;
        this._isSelectMultipleElement = passedElement.type === constants_1.SELECT_MULTIPLE_TYPE;
        this._isSelectElement = this._isSelectOneElement || this._isSelectMultipleElement;
        this.config.searchEnabled = this._isSelectMultipleElement || this.config.searchEnabled;
        if (!['auto', 'always'].includes("".concat(this.config.renderSelectedChoices))) {
          this.config.renderSelectedChoices = 'auto';
        }
        if (userConfig.addItemFilter && typeof userConfig.addItemFilter !== 'function') {
          var re = userConfig.addItemFilter instanceof RegExp ? userConfig.addItemFilter : new RegExp(userConfig.addItemFilter);
          this.config.addItemFilter = re.test.bind(re);
        }
        if (this._isTextElement) {
          this.passedElement = new components_1.WrappedInput({
            element: passedElement,
            classNames: this.config.classNames,
            delimiter: this.config.delimiter
          });
        } else {
          this.passedElement = new components_1.WrappedSelect({
            element: passedElement,
            classNames: this.config.classNames,
            template: function (data) {
              return _this._templates.option(data);
            }
          });
        }
        this.initialised = false;
        this._store = new store_1.default();
        this._initialState = reducers_1.defaultState;
        this._currentState = reducers_1.defaultState;
        this._prevState = reducers_1.defaultState;
        this._currentValue = '';
        this._canSearch = !!this.config.searchEnabled;
        this._isScrollingOnIe = false;
        this._highlightPosition = 0;
        this._wasTap = true;
        this._placeholderValue = this._generatePlaceholderValue();
        this._baseId = (0, utils_1.generateId)(this.passedElement.element, 'choices-');
        /**
         * setting direction in cases where it's explicitly set on passedElement
         * or when calculated direction is different from the document
         */
        this._direction = this.passedElement.dir;
        if (!this._direction) {
          var elementDirection = window.getComputedStyle(this.passedElement.element).direction;
          var documentDirection = window.getComputedStyle(document.documentElement).direction;
          if (elementDirection !== documentDirection) {
            this._direction = elementDirection;
          }
        }
        this._idNames = {
          itemChoice: 'item-choice'
        };
        if (this._isSelectElement) {
          // Assign preset groups from passed element
          this._presetGroups = this.passedElement.optionGroups;
          // Assign preset options from passed element
          this._presetOptions = this.passedElement.options;
        }
        // Assign preset choices from passed object
        this._presetChoices = this.config.choices;
        // Assign preset items from passed object first
        this._presetItems = this.config.items;
        // Add any values passed from attribute
        if (this.passedElement.value && this._isTextElement) {
          var splitValues = this.passedElement.value.split(this.config.delimiter);
          this._presetItems = this._presetItems.concat(splitValues);
        }
        // Create array of choices from option elements
        if (this.passedElement.options) {
          this.passedElement.options.forEach(function (option) {
            _this._presetChoices.push({
              value: option.value,
              label: option.innerHTML,
              selected: !!option.selected,
              disabled: option.disabled || option.parentNode.disabled,
              placeholder: option.value === '' || option.hasAttribute('placeholder'),
              customProperties: (0, utils_1.parseCustomProperties)(option.dataset.customProperties)
            });
          });
        }
        this._render = this._render.bind(this);
        this._onFocus = this._onFocus.bind(this);
        this._onBlur = this._onBlur.bind(this);
        this._onKeyUp = this._onKeyUp.bind(this);
        this._onKeyDown = this._onKeyDown.bind(this);
        this._onClick = this._onClick.bind(this);
        this._onTouchMove = this._onTouchMove.bind(this);
        this._onTouchEnd = this._onTouchEnd.bind(this);
        this._onMouseDown = this._onMouseDown.bind(this);
        this._onMouseOver = this._onMouseOver.bind(this);
        this._onFormReset = this._onFormReset.bind(this);
        this._onSelectKey = this._onSelectKey.bind(this);
        this._onEnterKey = this._onEnterKey.bind(this);
        this._onEscapeKey = this._onEscapeKey.bind(this);
        this._onDirectionKey = this._onDirectionKey.bind(this);
        this._onDeleteKey = this._onDeleteKey.bind(this);
        // If element has already been initialised with Choices, fail silently
        if (this.passedElement.isActive) {
          if (!this.config.silent) {
            console.warn('Trying to initialise Choices on element already initialised', {
              element: element
            });
          }
          this.initialised = true;
          return;
        }
        // Let's go
        this.init();
      }
      Object.defineProperty(Choices, "defaults", {
        get: function () {
          return Object.preventExtensions({
            get options() {
              return USER_DEFAULTS;
            },
            get templates() {
              return templates_1.default;
            }
          });
        },
        enumerable: false,
        configurable: true
      });
      Choices.prototype.init = function () {
        if (this.initialised) {
          return;
        }
        this._createTemplates();
        this._createElements();
        this._createStructure();
        this._store.subscribe(this._render);
        this._render();
        this._addEventListeners();
        var shouldDisable = !this.config.addItems || this.passedElement.element.hasAttribute('disabled');
        if (shouldDisable) {
          this.disable();
        }
        this.initialised = true;
        var callbackOnInit = this.config.callbackOnInit;
        // Run callback if it is a function
        if (callbackOnInit && typeof callbackOnInit === 'function') {
          callbackOnInit.call(this);
        }
      };
      Choices.prototype.destroy = function () {
        if (!this.initialised) {
          return;
        }
        this._removeEventListeners();
        this.passedElement.reveal();
        this.containerOuter.unwrap(this.passedElement.element);
        this.clearStore();
        if (this._isSelectElement) {
          this.passedElement.options = this._presetOptions;
        }
        this._templates = templates_1.default;
        this.initialised = false;
      };
      Choices.prototype.enable = function () {
        if (this.passedElement.isDisabled) {
          this.passedElement.enable();
        }
        if (this.containerOuter.isDisabled) {
          this._addEventListeners();
          this.input.enable();
          this.containerOuter.enable();
        }
        return this;
      };
      Choices.prototype.disable = function () {
        if (!this.passedElement.isDisabled) {
          this.passedElement.disable();
        }
        if (!this.containerOuter.isDisabled) {
          this._removeEventListeners();
          this.input.disable();
          this.containerOuter.disable();
        }
        return this;
      };
      Choices.prototype.highlightItem = function (item, runEvent) {
        if (runEvent === void 0) {
          runEvent = true;
        }
        if (!item || !item.id) {
          return this;
        }
        var id = item.id,
          _a = item.groupId,
          groupId = _a === void 0 ? -1 : _a,
          _b = item.value,
          value = _b === void 0 ? '' : _b,
          _c = item.label,
          label = _c === void 0 ? '' : _c;
        var group = groupId >= 0 ? this._store.getGroupById(groupId) : null;
        this._store.dispatch((0, items_1.highlightItem)(id, true));
        if (runEvent) {
          this.passedElement.triggerEvent(constants_1.EVENTS.highlightItem, {
            id: id,
            value: value,
            label: label,
            groupValue: group && group.value ? group.value : null
          });
        }
        return this;
      };
      Choices.prototype.unhighlightItem = function (item) {
        if (!item || !item.id) {
          return this;
        }
        var id = item.id,
          _a = item.groupId,
          groupId = _a === void 0 ? -1 : _a,
          _b = item.value,
          value = _b === void 0 ? '' : _b,
          _c = item.label,
          label = _c === void 0 ? '' : _c;
        var group = groupId >= 0 ? this._store.getGroupById(groupId) : null;
        this._store.dispatch((0, items_1.highlightItem)(id, false));
        this.passedElement.triggerEvent(constants_1.EVENTS.highlightItem, {
          id: id,
          value: value,
          label: label,
          groupValue: group && group.value ? group.value : null
        });
        return this;
      };
      Choices.prototype.highlightAll = function () {
        var _this = this;
        this._store.items.forEach(function (item) {
          return _this.highlightItem(item);
        });
        return this;
      };
      Choices.prototype.unhighlightAll = function () {
        var _this = this;
        this._store.items.forEach(function (item) {
          return _this.unhighlightItem(item);
        });
        return this;
      };
      Choices.prototype.removeActiveItemsByValue = function (value) {
        var _this = this;
        this._store.activeItems.filter(function (item) {
          return item.value === value;
        }).forEach(function (item) {
          return _this._removeItem(item);
        });
        return this;
      };
      Choices.prototype.removeActiveItems = function (excludedId) {
        var _this = this;
        this._store.activeItems.filter(function (_a) {
          var id = _a.id;
          return id !== excludedId;
        }).forEach(function (item) {
          return _this._removeItem(item);
        });
        return this;
      };
      Choices.prototype.removeHighlightedItems = function (runEvent) {
        var _this = this;
        if (runEvent === void 0) {
          runEvent = false;
        }
        this._store.highlightedActiveItems.forEach(function (item) {
          _this._removeItem(item);
          // If this action was performed by the user
          // trigger the event
          if (runEvent) {
            _this._triggerChange(item.value);
          }
        });
        return this;
      };
      Choices.prototype.showDropdown = function (preventInputFocus) {
        var _this = this;
        if (this.dropdown.isActive) {
          return this;
        }
        requestAnimationFrame(function () {
          _this.dropdown.show();
          _this.containerOuter.open(_this.dropdown.distanceFromTopWindow);
          if (!preventInputFocus && _this._canSearch) {
            _this.input.focus();
          }
          _this.passedElement.triggerEvent(constants_1.EVENTS.showDropdown, {});
        });
        return this;
      };
      Choices.prototype.hideDropdown = function (preventInputBlur) {
        var _this = this;
        if (!this.dropdown.isActive) {
          return this;
        }
        requestAnimationFrame(function () {
          _this.dropdown.hide();
          _this.containerOuter.close();
          if (!preventInputBlur && _this._canSearch) {
            _this.input.removeActiveDescendant();
            _this.input.blur();
          }
          _this.passedElement.triggerEvent(constants_1.EVENTS.hideDropdown, {});
        });
        return this;
      };
      Choices.prototype.getValue = function (valueOnly) {
        if (valueOnly === void 0) {
          valueOnly = false;
        }
        var values = this._store.activeItems.reduce(function (selectedItems, item) {
          var itemValue = valueOnly ? item.value : item;
          selectedItems.push(itemValue);
          return selectedItems;
        }, []);
        return this._isSelectOneElement ? values[0] : values;
      };
      Choices.prototype.setValue = function (items) {
        var _this = this;
        if (!this.initialised) {
          return this;
        }
        items.forEach(function (value) {
          return _this._setChoiceOrItem(value);
        });
        return this;
      };
      Choices.prototype.setChoiceByValue = function (value) {
        var _this = this;
        if (!this.initialised || this._isTextElement) {
          return this;
        }
        // If only one value has been passed, convert to array
        var choiceValue = Array.isArray(value) ? value : [value];
        // Loop through each value and
        choiceValue.forEach(function (val) {
          return _this._findAndSelectChoiceByValue(val);
        });
        return this;
      };
      /**
       * Set choices of select input via an array of objects (or function that returns array of object or promise of it),
       * a value field name and a label field name.
       * This behaves the same as passing items via the choices option but can be called after initialising Choices.
       * This can also be used to add groups of choices (see example 2); Optionally pass a true `replaceChoices` value to remove any existing choices.
       * Optionally pass a `customProperties` object to add additional data to your choices (useful when searching/filtering etc).
       *
       * **Input types affected:** select-one, select-multiple
       *
       * @example
       * ```js
       * const example = new Choices(element);
       *
       * example.setChoices([
       *   {value: 'One', label: 'Label One', disabled: true},
       *   {value: 'Two', label: 'Label Two', selected: true},
       *   {value: 'Three', label: 'Label Three'},
       * ], 'value', 'label', false);
       * ```
       *
       * @example
       * ```js
       * const example = new Choices(element);
       *
       * example.setChoices(async () => {
       *   try {
       *      const items = await fetch('/items');
       *      return items.json()
       *   } catch(err) {
       *      console.error(err)
       *   }
       * });
       * ```
       *
       * @example
       * ```js
       * const example = new Choices(element);
       *
       * example.setChoices([{
       *   label: 'Group one',
       *   id: 1,
       *   disabled: false,
       *   choices: [
       *     {value: 'Child One', label: 'Child One', selected: true},
       *     {value: 'Child Two', label: 'Child Two',  disabled: true},
       *     {value: 'Child Three', label: 'Child Three'},
       *   ]
       * },
       * {
       *   label: 'Group two',
       *   id: 2,
       *   disabled: false,
       *   choices: [
       *     {value: 'Child Four', label: 'Child Four', disabled: true},
       *     {value: 'Child Five', label: 'Child Five'},
       *     {value: 'Child Six', label: 'Child Six', customProperties: {
       *       description: 'Custom description about child six',
       *       random: 'Another random custom property'
       *     }},
       *   ]
       * }], 'value', 'label', false);
       * ```
       */
      Choices.prototype.setChoices = function (choicesArrayOrFetcher, value, label, replaceChoices) {
        var _this = this;
        if (choicesArrayOrFetcher === void 0) {
          choicesArrayOrFetcher = [];
        }
        if (value === void 0) {
          value = 'value';
        }
        if (label === void 0) {
          label = 'label';
        }
        if (replaceChoices === void 0) {
          replaceChoices = false;
        }
        if (!this.initialised) {
          throw new ReferenceError("setChoices was called on a non-initialized instance of Choices");
        }
        if (!this._isSelectElement) {
          throw new TypeError("setChoices can't be used with INPUT based Choices");
        }
        if (typeof value !== 'string' || !value) {
          throw new TypeError("value parameter must be a name of 'value' field in passed objects");
        }
        // Clear choices if needed
        if (replaceChoices) {
          this.clearChoices();
        }
        if (typeof choicesArrayOrFetcher === 'function') {
          // it's a choices fetcher function
          var fetcher_1 = choicesArrayOrFetcher(this);
          if (typeof Promise === 'function' && fetcher_1 instanceof Promise) {
            // that's a promise
            // eslint-disable-next-line no-promise-executor-return
            return new Promise(function (resolve) {
              return requestAnimationFrame(resolve);
            }).then(function () {
              return _this._handleLoadingState(true);
            }).then(function () {
              return fetcher_1;
            }).then(function (data) {
              return _this.setChoices(data, value, label, replaceChoices);
            }).catch(function (err) {
              if (!_this.config.silent) {
                console.error(err);
              }
            }).then(function () {
              return _this._handleLoadingState(false);
            }).then(function () {
              return _this;
            });
          }
          // function returned something else than promise, let's check if it's an array of choices
          if (!Array.isArray(fetcher_1)) {
            throw new TypeError(".setChoices first argument function must return either array of choices or Promise, got: ".concat(typeof fetcher_1));
          }
          // recursion with results, it's sync and choices were cleared already
          return this.setChoices(fetcher_1, value, label, false);
        }
        if (!Array.isArray(choicesArrayOrFetcher)) {
          throw new TypeError(".setChoices must be called either with array of choices with a function resulting into Promise of array of choices");
        }
        this.containerOuter.removeLoadingState();
        this._startLoading();
        choicesArrayOrFetcher.forEach(function (groupOrChoice) {
          if (groupOrChoice.choices) {
            _this._addGroup({
              id: groupOrChoice.id ? parseInt("".concat(groupOrChoice.id), 10) : null,
              group: groupOrChoice,
              valueKey: value,
              labelKey: label
            });
          } else {
            var choice = groupOrChoice;
            _this._addChoice({
              value: choice[value],
              label: choice[label],
              isSelected: !!choice.selected,
              isDisabled: !!choice.disabled,
              placeholder: !!choice.placeholder,
              customProperties: choice.customProperties
            });
          }
        });
        this._stopLoading();
        return this;
      };
      Choices.prototype.clearChoices = function () {
        this._store.dispatch((0, choices_1.clearChoices)());
        return this;
      };
      Choices.prototype.clearStore = function () {
        this._store.dispatch((0, misc_1.clearAll)());
        return this;
      };
      Choices.prototype.clearInput = function () {
        var shouldSetInputWidth = !this._isSelectOneElement;
        this.input.clear(shouldSetInputWidth);
        if (!this._isTextElement && this._canSearch) {
          this._isSearching = false;
          this._store.dispatch((0, choices_1.activateChoices)(true));
        }
        return this;
      };
      Choices.prototype._render = function () {
        if (this._store.isLoading()) {
          return;
        }
        this._currentState = this._store.state;
        var stateChanged = this._currentState.choices !== this._prevState.choices || this._currentState.groups !== this._prevState.groups || this._currentState.items !== this._prevState.items;
        var shouldRenderChoices = this._isSelectElement;
        var shouldRenderItems = this._currentState.items !== this._prevState.items;
        if (!stateChanged) {
          return;
        }
        if (shouldRenderChoices) {
          this._renderChoices();
        }
        if (shouldRenderItems) {
          this._renderItems();
        }
        this._prevState = this._currentState;
      };
      Choices.prototype._renderChoices = function () {
        var _this = this;
        var _a = this._store,
          activeGroups = _a.activeGroups,
          activeChoices = _a.activeChoices;
        var choiceListFragment = document.createDocumentFragment();
        this.choiceList.clear();
        if (this.config.resetScrollPosition) {
          requestAnimationFrame(function () {
            return _this.choiceList.scrollToTop();
          });
        }
        // If we have grouped options
        if (activeGroups.length >= 1 && !this._isSearching) {
          // If we have a placeholder choice along with groups
          var activePlaceholders = activeChoices.filter(function (activeChoice) {
            return activeChoice.placeholder === true && activeChoice.groupId === -1;
          });
          if (activePlaceholders.length >= 1) {
            choiceListFragment = this._createChoicesFragment(activePlaceholders, choiceListFragment);
          }
          choiceListFragment = this._createGroupsFragment(activeGroups, activeChoices, choiceListFragment);
        } else if (activeChoices.length >= 1) {
          choiceListFragment = this._createChoicesFragment(activeChoices, choiceListFragment);
        }
        // If we have choices to show
        if (choiceListFragment.childNodes && choiceListFragment.childNodes.length > 0) {
          var activeItems = this._store.activeItems;
          var canAddItem = this._canAddItem(activeItems, this.input.value);
          // ...and we can select them
          if (canAddItem.response) {
            // ...append them and highlight the first choice
            this.choiceList.append(choiceListFragment);
            this._highlightChoice();
          } else {
            var notice = this._getTemplate('notice', canAddItem.notice);
            this.choiceList.append(notice);
          }
        } else {
          // Otherwise show a notice
          var dropdownItem = void 0;
          var notice = void 0;
          if (this._isSearching) {
            notice = typeof this.config.noResultsText === 'function' ? this.config.noResultsText() : this.config.noResultsText;
            dropdownItem = this._getTemplate('notice', notice, 'no-results');
          } else {
            notice = typeof this.config.noChoicesText === 'function' ? this.config.noChoicesText() : this.config.noChoicesText;
            dropdownItem = this._getTemplate('notice', notice, 'no-choices');
          }
          this.choiceList.append(dropdownItem);
        }
      };
      Choices.prototype._renderItems = function () {
        var activeItems = this._store.activeItems || [];
        this.itemList.clear();
        // Create a fragment to store our list items
        // (so we don't have to update the DOM for each item)
        var itemListFragment = this._createItemsFragment(activeItems);
        // If we have items to add, append them
        if (itemListFragment.childNodes) {
          this.itemList.append(itemListFragment);
        }
      };
      Choices.prototype._createGroupsFragment = function (groups, choices, fragment) {
        var _this = this;
        if (fragment === void 0) {
          fragment = document.createDocumentFragment();
        }
        var getGroupChoices = function (group) {
          return choices.filter(function (choice) {
            if (_this._isSelectOneElement) {
              return choice.groupId === group.id;
            }
            return choice.groupId === group.id && (_this.config.renderSelectedChoices === 'always' || !choice.selected);
          });
        };
        // If sorting is enabled, filter groups
        if (this.config.shouldSort) {
          groups.sort(this.config.sorter);
        }
        groups.forEach(function (group) {
          var groupChoices = getGroupChoices(group);
          if (groupChoices.length >= 1) {
            var dropdownGroup = _this._getTemplate('choiceGroup', group);
            fragment.appendChild(dropdownGroup);
            _this._createChoicesFragment(groupChoices, fragment, true);
          }
        });
        return fragment;
      };
      Choices.prototype._createChoicesFragment = function (choices, fragment, withinGroup) {
        var _this = this;
        if (fragment === void 0) {
          fragment = document.createDocumentFragment();
        }
        if (withinGroup === void 0) {
          withinGroup = false;
        }
        // Create a fragment to store our list items (so we don't have to update the DOM for each item)
        var _a = this.config,
          renderSelectedChoices = _a.renderSelectedChoices,
          searchResultLimit = _a.searchResultLimit,
          renderChoiceLimit = _a.renderChoiceLimit;
        var filter = this._isSearching ? utils_1.sortByScore : this.config.sorter;
        var appendChoice = function (choice) {
          var shouldRender = renderSelectedChoices === 'auto' ? _this._isSelectOneElement || !choice.selected : true;
          if (shouldRender) {
            var dropdownItem = _this._getTemplate('choice', choice, _this.config.itemSelectText);
            fragment.appendChild(dropdownItem);
          }
        };
        var rendererableChoices = choices;
        if (renderSelectedChoices === 'auto' && !this._isSelectOneElement) {
          rendererableChoices = choices.filter(function (choice) {
            return !choice.selected;
          });
        }
        // Split array into placeholders and "normal" choices
        var _b = rendererableChoices.reduce(function (acc, choice) {
            if (choice.placeholder) {
              acc.placeholderChoices.push(choice);
            } else {
              acc.normalChoices.push(choice);
            }
            return acc;
          }, {
            placeholderChoices: [],
            normalChoices: []
          }),
          placeholderChoices = _b.placeholderChoices,
          normalChoices = _b.normalChoices;
        // If sorting is enabled or the user is searching, filter choices
        if (this.config.shouldSort || this._isSearching) {
          normalChoices.sort(filter);
        }
        var choiceLimit = rendererableChoices.length;
        // Prepend placeholeder
        var sortedChoices = this._isSelectOneElement ? __spreadArray(__spreadArray([], placeholderChoices, true), normalChoices, true) : normalChoices;
        if (this._isSearching) {
          choiceLimit = searchResultLimit;
        } else if (renderChoiceLimit && renderChoiceLimit > 0 && !withinGroup) {
          choiceLimit = renderChoiceLimit;
        }
        // Add each choice to dropdown within range
        for (var i = 0; i < choiceLimit; i += 1) {
          if (sortedChoices[i]) {
            appendChoice(sortedChoices[i]);
          }
        }
        return fragment;
      };
      Choices.prototype._createItemsFragment = function (items, fragment) {
        var _this = this;
        if (fragment === void 0) {
          fragment = document.createDocumentFragment();
        }
        // Create fragment to add elements to
        var _a = this.config,
          shouldSortItems = _a.shouldSortItems,
          sorter = _a.sorter,
          removeItemButton = _a.removeItemButton;
        // If sorting is enabled, filter items
        if (shouldSortItems && !this._isSelectOneElement) {
          items.sort(sorter);
        }
        if (this._isTextElement) {
          // Update the value of the hidden input
          this.passedElement.value = items.map(function (_a) {
            var value = _a.value;
            return value;
          }).join(this.config.delimiter);
        } else {
          // Update the options of the hidden input
          this.passedElement.options = items;
        }
        var addItemToFragment = function (item) {
          // Create new list element
          var listItem = _this._getTemplate('item', item, removeItemButton);
          // Append it to list
          fragment.appendChild(listItem);
        };
        // Add each list item to list
        items.forEach(addItemToFragment);
        return fragment;
      };
      Choices.prototype._triggerChange = function (value) {
        if (value === undefined || value === null) {
          return;
        }
        this.passedElement.triggerEvent(constants_1.EVENTS.change, {
          value: value
        });
      };
      Choices.prototype._selectPlaceholderChoice = function (placeholderChoice) {
        this._addItem({
          value: placeholderChoice.value,
          label: placeholderChoice.label,
          choiceId: placeholderChoice.id,
          groupId: placeholderChoice.groupId,
          placeholder: placeholderChoice.placeholder
        });
        this._triggerChange(placeholderChoice.value);
      };
      Choices.prototype._handleButtonAction = function (activeItems, element) {
        if (!activeItems || !element || !this.config.removeItems || !this.config.removeItemButton) {
          return;
        }
        var itemId = element.parentNode && element.parentNode.dataset.id;
        var itemToRemove = itemId && activeItems.find(function (item) {
          return item.id === parseInt(itemId, 10);
        });
        if (!itemToRemove) {
          return;
        }
        // Remove item associated with button
        this._removeItem(itemToRemove);
        this._triggerChange(itemToRemove.value);
        if (this._isSelectOneElement && this._store.placeholderChoice) {
          this._selectPlaceholderChoice(this._store.placeholderChoice);
        }
      };
      Choices.prototype._handleItemAction = function (activeItems, element, hasShiftKey) {
        var _this = this;
        if (hasShiftKey === void 0) {
          hasShiftKey = false;
        }
        if (!activeItems || !element || !this.config.removeItems || this._isSelectOneElement) {
          return;
        }
        var passedId = element.dataset.id;
        // We only want to select one item with a click
        // so we deselect any items that aren't the target
        // unless shift is being pressed
        activeItems.forEach(function (item) {
          if (item.id === parseInt("".concat(passedId), 10) && !item.highlighted) {
            _this.highlightItem(item);
          } else if (!hasShiftKey && item.highlighted) {
            _this.unhighlightItem(item);
          }
        });
        // Focus input as without focus, a user cannot do anything with a
        // highlighted item
        this.input.focus();
      };
      Choices.prototype._handleChoiceAction = function (activeItems, element) {
        if (!activeItems || !element) {
          return;
        }
        // If we are clicking on an option
        var id = element.dataset.id;
        var choice = id && this._store.getChoiceById(id);
        if (!choice) {
          return;
        }
        var passedKeyCode = activeItems[0] && activeItems[0].keyCode ? activeItems[0].keyCode : undefined;
        var hasActiveDropdown = this.dropdown.isActive;
        // Update choice keyCode
        choice.keyCode = passedKeyCode;
        this.passedElement.triggerEvent(constants_1.EVENTS.choice, {
          choice: choice
        });
        if (!choice.selected && !choice.disabled) {
          var canAddItem = this._canAddItem(activeItems, choice.value);
          if (canAddItem.response) {
            this._addItem({
              value: choice.value,
              label: choice.label,
              choiceId: choice.id,
              groupId: choice.groupId,
              customProperties: choice.customProperties,
              placeholder: choice.placeholder,
              keyCode: choice.keyCode
            });
            this._triggerChange(choice.value);
          }
        }
        this.clearInput();
        // We want to close the dropdown if we are dealing with a single select box
        if (hasActiveDropdown && this._isSelectOneElement) {
          this.hideDropdown(true);
          this.containerOuter.focus();
        }
      };
      Choices.prototype._handleBackspace = function (activeItems) {
        if (!this.config.removeItems || !activeItems) {
          return;
        }
        var lastItem = activeItems[activeItems.length - 1];
        var hasHighlightedItems = activeItems.some(function (item) {
          return item.highlighted;
        });
        // If editing the last item is allowed and there are not other selected items,
        // we can edit the item value. Otherwise if we can remove items, remove all selected items
        if (this.config.editItems && !hasHighlightedItems && lastItem) {
          this.input.value = lastItem.value;
          this.input.setWidth();
          this._removeItem(lastItem);
          this._triggerChange(lastItem.value);
        } else {
          if (!hasHighlightedItems) {
            // Highlight last item if none already highlighted
            this.highlightItem(lastItem, false);
          }
          this.removeHighlightedItems(true);
        }
      };
      Choices.prototype._startLoading = function () {
        this._store.dispatch((0, misc_1.setIsLoading)(true));
      };
      Choices.prototype._stopLoading = function () {
        this._store.dispatch((0, misc_1.setIsLoading)(false));
      };
      Choices.prototype._handleLoadingState = function (setLoading) {
        if (setLoading === void 0) {
          setLoading = true;
        }
        var placeholderItem = this.itemList.getChild(".".concat(this.config.classNames.placeholder));
        if (setLoading) {
          this.disable();
          this.containerOuter.addLoadingState();
          if (this._isSelectOneElement) {
            if (!placeholderItem) {
              placeholderItem = this._getTemplate('placeholder', this.config.loadingText);
              if (placeholderItem) {
                this.itemList.append(placeholderItem);
              }
            } else {
              placeholderItem.innerHTML = this.config.loadingText;
            }
          } else {
            this.input.placeholder = this.config.loadingText;
          }
        } else {
          this.enable();
          this.containerOuter.removeLoadingState();
          if (this._isSelectOneElement) {
            if (placeholderItem) {
              placeholderItem.innerHTML = this._placeholderValue || '';
            }
          } else {
            this.input.placeholder = this._placeholderValue || '';
          }
        }
      };
      Choices.prototype._handleSearch = function (value) {
        if (!this.input.isFocussed) {
          return;
        }
        var choices = this._store.choices;
        var _a = this.config,
          searchFloor = _a.searchFloor,
          searchChoices = _a.searchChoices;
        var hasUnactiveChoices = choices.some(function (option) {
          return !option.active;
        });
        // Check that we have a value to search and the input was an alphanumeric character
        if (value !== null && typeof value !== 'undefined' && value.length >= searchFloor) {
          var resultCount = searchChoices ? this._searchChoices(value) : 0;
          // Trigger search event
          this.passedElement.triggerEvent(constants_1.EVENTS.search, {
            value: value,
            resultCount: resultCount
          });
        } else if (hasUnactiveChoices) {
          // Otherwise reset choices to active
          this._isSearching = false;
          this._store.dispatch((0, choices_1.activateChoices)(true));
        }
      };
      Choices.prototype._canAddItem = function (activeItems, value) {
        var canAddItem = true;
        var notice = typeof this.config.addItemText === 'function' ? this.config.addItemText(value) : this.config.addItemText;
        if (!this._isSelectOneElement) {
          var isDuplicateValue = (0, utils_1.existsInArray)(activeItems, value);
          if (this.config.maxItemCount > 0 && this.config.maxItemCount <= activeItems.length) {
            // If there is a max entry limit and we have reached that limit
            // don't update
            canAddItem = false;
            notice = typeof this.config.maxItemText === 'function' ? this.config.maxItemText(this.config.maxItemCount) : this.config.maxItemText;
          }
          if (!this.config.duplicateItemsAllowed && isDuplicateValue && canAddItem) {
            canAddItem = false;
            notice = typeof this.config.uniqueItemText === 'function' ? this.config.uniqueItemText(value) : this.config.uniqueItemText;
          }
          if (this._isTextElement && this.config.addItems && canAddItem && typeof this.config.addItemFilter === 'function' && !this.config.addItemFilter(value)) {
            canAddItem = false;
            notice = typeof this.config.customAddItemText === 'function' ? this.config.customAddItemText(value) : this.config.customAddItemText;
          }
        }
        return {
          response: canAddItem,
          notice: notice
        };
      };
      Choices.prototype._searchChoices = function (value) {
        var newValue = typeof value === 'string' ? value.trim() : value;
        var currentValue = typeof this._currentValue === 'string' ? this._currentValue.trim() : this._currentValue;
        if (newValue.length < 1 && newValue === "".concat(currentValue, " ")) {
          return 0;
        }
        // If new value matches the desired length and is not the same as the current value with a space
        var haystack = this._store.searchableChoices;
        var needle = newValue;
        var options = Object.assign(this.config.fuseOptions, {
          keys: __spreadArray([], this.config.searchFields, true),
          includeMatches: true
        });
        var fuse = new fuse_js_1.default(haystack, options);
        var results = fuse.search(needle); // see https://github.com/krisk/Fuse/issues/303
        this._currentValue = newValue;
        this._highlightPosition = 0;
        this._isSearching = true;
        this._store.dispatch((0, choices_1.filterChoices)(results));
        return results.length;
      };
      Choices.prototype._addEventListeners = function () {
        var documentElement = document.documentElement;
        // capture events - can cancel event processing or propagation
        documentElement.addEventListener('touchend', this._onTouchEnd, true);
        this.containerOuter.element.addEventListener('keydown', this._onKeyDown, true);
        this.containerOuter.element.addEventListener('mousedown', this._onMouseDown, true);
        // passive events - doesn't call `preventDefault` or `stopPropagation`
        documentElement.addEventListener('click', this._onClick, {
          passive: true
        });
        documentElement.addEventListener('touchmove', this._onTouchMove, {
          passive: true
        });
        this.dropdown.element.addEventListener('mouseover', this._onMouseOver, {
          passive: true
        });
        if (this._isSelectOneElement) {
          this.containerOuter.element.addEventListener('focus', this._onFocus, {
            passive: true
          });
          this.containerOuter.element.addEventListener('blur', this._onBlur, {
            passive: true
          });
        }
        this.input.element.addEventListener('keyup', this._onKeyUp, {
          passive: true
        });
        this.input.element.addEventListener('focus', this._onFocus, {
          passive: true
        });
        this.input.element.addEventListener('blur', this._onBlur, {
          passive: true
        });
        if (this.input.element.form) {
          this.input.element.form.addEventListener('reset', this._onFormReset, {
            passive: true
          });
        }
        this.input.addEventListeners();
      };
      Choices.prototype._removeEventListeners = function () {
        var documentElement = document.documentElement;
        documentElement.removeEventListener('touchend', this._onTouchEnd, true);
        this.containerOuter.element.removeEventListener('keydown', this._onKeyDown, true);
        this.containerOuter.element.removeEventListener('mousedown', this._onMouseDown, true);
        documentElement.removeEventListener('click', this._onClick);
        documentElement.removeEventListener('touchmove', this._onTouchMove);
        this.dropdown.element.removeEventListener('mouseover', this._onMouseOver);
        if (this._isSelectOneElement) {
          this.containerOuter.element.removeEventListener('focus', this._onFocus);
          this.containerOuter.element.removeEventListener('blur', this._onBlur);
        }
        this.input.element.removeEventListener('keyup', this._onKeyUp);
        this.input.element.removeEventListener('focus', this._onFocus);
        this.input.element.removeEventListener('blur', this._onBlur);
        if (this.input.element.form) {
          this.input.element.form.removeEventListener('reset', this._onFormReset);
        }
        this.input.removeEventListeners();
      };
      Choices.prototype._onKeyDown = function (event) {
        var keyCode = event.keyCode;
        var activeItems = this._store.activeItems;
        var hasFocusedInput = this.input.isFocussed;
        var hasActiveDropdown = this.dropdown.isActive;
        var hasItems = this.itemList.hasChildren();
        var keyString = String.fromCharCode(keyCode);
        // eslint-disable-next-line no-control-regex
        var wasPrintableChar = /[^\x00-\x1F]/.test(keyString);
        var BACK_KEY = constants_1.KEY_CODES.BACK_KEY,
          DELETE_KEY = constants_1.KEY_CODES.DELETE_KEY,
          ENTER_KEY = constants_1.KEY_CODES.ENTER_KEY,
          A_KEY = constants_1.KEY_CODES.A_KEY,
          ESC_KEY = constants_1.KEY_CODES.ESC_KEY,
          UP_KEY = constants_1.KEY_CODES.UP_KEY,
          DOWN_KEY = constants_1.KEY_CODES.DOWN_KEY,
          PAGE_UP_KEY = constants_1.KEY_CODES.PAGE_UP_KEY,
          PAGE_DOWN_KEY = constants_1.KEY_CODES.PAGE_DOWN_KEY;
        if (!this._isTextElement && !hasActiveDropdown && wasPrintableChar) {
          this.showDropdown();
          if (!this.input.isFocussed) {
            /*
              We update the input value with the pressed key as
              the input was not focussed at the time of key press
              therefore does not have the value of the key.
            */
            this.input.value += event.key.toLowerCase();
          }
        }
        switch (keyCode) {
          case A_KEY:
            return this._onSelectKey(event, hasItems);
          case ENTER_KEY:
            return this._onEnterKey(event, activeItems, hasActiveDropdown);
          case ESC_KEY:
            return this._onEscapeKey(hasActiveDropdown);
          case UP_KEY:
          case PAGE_UP_KEY:
          case DOWN_KEY:
          case PAGE_DOWN_KEY:
            return this._onDirectionKey(event, hasActiveDropdown);
          case DELETE_KEY:
          case BACK_KEY:
            return this._onDeleteKey(event, activeItems, hasFocusedInput);
          default:
        }
      };
      Choices.prototype._onKeyUp = function (_a) {
        var target = _a.target,
          keyCode = _a.keyCode;
        var value = this.input.value;
        var activeItems = this._store.activeItems;
        var canAddItem = this._canAddItem(activeItems, value);
        var backKey = constants_1.KEY_CODES.BACK_KEY,
          deleteKey = constants_1.KEY_CODES.DELETE_KEY;
        // We are typing into a text input and have a value, we want to show a dropdown
        // notice. Otherwise hide the dropdown
        if (this._isTextElement) {
          var canShowDropdownNotice = canAddItem.notice && value;
          if (canShowDropdownNotice) {
            var dropdownItem = this._getTemplate('notice', canAddItem.notice);
            this.dropdown.element.innerHTML = dropdownItem.outerHTML;
            this.showDropdown(true);
          } else {
            this.hideDropdown(true);
          }
        } else {
          var wasRemovalKeyCode = keyCode === backKey || keyCode === deleteKey;
          var userHasRemovedValue = wasRemovalKeyCode && target && !target.value;
          var canReactivateChoices = !this._isTextElement && this._isSearching;
          var canSearch = this._canSearch && canAddItem.response;
          if (userHasRemovedValue && canReactivateChoices) {
            this._isSearching = false;
            this._store.dispatch((0, choices_1.activateChoices)(true));
          } else if (canSearch) {
            this._handleSearch(this.input.rawValue);
          }
        }
        this._canSearch = this.config.searchEnabled;
      };
      Choices.prototype._onSelectKey = function (event, hasItems) {
        var ctrlKey = event.ctrlKey,
          metaKey = event.metaKey;
        var hasCtrlDownKeyPressed = ctrlKey || metaKey;
        // If CTRL + A or CMD + A have been pressed and there are items to select
        if (hasCtrlDownKeyPressed && hasItems) {
          this._canSearch = false;
          var shouldHightlightAll = this.config.removeItems && !this.input.value && this.input.element === document.activeElement;
          if (shouldHightlightAll) {
            this.highlightAll();
          }
        }
      };
      Choices.prototype._onEnterKey = function (event, activeItems, hasActiveDropdown) {
        var target = event.target;
        var enterKey = constants_1.KEY_CODES.ENTER_KEY;
        var targetWasButton = target && target.hasAttribute('data-button');
        if (this._isTextElement && target && target.value) {
          var value = this.input.value;
          var canAddItem = this._canAddItem(activeItems, value);
          if (canAddItem.response) {
            this.hideDropdown(true);
            this._addItem({
              value: value
            });
            this._triggerChange(value);
            this.clearInput();
          }
        }
        if (targetWasButton) {
          this._handleButtonAction(activeItems, target);
          event.preventDefault();
        }
        if (hasActiveDropdown) {
          var highlightedChoice = this.dropdown.getChild(".".concat(this.config.classNames.highlightedState));
          if (highlightedChoice) {
            // add enter keyCode value
            if (activeItems[0]) {
              activeItems[0].keyCode = enterKey; // eslint-disable-line no-param-reassign
            }

            this._handleChoiceAction(activeItems, highlightedChoice);
          }
          event.preventDefault();
        } else if (this._isSelectOneElement) {
          this.showDropdown();
          event.preventDefault();
        }
      };
      Choices.prototype._onEscapeKey = function (hasActiveDropdown) {
        if (hasActiveDropdown) {
          this.hideDropdown(true);
          this.containerOuter.focus();
        }
      };
      Choices.prototype._onDirectionKey = function (event, hasActiveDropdown) {
        var keyCode = event.keyCode,
          metaKey = event.metaKey;
        var downKey = constants_1.KEY_CODES.DOWN_KEY,
          pageUpKey = constants_1.KEY_CODES.PAGE_UP_KEY,
          pageDownKey = constants_1.KEY_CODES.PAGE_DOWN_KEY;
        // If up or down key is pressed, traverse through options
        if (hasActiveDropdown || this._isSelectOneElement) {
          this.showDropdown();
          this._canSearch = false;
          var directionInt = keyCode === downKey || keyCode === pageDownKey ? 1 : -1;
          var skipKey = metaKey || keyCode === pageDownKey || keyCode === pageUpKey;
          var selectableChoiceIdentifier = '[data-choice-selectable]';
          var nextEl = void 0;
          if (skipKey) {
            if (directionInt > 0) {
              nextEl = this.dropdown.element.querySelector("".concat(selectableChoiceIdentifier, ":last-of-type"));
            } else {
              nextEl = this.dropdown.element.querySelector(selectableChoiceIdentifier);
            }
          } else {
            var currentEl = this.dropdown.element.querySelector(".".concat(this.config.classNames.highlightedState));
            if (currentEl) {
              nextEl = (0, utils_1.getAdjacentEl)(currentEl, selectableChoiceIdentifier, directionInt);
            } else {
              nextEl = this.dropdown.element.querySelector(selectableChoiceIdentifier);
            }
          }
          if (nextEl) {
            // We prevent default to stop the cursor moving
            // when pressing the arrow
            if (!(0, utils_1.isScrolledIntoView)(nextEl, this.choiceList.element, directionInt)) {
              this.choiceList.scrollToChildElement(nextEl, directionInt);
            }
            this._highlightChoice(nextEl);
          }
          // Prevent default to maintain cursor position whilst
          // traversing dropdown options
          event.preventDefault();
        }
      };
      Choices.prototype._onDeleteKey = function (event, activeItems, hasFocusedInput) {
        var target = event.target;
        // If backspace or delete key is pressed and the input has no value
        if (!this._isSelectOneElement && !target.value && hasFocusedInput) {
          this._handleBackspace(activeItems);
          event.preventDefault();
        }
      };
      Choices.prototype._onTouchMove = function () {
        if (this._wasTap) {
          this._wasTap = false;
        }
      };
      Choices.prototype._onTouchEnd = function (event) {
        var target = (event || event.touches[0]).target;
        var touchWasWithinContainer = this._wasTap && this.containerOuter.element.contains(target);
        if (touchWasWithinContainer) {
          var containerWasExactTarget = target === this.containerOuter.element || target === this.containerInner.element;
          if (containerWasExactTarget) {
            if (this._isTextElement) {
              this.input.focus();
            } else if (this._isSelectMultipleElement) {
              this.showDropdown();
            }
          }
          // Prevents focus event firing
          event.stopPropagation();
        }
        this._wasTap = true;
      };
      /**
       * Handles mousedown event in capture mode for containetOuter.element
       */
      Choices.prototype._onMouseDown = function (event) {
        var target = event.target;
        if (!(target instanceof HTMLElement)) {
          return;
        }
        // If we have our mouse down on the scrollbar and are on IE11...
        if (IS_IE11 && this.choiceList.element.contains(target)) {
          // check if click was on a scrollbar area
          var firstChoice = this.choiceList.element.firstElementChild;
          var isOnScrollbar = this._direction === 'ltr' ? event.offsetX >= firstChoice.offsetWidth : event.offsetX < firstChoice.offsetLeft;
          this._isScrollingOnIe = isOnScrollbar;
        }
        if (target === this.input.element) {
          return;
        }
        var item = target.closest('[data-button],[data-item],[data-choice]');
        if (item instanceof HTMLElement) {
          var hasShiftKey = event.shiftKey;
          var activeItems = this._store.activeItems;
          var dataset = item.dataset;
          if ('button' in dataset) {
            this._handleButtonAction(activeItems, item);
          } else if ('item' in dataset) {
            this._handleItemAction(activeItems, item, hasShiftKey);
          } else if ('choice' in dataset) {
            this._handleChoiceAction(activeItems, item);
          }
        }
        event.preventDefault();
      };
      /**
       * Handles mouseover event over this.dropdown
       * @param {MouseEvent} event
       */
      Choices.prototype._onMouseOver = function (_a) {
        var target = _a.target;
        if (target instanceof HTMLElement && 'choice' in target.dataset) {
          this._highlightChoice(target);
        }
      };
      Choices.prototype._onClick = function (_a) {
        var target = _a.target;
        var clickWasWithinContainer = this.containerOuter.element.contains(target);
        if (clickWasWithinContainer) {
          if (!this.dropdown.isActive && !this.containerOuter.isDisabled) {
            if (this._isTextElement) {
              if (document.activeElement !== this.input.element) {
                this.input.focus();
              }
            } else {
              this.showDropdown();
              this.containerOuter.focus();
            }
          } else if (this._isSelectOneElement && target !== this.input.element && !this.dropdown.element.contains(target)) {
            this.hideDropdown();
          }
        } else {
          var hasHighlightedItems = this._store.highlightedActiveItems.length > 0;
          if (hasHighlightedItems) {
            this.unhighlightAll();
          }
          this.containerOuter.removeFocusState();
          this.hideDropdown(true);
        }
      };
      Choices.prototype._onFocus = function (_a) {
        var _b;
        var _this = this;
        var target = _a.target;
        var focusWasWithinContainer = target && this.containerOuter.element.contains(target);
        if (!focusWasWithinContainer) {
          return;
        }
        var focusActions = (_b = {}, _b[constants_1.TEXT_TYPE] = function () {
          if (target === _this.input.element) {
            _this.containerOuter.addFocusState();
          }
        }, _b[constants_1.SELECT_ONE_TYPE] = function () {
          _this.containerOuter.addFocusState();
          if (target === _this.input.element) {
            _this.showDropdown(true);
          }
        }, _b[constants_1.SELECT_MULTIPLE_TYPE] = function () {
          if (target === _this.input.element) {
            _this.showDropdown(true);
            // If element is a select box, the focused element is the container and the dropdown
            // isn't already open, focus and show dropdown
            _this.containerOuter.addFocusState();
          }
        }, _b);
        focusActions[this.passedElement.element.type]();
      };
      Choices.prototype._onBlur = function (_a) {
        var _b;
        var _this = this;
        var target = _a.target;
        var blurWasWithinContainer = target && this.containerOuter.element.contains(target);
        if (blurWasWithinContainer && !this._isScrollingOnIe) {
          var activeItems = this._store.activeItems;
          var hasHighlightedItems_1 = activeItems.some(function (item) {
            return item.highlighted;
          });
          var blurActions = (_b = {}, _b[constants_1.TEXT_TYPE] = function () {
            if (target === _this.input.element) {
              _this.containerOuter.removeFocusState();
              if (hasHighlightedItems_1) {
                _this.unhighlightAll();
              }
              _this.hideDropdown(true);
            }
          }, _b[constants_1.SELECT_ONE_TYPE] = function () {
            _this.containerOuter.removeFocusState();
            if (target === _this.input.element || target === _this.containerOuter.element && !_this._canSearch) {
              _this.hideDropdown(true);
            }
          }, _b[constants_1.SELECT_MULTIPLE_TYPE] = function () {
            if (target === _this.input.element) {
              _this.containerOuter.removeFocusState();
              _this.hideDropdown(true);
              if (hasHighlightedItems_1) {
                _this.unhighlightAll();
              }
            }
          }, _b);
          blurActions[this.passedElement.element.type]();
        } else {
          // On IE11, clicking the scollbar blurs our input and thus
          // closes the dropdown. To stop this, we refocus our input
          // if we know we are on IE *and* are scrolling.
          this._isScrollingOnIe = false;
          this.input.element.focus();
        }
      };
      Choices.prototype._onFormReset = function () {
        this._store.dispatch((0, misc_1.resetTo)(this._initialState));
      };
      Choices.prototype._highlightChoice = function (el) {
        var _this = this;
        if (el === void 0) {
          el = null;
        }
        var choices = Array.from(this.dropdown.element.querySelectorAll('[data-choice-selectable]'));
        if (!choices.length) {
          return;
        }
        var passedEl = el;
        var highlightedChoices = Array.from(this.dropdown.element.querySelectorAll(".".concat(this.config.classNames.highlightedState)));
        // Remove any highlighted choices
        highlightedChoices.forEach(function (choice) {
          choice.classList.remove(_this.config.classNames.highlightedState);
          choice.setAttribute('aria-selected', 'false');
        });
        if (passedEl) {
          this._highlightPosition = choices.indexOf(passedEl);
        } else {
          // Highlight choice based on last known highlight location
          if (choices.length > this._highlightPosition) {
            // If we have an option to highlight
            passedEl = choices[this._highlightPosition];
          } else {
            // Otherwise highlight the option before
            passedEl = choices[choices.length - 1];
          }
          if (!passedEl) {
            passedEl = choices[0];
          }
        }
        passedEl.classList.add(this.config.classNames.highlightedState);
        passedEl.setAttribute('aria-selected', 'true');
        this.passedElement.triggerEvent(constants_1.EVENTS.highlightChoice, {
          el: passedEl
        });
        if (this.dropdown.isActive) {
          // IE11 ignores aria-label and blocks virtual keyboard
          // if aria-activedescendant is set without a dropdown
          this.input.setActiveDescendant(passedEl.id);
          this.containerOuter.setActiveDescendant(passedEl.id);
        }
      };
      Choices.prototype._addItem = function (_a) {
        var value = _a.value,
          _b = _a.label,
          label = _b === void 0 ? null : _b,
          _c = _a.choiceId,
          choiceId = _c === void 0 ? -1 : _c,
          _d = _a.groupId,
          groupId = _d === void 0 ? -1 : _d,
          _e = _a.customProperties,
          customProperties = _e === void 0 ? {} : _e,
          _f = _a.placeholder,
          placeholder = _f === void 0 ? false : _f,
          _g = _a.keyCode,
          keyCode = _g === void 0 ? -1 : _g;
        var passedValue = typeof value === 'string' ? value.trim() : value;
        var items = this._store.items;
        var passedLabel = label || passedValue;
        var passedOptionId = choiceId || -1;
        var group = groupId >= 0 ? this._store.getGroupById(groupId) : null;
        var id = items ? items.length + 1 : 1;
        // If a prepended value has been passed, prepend it
        if (this.config.prependValue) {
          passedValue = this.config.prependValue + passedValue.toString();
        }
        // If an appended value has been passed, append it
        if (this.config.appendValue) {
          passedValue += this.config.appendValue.toString();
        }
        this._store.dispatch((0, items_1.addItem)({
          value: passedValue,
          label: passedLabel,
          id: id,
          choiceId: passedOptionId,
          groupId: groupId,
          customProperties: customProperties,
          placeholder: placeholder,
          keyCode: keyCode
        }));
        if (this._isSelectOneElement) {
          this.removeActiveItems(id);
        }
        // Trigger change event
        this.passedElement.triggerEvent(constants_1.EVENTS.addItem, {
          id: id,
          value: passedValue,
          label: passedLabel,
          customProperties: customProperties,
          groupValue: group && group.value ? group.value : null,
          keyCode: keyCode
        });
      };
      Choices.prototype._removeItem = function (item) {
        var id = item.id,
          value = item.value,
          label = item.label,
          customProperties = item.customProperties,
          choiceId = item.choiceId,
          groupId = item.groupId;
        var group = groupId && groupId >= 0 ? this._store.getGroupById(groupId) : null;
        if (!id || !choiceId) {
          return;
        }
        this._store.dispatch((0, items_1.removeItem)(id, choiceId));
        this.passedElement.triggerEvent(constants_1.EVENTS.removeItem, {
          id: id,
          value: value,
          label: label,
          customProperties: customProperties,
          groupValue: group && group.value ? group.value : null
        });
      };
      Choices.prototype._addChoice = function (_a) {
        var value = _a.value,
          _b = _a.label,
          label = _b === void 0 ? null : _b,
          _c = _a.isSelected,
          isSelected = _c === void 0 ? false : _c,
          _d = _a.isDisabled,
          isDisabled = _d === void 0 ? false : _d,
          _e = _a.groupId,
          groupId = _e === void 0 ? -1 : _e,
          _f = _a.customProperties,
          customProperties = _f === void 0 ? {} : _f,
          _g = _a.placeholder,
          placeholder = _g === void 0 ? false : _g,
          _h = _a.keyCode,
          keyCode = _h === void 0 ? -1 : _h;
        if (typeof value === 'undefined' || value === null) {
          return;
        }
        // Generate unique id
        var choices = this._store.choices;
        var choiceLabel = label || value;
        var choiceId = choices ? choices.length + 1 : 1;
        var choiceElementId = "".concat(this._baseId, "-").concat(this._idNames.itemChoice, "-").concat(choiceId);
        this._store.dispatch((0, choices_1.addChoice)({
          id: choiceId,
          groupId: groupId,
          elementId: choiceElementId,
          value: value,
          label: choiceLabel,
          disabled: isDisabled,
          customProperties: customProperties,
          placeholder: placeholder,
          keyCode: keyCode
        }));
        if (isSelected) {
          this._addItem({
            value: value,
            label: choiceLabel,
            choiceId: choiceId,
            customProperties: customProperties,
            placeholder: placeholder,
            keyCode: keyCode
          });
        }
      };
      Choices.prototype._addGroup = function (_a) {
        var _this = this;
        var group = _a.group,
          id = _a.id,
          _b = _a.valueKey,
          valueKey = _b === void 0 ? 'value' : _b,
          _c = _a.labelKey,
          labelKey = _c === void 0 ? 'label' : _c;
        var groupChoices = (0, utils_1.isType)('Object', group) ? group.choices : Array.from(group.getElementsByTagName('OPTION'));
        var groupId = id || Math.floor(new Date().valueOf() * Math.random());
        var isDisabled = group.disabled ? group.disabled : false;
        if (groupChoices) {
          this._store.dispatch((0, groups_1.addGroup)({
            value: group.label,
            id: groupId,
            active: true,
            disabled: isDisabled
          }));
          var addGroupChoices = function (choice) {
            var isOptDisabled = choice.disabled || choice.parentNode && choice.parentNode.disabled;
            _this._addChoice({
              value: choice[valueKey],
              label: (0, utils_1.isType)('Object', choice) ? choice[labelKey] : choice.innerHTML,
              isSelected: choice.selected,
              isDisabled: isOptDisabled,
              groupId: groupId,
              customProperties: choice.customProperties,
              placeholder: choice.placeholder
            });
          };
          groupChoices.forEach(addGroupChoices);
        } else {
          this._store.dispatch((0, groups_1.addGroup)({
            value: group.label,
            id: group.id,
            active: false,
            disabled: group.disabled
          }));
        }
      };
      Choices.prototype._getTemplate = function (template) {
        var _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          args[_i - 1] = arguments[_i];
        }
        return (_a = this._templates[template]).call.apply(_a, __spreadArray([this, this.config], args, false));
      };
      Choices.prototype._createTemplates = function () {
        var callbackOnCreateTemplates = this.config.callbackOnCreateTemplates;
        var userTemplates = {};
        if (callbackOnCreateTemplates && typeof callbackOnCreateTemplates === 'function') {
          userTemplates = callbackOnCreateTemplates.call(this, utils_1.strToEl);
        }
        this._templates = (0, deepmerge_1.default)(templates_1.default, userTemplates);
      };
      Choices.prototype._createElements = function () {
        this.containerOuter = new components_1.Container({
          element: this._getTemplate('containerOuter', this._direction, this._isSelectElement, this._isSelectOneElement, this.config.searchEnabled, this.passedElement.element.type, this.config.labelId),
          classNames: this.config.classNames,
          type: this.passedElement.element.type,
          position: this.config.position
        });
        this.containerInner = new components_1.Container({
          element: this._getTemplate('containerInner'),
          classNames: this.config.classNames,
          type: this.passedElement.element.type,
          position: this.config.position
        });
        this.input = new components_1.Input({
          element: this._getTemplate('input', this._placeholderValue),
          classNames: this.config.classNames,
          type: this.passedElement.element.type,
          preventPaste: !this.config.paste
        });
        this.choiceList = new components_1.List({
          element: this._getTemplate('choiceList', this._isSelectOneElement)
        });
        this.itemList = new components_1.List({
          element: this._getTemplate('itemList', this._isSelectOneElement)
        });
        this.dropdown = new components_1.Dropdown({
          element: this._getTemplate('dropdown'),
          classNames: this.config.classNames,
          type: this.passedElement.element.type
        });
      };
      Choices.prototype._createStructure = function () {
        // Hide original element
        this.passedElement.conceal();
        // Wrap input in container preserving DOM ordering
        this.containerInner.wrap(this.passedElement.element);
        // Wrapper inner container with outer container
        this.containerOuter.wrap(this.containerInner.element);
        if (this._isSelectOneElement) {
          this.input.placeholder = this.config.searchPlaceholderValue || '';
        } else if (this._placeholderValue) {
          this.input.placeholder = this._placeholderValue;
          this.input.setWidth();
        }
        this.containerOuter.element.appendChild(this.containerInner.element);
        this.containerOuter.element.appendChild(this.dropdown.element);
        this.containerInner.element.appendChild(this.itemList.element);
        if (!this._isTextElement) {
          this.dropdown.element.appendChild(this.choiceList.element);
        }
        if (!this._isSelectOneElement) {
          this.containerInner.element.appendChild(this.input.element);
        } else if (this.config.searchEnabled) {
          this.dropdown.element.insertBefore(this.input.element, this.dropdown.element.firstChild);
        }
        if (this._isSelectElement) {
          this._highlightPosition = 0;
          this._isSearching = false;
          this._startLoading();
          if (this._presetGroups.length) {
            this._addPredefinedGroups(this._presetGroups);
          } else {
            this._addPredefinedChoices(this._presetChoices);
          }
          this._stopLoading();
        }
        if (this._isTextElement) {
          this._addPredefinedItems(this._presetItems);
        }
      };
      Choices.prototype._addPredefinedGroups = function (groups) {
        var _this = this;
        // If we have a placeholder option
        var placeholderChoice = this.passedElement.placeholderOption;
        if (placeholderChoice && placeholderChoice.parentNode && placeholderChoice.parentNode.tagName === 'SELECT') {
          this._addChoice({
            value: placeholderChoice.value,
            label: placeholderChoice.innerHTML,
            isSelected: placeholderChoice.selected,
            isDisabled: placeholderChoice.disabled,
            placeholder: true
          });
        }
        groups.forEach(function (group) {
          return _this._addGroup({
            group: group,
            id: group.id || null
          });
        });
      };
      Choices.prototype._addPredefinedChoices = function (choices) {
        var _this = this;
        // If sorting is enabled or the user is searching, filter choices
        if (this.config.shouldSort) {
          choices.sort(this.config.sorter);
        }
        var hasSelectedChoice = choices.some(function (choice) {
          return choice.selected;
        });
        var firstEnabledChoiceIndex = choices.findIndex(function (choice) {
          return choice.disabled === undefined || !choice.disabled;
        });
        choices.forEach(function (choice, index) {
          var _a = choice.value,
            value = _a === void 0 ? '' : _a,
            label = choice.label,
            customProperties = choice.customProperties,
            placeholder = choice.placeholder;
          if (_this._isSelectElement) {
            // If the choice is actually a group
            if (choice.choices) {
              _this._addGroup({
                group: choice,
                id: choice.id || null
              });
            } else {
              /**
               * If there is a selected choice already or the choice is not the first in
               * the array, add each choice normally.
               *
               * Otherwise we pre-select the first enabled choice in the array ("select-one" only)
               */
              var shouldPreselect = _this._isSelectOneElement && !hasSelectedChoice && index === firstEnabledChoiceIndex;
              var isSelected = shouldPreselect ? true : choice.selected;
              var isDisabled = choice.disabled;
              _this._addChoice({
                value: value,
                label: label,
                isSelected: !!isSelected,
                isDisabled: !!isDisabled,
                placeholder: !!placeholder,
                customProperties: customProperties
              });
            }
          } else {
            _this._addChoice({
              value: value,
              label: label,
              isSelected: !!choice.selected,
              isDisabled: !!choice.disabled,
              placeholder: !!choice.placeholder,
              customProperties: customProperties
            });
          }
        });
      };
      Choices.prototype._addPredefinedItems = function (items) {
        var _this = this;
        items.forEach(function (item) {
          if (typeof item === 'object' && item.value) {
            _this._addItem({
              value: item.value,
              label: item.label,
              choiceId: item.id,
              customProperties: item.customProperties,
              placeholder: item.placeholder
            });
          }
          if (typeof item === 'string') {
            _this._addItem({
              value: item
            });
          }
        });
      };
      Choices.prototype._setChoiceOrItem = function (item) {
        var _this = this;
        var itemType = (0, utils_1.getType)(item).toLowerCase();
        var handleType = {
          object: function () {
            if (!item.value) {
              return;
            }
            // If we are dealing with a select input, we need to create an option first
            // that is then selected. For text inputs we can just add items normally.
            if (!_this._isTextElement) {
              _this._addChoice({
                value: item.value,
                label: item.label,
                isSelected: true,
                isDisabled: false,
                customProperties: item.customProperties,
                placeholder: item.placeholder
              });
            } else {
              _this._addItem({
                value: item.value,
                label: item.label,
                choiceId: item.id,
                customProperties: item.customProperties,
                placeholder: item.placeholder
              });
            }
          },
          string: function () {
            if (!_this._isTextElement) {
              _this._addChoice({
                value: item,
                label: item,
                isSelected: true,
                isDisabled: false
              });
            } else {
              _this._addItem({
                value: item
              });
            }
          }
        };
        handleType[itemType]();
      };
      Choices.prototype._findAndSelectChoiceByValue = function (value) {
        var _this = this;
        var choices = this._store.choices;
        // Check 'value' property exists and the choice isn't already selected
        var foundChoice = choices.find(function (choice) {
          return _this.config.valueComparer(choice.value, value);
        });
        if (foundChoice && !foundChoice.selected) {
          this._addItem({
            value: foundChoice.value,
            label: foundChoice.label,
            choiceId: foundChoice.id,
            groupId: foundChoice.groupId,
            customProperties: foundChoice.customProperties,
            placeholder: foundChoice.placeholder,
            keyCode: foundChoice.keyCode
          });
        }
      };
      Choices.prototype._generatePlaceholderValue = function () {
        if (this._isSelectElement && this.passedElement.placeholderOption) {
          var placeholderOption = this.passedElement.placeholderOption;
          return placeholderOption ? placeholderOption.text : null;
        }
        var _a = this.config,
          placeholder = _a.placeholder,
          placeholderValue = _a.placeholderValue;
        var dataset = this.passedElement.element.dataset;
        if (placeholder) {
          if (placeholderValue) {
            return placeholderValue;
          }
          if (dataset.placeholder) {
            return dataset.placeholder;
          }
        }
        return null;
      };
      return Choices;
    }();
    exports["default"] = Choices;

    /***/ }),

    /***/ 613:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var utils_1 = __webpack_require__(799);
    var constants_1 = __webpack_require__(883);
    var Container = /** @class */function () {
      function Container(_a) {
        var element = _a.element,
          type = _a.type,
          classNames = _a.classNames,
          position = _a.position;
        this.element = element;
        this.classNames = classNames;
        this.type = type;
        this.position = position;
        this.isOpen = false;
        this.isFlipped = false;
        this.isFocussed = false;
        this.isDisabled = false;
        this.isLoading = false;
        this._onFocus = this._onFocus.bind(this);
        this._onBlur = this._onBlur.bind(this);
      }
      Container.prototype.addEventListeners = function () {
        this.element.addEventListener('focus', this._onFocus);
        this.element.addEventListener('blur', this._onBlur);
      };
      Container.prototype.removeEventListeners = function () {
        this.element.removeEventListener('focus', this._onFocus);
        this.element.removeEventListener('blur', this._onBlur);
      };
      /**
       * Determine whether container should be flipped based on passed
       * dropdown position
       */
      Container.prototype.shouldFlip = function (dropdownPos) {
        if (typeof dropdownPos !== 'number') {
          return false;
        }
        // If flip is enabled and the dropdown bottom position is
        // greater than the window height flip the dropdown.
        var shouldFlip = false;
        if (this.position === 'auto') {
          shouldFlip = !window.matchMedia("(min-height: ".concat(dropdownPos + 1, "px)")).matches;
        } else if (this.position === 'top') {
          shouldFlip = true;
        }
        return shouldFlip;
      };
      Container.prototype.setActiveDescendant = function (activeDescendantID) {
        this.element.setAttribute('aria-activedescendant', activeDescendantID);
      };
      Container.prototype.removeActiveDescendant = function () {
        this.element.removeAttribute('aria-activedescendant');
      };
      Container.prototype.open = function (dropdownPos) {
        this.element.classList.add(this.classNames.openState);
        this.element.setAttribute('aria-expanded', 'true');
        this.isOpen = true;
        if (this.shouldFlip(dropdownPos)) {
          this.element.classList.add(this.classNames.flippedState);
          this.isFlipped = true;
        }
      };
      Container.prototype.close = function () {
        this.element.classList.remove(this.classNames.openState);
        this.element.setAttribute('aria-expanded', 'false');
        this.removeActiveDescendant();
        this.isOpen = false;
        // A dropdown flips if it does not have space within the page
        if (this.isFlipped) {
          this.element.classList.remove(this.classNames.flippedState);
          this.isFlipped = false;
        }
      };
      Container.prototype.focus = function () {
        if (!this.isFocussed) {
          this.element.focus();
        }
      };
      Container.prototype.addFocusState = function () {
        this.element.classList.add(this.classNames.focusState);
      };
      Container.prototype.removeFocusState = function () {
        this.element.classList.remove(this.classNames.focusState);
      };
      Container.prototype.enable = function () {
        this.element.classList.remove(this.classNames.disabledState);
        this.element.removeAttribute('aria-disabled');
        if (this.type === constants_1.SELECT_ONE_TYPE) {
          this.element.setAttribute('tabindex', '0');
        }
        this.isDisabled = false;
      };
      Container.prototype.disable = function () {
        this.element.classList.add(this.classNames.disabledState);
        this.element.setAttribute('aria-disabled', 'true');
        if (this.type === constants_1.SELECT_ONE_TYPE) {
          this.element.setAttribute('tabindex', '-1');
        }
        this.isDisabled = true;
      };
      Container.prototype.wrap = function (element) {
        (0, utils_1.wrap)(element, this.element);
      };
      Container.prototype.unwrap = function (element) {
        if (this.element.parentNode) {
          // Move passed element outside this element
          this.element.parentNode.insertBefore(element, this.element);
          // Remove this element
          this.element.parentNode.removeChild(this.element);
        }
      };
      Container.prototype.addLoadingState = function () {
        this.element.classList.add(this.classNames.loadingState);
        this.element.setAttribute('aria-busy', 'true');
        this.isLoading = true;
      };
      Container.prototype.removeLoadingState = function () {
        this.element.classList.remove(this.classNames.loadingState);
        this.element.removeAttribute('aria-busy');
        this.isLoading = false;
      };
      Container.prototype._onFocus = function () {
        this.isFocussed = true;
      };
      Container.prototype._onBlur = function () {
        this.isFocussed = false;
      };
      return Container;
    }();
    exports["default"] = Container;

    /***/ }),

    /***/ 217:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var Dropdown = /** @class */function () {
      function Dropdown(_a) {
        var element = _a.element,
          type = _a.type,
          classNames = _a.classNames;
        this.element = element;
        this.classNames = classNames;
        this.type = type;
        this.isActive = false;
      }
      Object.defineProperty(Dropdown.prototype, "distanceFromTopWindow", {
        /**
         * Bottom position of dropdown in viewport coordinates
         */
        get: function () {
          return this.element.getBoundingClientRect().bottom;
        },
        enumerable: false,
        configurable: true
      });
      Dropdown.prototype.getChild = function (selector) {
        return this.element.querySelector(selector);
      };
      /**
       * Show dropdown to user by adding active state class
       */
      Dropdown.prototype.show = function () {
        this.element.classList.add(this.classNames.activeState);
        this.element.setAttribute('aria-expanded', 'true');
        this.isActive = true;
        return this;
      };
      /**
       * Hide dropdown from user
       */
      Dropdown.prototype.hide = function () {
        this.element.classList.remove(this.classNames.activeState);
        this.element.setAttribute('aria-expanded', 'false');
        this.isActive = false;
        return this;
      };
      return Dropdown;
    }();
    exports["default"] = Dropdown;

    /***/ }),

    /***/ 520:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.WrappedSelect = exports.WrappedInput = exports.List = exports.Input = exports.Container = exports.Dropdown = void 0;
    var dropdown_1 = __importDefault(__webpack_require__(217));
    exports.Dropdown = dropdown_1.default;
    var container_1 = __importDefault(__webpack_require__(613));
    exports.Container = container_1.default;
    var input_1 = __importDefault(__webpack_require__(11));
    exports.Input = input_1.default;
    var list_1 = __importDefault(__webpack_require__(624));
    exports.List = list_1.default;
    var wrapped_input_1 = __importDefault(__webpack_require__(541));
    exports.WrappedInput = wrapped_input_1.default;
    var wrapped_select_1 = __importDefault(__webpack_require__(982));
    exports.WrappedSelect = wrapped_select_1.default;

    /***/ }),

    /***/ 11:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var utils_1 = __webpack_require__(799);
    var constants_1 = __webpack_require__(883);
    var Input = /** @class */function () {
      function Input(_a) {
        var element = _a.element,
          type = _a.type,
          classNames = _a.classNames,
          preventPaste = _a.preventPaste;
        this.element = element;
        this.type = type;
        this.classNames = classNames;
        this.preventPaste = preventPaste;
        this.isFocussed = this.element.isEqualNode(document.activeElement);
        this.isDisabled = element.disabled;
        this._onPaste = this._onPaste.bind(this);
        this._onInput = this._onInput.bind(this);
        this._onFocus = this._onFocus.bind(this);
        this._onBlur = this._onBlur.bind(this);
      }
      Object.defineProperty(Input.prototype, "placeholder", {
        set: function (placeholder) {
          this.element.placeholder = placeholder;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Input.prototype, "value", {
        get: function () {
          return (0, utils_1.sanitise)(this.element.value);
        },
        set: function (value) {
          this.element.value = value;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Input.prototype, "rawValue", {
        get: function () {
          return this.element.value;
        },
        enumerable: false,
        configurable: true
      });
      Input.prototype.addEventListeners = function () {
        this.element.addEventListener('paste', this._onPaste);
        this.element.addEventListener('input', this._onInput, {
          passive: true
        });
        this.element.addEventListener('focus', this._onFocus, {
          passive: true
        });
        this.element.addEventListener('blur', this._onBlur, {
          passive: true
        });
      };
      Input.prototype.removeEventListeners = function () {
        this.element.removeEventListener('input', this._onInput);
        this.element.removeEventListener('paste', this._onPaste);
        this.element.removeEventListener('focus', this._onFocus);
        this.element.removeEventListener('blur', this._onBlur);
      };
      Input.prototype.enable = function () {
        this.element.removeAttribute('disabled');
        this.isDisabled = false;
      };
      Input.prototype.disable = function () {
        this.element.setAttribute('disabled', '');
        this.isDisabled = true;
      };
      Input.prototype.focus = function () {
        if (!this.isFocussed) {
          this.element.focus();
        }
      };
      Input.prototype.blur = function () {
        if (this.isFocussed) {
          this.element.blur();
        }
      };
      Input.prototype.clear = function (setWidth) {
        if (setWidth === void 0) {
          setWidth = true;
        }
        if (this.element.value) {
          this.element.value = '';
        }
        if (setWidth) {
          this.setWidth();
        }
        return this;
      };
      /**
       * Set the correct input width based on placeholder
       * value or input value
       */
      Input.prototype.setWidth = function () {
        // Resize input to contents or placeholder
        var _a = this.element,
          style = _a.style,
          value = _a.value,
          placeholder = _a.placeholder;
        style.minWidth = "".concat(placeholder.length + 1, "ch");
        style.width = "".concat(value.length + 1, "ch");
      };
      Input.prototype.setActiveDescendant = function (activeDescendantID) {
        this.element.setAttribute('aria-activedescendant', activeDescendantID);
      };
      Input.prototype.removeActiveDescendant = function () {
        this.element.removeAttribute('aria-activedescendant');
      };
      Input.prototype._onInput = function () {
        if (this.type !== constants_1.SELECT_ONE_TYPE) {
          this.setWidth();
        }
      };
      Input.prototype._onPaste = function (event) {
        if (this.preventPaste) {
          event.preventDefault();
        }
      };
      Input.prototype._onFocus = function () {
        this.isFocussed = true;
      };
      Input.prototype._onBlur = function () {
        this.isFocussed = false;
      };
      return Input;
    }();
    exports["default"] = Input;

    /***/ }),

    /***/ 624:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var constants_1 = __webpack_require__(883);
    var List = /** @class */function () {
      function List(_a) {
        var element = _a.element;
        this.element = element;
        this.scrollPos = this.element.scrollTop;
        this.height = this.element.offsetHeight;
      }
      List.prototype.clear = function () {
        this.element.innerHTML = '';
      };
      List.prototype.append = function (node) {
        this.element.appendChild(node);
      };
      List.prototype.getChild = function (selector) {
        return this.element.querySelector(selector);
      };
      List.prototype.hasChildren = function () {
        return this.element.hasChildNodes();
      };
      List.prototype.scrollToTop = function () {
        this.element.scrollTop = 0;
      };
      List.prototype.scrollToChildElement = function (element, direction) {
        var _this = this;
        if (!element) {
          return;
        }
        var listHeight = this.element.offsetHeight;
        // Scroll position of dropdown
        var listScrollPosition = this.element.scrollTop + listHeight;
        var elementHeight = element.offsetHeight;
        // Distance from bottom of element to top of parent
        var elementPos = element.offsetTop + elementHeight;
        // Difference between the element and scroll position
        var destination = direction > 0 ? this.element.scrollTop + elementPos - listScrollPosition : element.offsetTop;
        requestAnimationFrame(function () {
          _this._animateScroll(destination, direction);
        });
      };
      List.prototype._scrollDown = function (scrollPos, strength, destination) {
        var easing = (destination - scrollPos) / strength;
        var distance = easing > 1 ? easing : 1;
        this.element.scrollTop = scrollPos + distance;
      };
      List.prototype._scrollUp = function (scrollPos, strength, destination) {
        var easing = (scrollPos - destination) / strength;
        var distance = easing > 1 ? easing : 1;
        this.element.scrollTop = scrollPos - distance;
      };
      List.prototype._animateScroll = function (destination, direction) {
        var _this = this;
        var strength = constants_1.SCROLLING_SPEED;
        var choiceListScrollTop = this.element.scrollTop;
        var continueAnimation = false;
        if (direction > 0) {
          this._scrollDown(choiceListScrollTop, strength, destination);
          if (choiceListScrollTop < destination) {
            continueAnimation = true;
          }
        } else {
          this._scrollUp(choiceListScrollTop, strength, destination);
          if (choiceListScrollTop > destination) {
            continueAnimation = true;
          }
        }
        if (continueAnimation) {
          requestAnimationFrame(function () {
            _this._animateScroll(destination, direction);
          });
        }
      };
      return List;
    }();
    exports["default"] = List;

    /***/ }),

    /***/ 730:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var utils_1 = __webpack_require__(799);
    var WrappedElement = /** @class */function () {
      function WrappedElement(_a) {
        var element = _a.element,
          classNames = _a.classNames;
        this.element = element;
        this.classNames = classNames;
        if (!(element instanceof HTMLInputElement) && !(element instanceof HTMLSelectElement)) {
          throw new TypeError('Invalid element passed');
        }
        this.isDisabled = false;
      }
      Object.defineProperty(WrappedElement.prototype, "isActive", {
        get: function () {
          return this.element.dataset.choice === 'active';
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(WrappedElement.prototype, "dir", {
        get: function () {
          return this.element.dir;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(WrappedElement.prototype, "value", {
        get: function () {
          return this.element.value;
        },
        set: function (value) {
          // you must define setter here otherwise it will be readonly property
          this.element.value = value;
        },
        enumerable: false,
        configurable: true
      });
      WrappedElement.prototype.conceal = function () {
        // Hide passed input
        this.element.classList.add(this.classNames.input);
        this.element.hidden = true;
        // Remove element from tab index
        this.element.tabIndex = -1;
        // Backup original styles if any
        var origStyle = this.element.getAttribute('style');
        if (origStyle) {
          this.element.setAttribute('data-choice-orig-style', origStyle);
        }
        this.element.setAttribute('data-choice', 'active');
      };
      WrappedElement.prototype.reveal = function () {
        // Reinstate passed element
        this.element.classList.remove(this.classNames.input);
        this.element.hidden = false;
        this.element.removeAttribute('tabindex');
        // Recover original styles if any
        var origStyle = this.element.getAttribute('data-choice-orig-style');
        if (origStyle) {
          this.element.removeAttribute('data-choice-orig-style');
          this.element.setAttribute('style', origStyle);
        } else {
          this.element.removeAttribute('style');
        }
        this.element.removeAttribute('data-choice');
        // Re-assign values - this is weird, I know
        // @todo Figure out why we need to do this
        this.element.value = this.element.value; // eslint-disable-line no-self-assign
      };

      WrappedElement.prototype.enable = function () {
        this.element.removeAttribute('disabled');
        this.element.disabled = false;
        this.isDisabled = false;
      };
      WrappedElement.prototype.disable = function () {
        this.element.setAttribute('disabled', '');
        this.element.disabled = true;
        this.isDisabled = true;
      };
      WrappedElement.prototype.triggerEvent = function (eventType, data) {
        (0, utils_1.dispatchEvent)(this.element, eventType, data);
      };
      return WrappedElement;
    }();
    exports["default"] = WrappedElement;

    /***/ }),

    /***/ 541:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __extends = this && this.__extends || function () {
      var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
      };
      return function (d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var wrapped_element_1 = __importDefault(__webpack_require__(730));
    var WrappedInput = /** @class */function (_super) {
      __extends(WrappedInput, _super);
      function WrappedInput(_a) {
        var element = _a.element,
          classNames = _a.classNames,
          delimiter = _a.delimiter;
        var _this = _super.call(this, {
          element: element,
          classNames: classNames
        }) || this;
        _this.delimiter = delimiter;
        return _this;
      }
      Object.defineProperty(WrappedInput.prototype, "value", {
        get: function () {
          return this.element.value;
        },
        set: function (value) {
          this.element.setAttribute('value', value);
          this.element.value = value;
        },
        enumerable: false,
        configurable: true
      });
      return WrappedInput;
    }(wrapped_element_1.default);
    exports["default"] = WrappedInput;

    /***/ }),

    /***/ 982:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __extends = this && this.__extends || function () {
      var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return extendStatics(d, b);
      };
      return function (d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var wrapped_element_1 = __importDefault(__webpack_require__(730));
    var WrappedSelect = /** @class */function (_super) {
      __extends(WrappedSelect, _super);
      function WrappedSelect(_a) {
        var element = _a.element,
          classNames = _a.classNames,
          template = _a.template;
        var _this = _super.call(this, {
          element: element,
          classNames: classNames
        }) || this;
        _this.template = template;
        return _this;
      }
      Object.defineProperty(WrappedSelect.prototype, "placeholderOption", {
        get: function () {
          return this.element.querySelector('option[value=""]') ||
          // Backward compatibility layer for the non-standard placeholder attribute supported in older versions.
          this.element.querySelector('option[placeholder]');
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(WrappedSelect.prototype, "optionGroups", {
        get: function () {
          return Array.from(this.element.getElementsByTagName('OPTGROUP'));
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(WrappedSelect.prototype, "options", {
        get: function () {
          return Array.from(this.element.options);
        },
        set: function (options) {
          var _this = this;
          var fragment = document.createDocumentFragment();
          var addOptionToFragment = function (data) {
            // Create a standard select option
            var option = _this.template(data);
            // Append it to fragment
            fragment.appendChild(option);
          };
          // Add each list item to list
          options.forEach(function (optionData) {
            return addOptionToFragment(optionData);
          });
          this.appendDocFragment(fragment);
        },
        enumerable: false,
        configurable: true
      });
      WrappedSelect.prototype.appendDocFragment = function (fragment) {
        this.element.innerHTML = '';
        this.element.appendChild(fragment);
      };
      return WrappedSelect;
    }(wrapped_element_1.default);
    exports["default"] = WrappedSelect;

    /***/ }),

    /***/ 883:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.SCROLLING_SPEED = exports.SELECT_MULTIPLE_TYPE = exports.SELECT_ONE_TYPE = exports.TEXT_TYPE = exports.KEY_CODES = exports.ACTION_TYPES = exports.EVENTS = void 0;
    exports.EVENTS = {
      showDropdown: 'showDropdown',
      hideDropdown: 'hideDropdown',
      change: 'change',
      choice: 'choice',
      search: 'search',
      addItem: 'addItem',
      removeItem: 'removeItem',
      highlightItem: 'highlightItem',
      highlightChoice: 'highlightChoice',
      unhighlightItem: 'unhighlightItem'
    };
    exports.ACTION_TYPES = {
      ADD_CHOICE: 'ADD_CHOICE',
      FILTER_CHOICES: 'FILTER_CHOICES',
      ACTIVATE_CHOICES: 'ACTIVATE_CHOICES',
      CLEAR_CHOICES: 'CLEAR_CHOICES',
      ADD_GROUP: 'ADD_GROUP',
      ADD_ITEM: 'ADD_ITEM',
      REMOVE_ITEM: 'REMOVE_ITEM',
      HIGHLIGHT_ITEM: 'HIGHLIGHT_ITEM',
      CLEAR_ALL: 'CLEAR_ALL',
      RESET_TO: 'RESET_TO',
      SET_IS_LOADING: 'SET_IS_LOADING'
    };
    exports.KEY_CODES = {
      BACK_KEY: 46,
      DELETE_KEY: 8,
      ENTER_KEY: 13,
      A_KEY: 65,
      ESC_KEY: 27,
      UP_KEY: 38,
      DOWN_KEY: 40,
      PAGE_UP_KEY: 33,
      PAGE_DOWN_KEY: 34
    };
    exports.TEXT_TYPE = 'text';
    exports.SELECT_ONE_TYPE = 'select-one';
    exports.SELECT_MULTIPLE_TYPE = 'select-multiple';
    exports.SCROLLING_SPEED = 4;

    /***/ }),

    /***/ 789:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.DEFAULT_CONFIG = exports.DEFAULT_CLASSNAMES = void 0;
    var utils_1 = __webpack_require__(799);
    exports.DEFAULT_CLASSNAMES = {
      containerOuter: 'choices',
      containerInner: 'choices__inner',
      input: 'choices__input',
      inputCloned: 'choices__input--cloned',
      list: 'choices__list',
      listItems: 'choices__list--multiple',
      listSingle: 'choices__list--single',
      listDropdown: 'choices__list--dropdown',
      item: 'choices__item',
      itemSelectable: 'choices__item--selectable',
      itemDisabled: 'choices__item--disabled',
      itemChoice: 'choices__item--choice',
      placeholder: 'choices__placeholder',
      group: 'choices__group',
      groupHeading: 'choices__heading',
      button: 'choices__button',
      activeState: 'is-active',
      focusState: 'is-focused',
      openState: 'is-open',
      disabledState: 'is-disabled',
      highlightedState: 'is-highlighted',
      selectedState: 'is-selected',
      flippedState: 'is-flipped',
      loadingState: 'is-loading',
      noResults: 'has-no-results',
      noChoices: 'has-no-choices'
    };
    exports.DEFAULT_CONFIG = {
      items: [],
      choices: [],
      silent: false,
      renderChoiceLimit: -1,
      maxItemCount: -1,
      addItems: true,
      addItemFilter: null,
      removeItems: true,
      removeItemButton: false,
      editItems: false,
      allowHTML: true,
      duplicateItemsAllowed: true,
      delimiter: ',',
      paste: true,
      searchEnabled: true,
      searchChoices: true,
      searchFloor: 1,
      searchResultLimit: 4,
      searchFields: ['label', 'value'],
      position: 'auto',
      resetScrollPosition: true,
      shouldSort: true,
      shouldSortItems: false,
      sorter: utils_1.sortByAlpha,
      placeholder: true,
      placeholderValue: null,
      searchPlaceholderValue: null,
      prependValue: null,
      appendValue: null,
      renderSelectedChoices: 'auto',
      loadingText: 'Loading...',
      noResultsText: 'No results found',
      noChoicesText: 'No choices to choose from',
      itemSelectText: 'Press to select',
      uniqueItemText: 'Only unique values can be added',
      customAddItemText: 'Only values matching specific conditions can be added',
      addItemText: function (value) {
        return "Press Enter to add <b>\"".concat((0, utils_1.sanitise)(value), "\"</b>");
      },
      maxItemText: function (maxItemCount) {
        return "Only ".concat(maxItemCount, " values can be added");
      },
      valueComparer: function (value1, value2) {
        return value1 === value2;
      },
      fuseOptions: {
        includeScore: true
      },
      labelId: '',
      callbackOnInit: null,
      callbackOnCreateTemplates: null,
      classNames: exports.DEFAULT_CLASSNAMES
    };

    /***/ }),

    /***/ 18:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 978:
    /***/ (function(__unused_webpack_module, exports) {



    /* eslint-disable @typescript-eslint/no-explicit-any */
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 948:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 359:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 285:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 533:
    /***/ (function(__unused_webpack_module, exports) {



    /* eslint-disable @typescript-eslint/no-explicit-any */
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 187:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = {
          enumerable: true,
          get: function () {
            return m[k];
          }
        };
      }
      Object.defineProperty(o, k2, desc);
    } : function (o, m, k, k2) {
      if (k2 === undefined) k2 = k;
      o[k2] = m[k];
    });
    var __exportStar = this && this.__exportStar || function (m, exports) {
      for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    __exportStar(__webpack_require__(18), exports);
    __exportStar(__webpack_require__(978), exports);
    __exportStar(__webpack_require__(948), exports);
    __exportStar(__webpack_require__(359), exports);
    __exportStar(__webpack_require__(285), exports);
    __exportStar(__webpack_require__(533), exports);
    __exportStar(__webpack_require__(287), exports);
    __exportStar(__webpack_require__(132), exports);
    __exportStar(__webpack_require__(837), exports);
    __exportStar(__webpack_require__(598), exports);
    __exportStar(__webpack_require__(369), exports);
    __exportStar(__webpack_require__(37), exports);
    __exportStar(__webpack_require__(47), exports);
    __exportStar(__webpack_require__(923), exports);
    __exportStar(__webpack_require__(876), exports);

    /***/ }),

    /***/ 287:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 132:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 837:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 598:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 37:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 369:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 47:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 923:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 876:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));

    /***/ }),

    /***/ 799:
    /***/ (function(__unused_webpack_module, exports) {



    /* eslint-disable @typescript-eslint/no-explicit-any */
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.parseCustomProperties = exports.diff = exports.cloneObject = exports.existsInArray = exports.dispatchEvent = exports.sortByScore = exports.sortByAlpha = exports.strToEl = exports.sanitise = exports.isScrolledIntoView = exports.getAdjacentEl = exports.wrap = exports.isType = exports.getType = exports.generateId = exports.generateChars = exports.getRandomNumber = void 0;
    var getRandomNumber = function (min, max) {
      return Math.floor(Math.random() * (max - min) + min);
    };
    exports.getRandomNumber = getRandomNumber;
    var generateChars = function (length) {
      return Array.from({
        length: length
      }, function () {
        return (0, exports.getRandomNumber)(0, 36).toString(36);
      }).join('');
    };
    exports.generateChars = generateChars;
    var generateId = function (element, prefix) {
      var id = element.id || element.name && "".concat(element.name, "-").concat((0, exports.generateChars)(2)) || (0, exports.generateChars)(4);
      id = id.replace(/(:|\.|\[|\]|,)/g, '');
      id = "".concat(prefix, "-").concat(id);
      return id;
    };
    exports.generateId = generateId;
    var getType = function (obj) {
      return Object.prototype.toString.call(obj).slice(8, -1);
    };
    exports.getType = getType;
    var isType = function (type, obj) {
      return obj !== undefined && obj !== null && (0, exports.getType)(obj) === type;
    };
    exports.isType = isType;
    var wrap = function (element, wrapper) {
      if (wrapper === void 0) {
        wrapper = document.createElement('div');
      }
      if (element.parentNode) {
        if (element.nextSibling) {
          element.parentNode.insertBefore(wrapper, element.nextSibling);
        } else {
          element.parentNode.appendChild(wrapper);
        }
      }
      return wrapper.appendChild(element);
    };
    exports.wrap = wrap;
    var getAdjacentEl = function (startEl, selector, direction) {
      if (direction === void 0) {
        direction = 1;
      }
      var prop = "".concat(direction > 0 ? 'next' : 'previous', "ElementSibling");
      var sibling = startEl[prop];
      while (sibling) {
        if (sibling.matches(selector)) {
          return sibling;
        }
        sibling = sibling[prop];
      }
      return sibling;
    };
    exports.getAdjacentEl = getAdjacentEl;
    var isScrolledIntoView = function (element, parent, direction) {
      if (direction === void 0) {
        direction = 1;
      }
      if (!element) {
        return false;
      }
      var isVisible;
      if (direction > 0) {
        // In view from bottom
        isVisible = parent.scrollTop + parent.offsetHeight >= element.offsetTop + element.offsetHeight;
      } else {
        // In view from top
        isVisible = element.offsetTop >= parent.scrollTop;
      }
      return isVisible;
    };
    exports.isScrolledIntoView = isScrolledIntoView;
    var sanitise = function (value) {
      if (typeof value !== 'string') {
        return value;
      }
      return value.replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/"/g, '&quot;');
    };
    exports.sanitise = sanitise;
    exports.strToEl = function () {
      var tmpEl = document.createElement('div');
      return function (str) {
        var cleanedInput = str.trim();
        tmpEl.innerHTML = cleanedInput;
        var firldChild = tmpEl.children[0];
        while (tmpEl.firstChild) {
          tmpEl.removeChild(tmpEl.firstChild);
        }
        return firldChild;
      };
    }();
    var sortByAlpha = function (_a, _b) {
      var value = _a.value,
        _c = _a.label,
        label = _c === void 0 ? value : _c;
      var value2 = _b.value,
        _d = _b.label,
        label2 = _d === void 0 ? value2 : _d;
      return label.localeCompare(label2, [], {
        sensitivity: 'base',
        ignorePunctuation: true,
        numeric: true
      });
    };
    exports.sortByAlpha = sortByAlpha;
    var sortByScore = function (a, b) {
      var _a = a.score,
        scoreA = _a === void 0 ? 0 : _a;
      var _b = b.score,
        scoreB = _b === void 0 ? 0 : _b;
      return scoreA - scoreB;
    };
    exports.sortByScore = sortByScore;
    var dispatchEvent = function (element, type, customArgs) {
      if (customArgs === void 0) {
        customArgs = null;
      }
      var event = new CustomEvent(type, {
        detail: customArgs,
        bubbles: true,
        cancelable: true
      });
      return element.dispatchEvent(event);
    };
    exports.dispatchEvent = dispatchEvent;
    var existsInArray = function (array, value, key) {
      if (key === void 0) {
        key = 'value';
      }
      return array.some(function (item) {
        if (typeof value === 'string') {
          return item[key] === value.trim();
        }
        return item[key] === value;
      });
    };
    exports.existsInArray = existsInArray;
    var cloneObject = function (obj) {
      return JSON.parse(JSON.stringify(obj));
    };
    exports.cloneObject = cloneObject;
    /**
     * Returns an array of keys present on the first but missing on the second object
     */
    var diff = function (a, b) {
      var aKeys = Object.keys(a).sort();
      var bKeys = Object.keys(b).sort();
      return aKeys.filter(function (i) {
        return bKeys.indexOf(i) < 0;
      });
    };
    exports.diff = diff;
    var parseCustomProperties = function (customProperties) {
      if (typeof customProperties !== 'undefined') {
        try {
          return JSON.parse(customProperties);
        } catch (e) {
          return customProperties;
        }
      }
      return {};
    };
    exports.parseCustomProperties = parseCustomProperties;

    /***/ }),

    /***/ 273:
    /***/ (function(__unused_webpack_module, exports) {



    var __spreadArray = this && this.__spreadArray || function (to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.defaultState = void 0;
    exports.defaultState = [];
    function choices(state, action) {
      if (state === void 0) {
        state = exports.defaultState;
      }
      if (action === void 0) {
        action = {};
      }
      switch (action.type) {
        case 'ADD_CHOICE':
          {
            var addChoiceAction = action;
            var choice = {
              id: addChoiceAction.id,
              elementId: addChoiceAction.elementId,
              groupId: addChoiceAction.groupId,
              value: addChoiceAction.value,
              label: addChoiceAction.label || addChoiceAction.value,
              disabled: addChoiceAction.disabled || false,
              selected: false,
              active: true,
              score: 9999,
              customProperties: addChoiceAction.customProperties,
              placeholder: addChoiceAction.placeholder || false
            };
            /*
              A disabled choice appears in the choice dropdown but cannot be selected
              A selected choice has been added to the passed input's value (added as an item)
              An active choice appears within the choice dropdown
            */
            return __spreadArray(__spreadArray([], state, true), [choice], false);
          }
        case 'ADD_ITEM':
          {
            var addItemAction_1 = action;
            // When an item is added and it has an associated choice,
            // we want to disable it so it can't be chosen again
            if (addItemAction_1.choiceId > -1) {
              return state.map(function (obj) {
                var choice = obj;
                if (choice.id === parseInt("".concat(addItemAction_1.choiceId), 10)) {
                  choice.selected = true;
                }
                return choice;
              });
            }
            return state;
          }
        case 'REMOVE_ITEM':
          {
            var removeItemAction_1 = action;
            // When an item is removed and it has an associated choice,
            // we want to re-enable it so it can be chosen again
            if (removeItemAction_1.choiceId && removeItemAction_1.choiceId > -1) {
              return state.map(function (obj) {
                var choice = obj;
                if (choice.id === parseInt("".concat(removeItemAction_1.choiceId), 10)) {
                  choice.selected = false;
                }
                return choice;
              });
            }
            return state;
          }
        case 'FILTER_CHOICES':
          {
            var filterChoicesAction_1 = action;
            return state.map(function (obj) {
              var choice = obj;
              // Set active state based on whether choice is
              // within filtered results
              choice.active = filterChoicesAction_1.results.some(function (_a) {
                var item = _a.item,
                  score = _a.score;
                if (item.id === choice.id) {
                  choice.score = score;
                  return true;
                }
                return false;
              });
              return choice;
            });
          }
        case 'ACTIVATE_CHOICES':
          {
            var activateChoicesAction_1 = action;
            return state.map(function (obj) {
              var choice = obj;
              choice.active = activateChoicesAction_1.active;
              return choice;
            });
          }
        case 'CLEAR_CHOICES':
          {
            return exports.defaultState;
          }
        default:
          {
            return state;
          }
      }
    }
    exports["default"] = choices;

    /***/ }),

    /***/ 871:
    /***/ (function(__unused_webpack_module, exports) {



    var __spreadArray = this && this.__spreadArray || function (to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.defaultState = void 0;
    exports.defaultState = [];
    function groups(state, action) {
      if (state === void 0) {
        state = exports.defaultState;
      }
      if (action === void 0) {
        action = {};
      }
      switch (action.type) {
        case 'ADD_GROUP':
          {
            var addGroupAction = action;
            return __spreadArray(__spreadArray([], state, true), [{
              id: addGroupAction.id,
              value: addGroupAction.value,
              active: addGroupAction.active,
              disabled: addGroupAction.disabled
            }], false);
          }
        case 'CLEAR_CHOICES':
          {
            return [];
          }
        default:
          {
            return state;
          }
      }
    }
    exports["default"] = groups;

    /***/ }),

    /***/ 655:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.defaultState = void 0;
    var redux_1 = __webpack_require__(791);
    var items_1 = __importDefault(__webpack_require__(52));
    var groups_1 = __importDefault(__webpack_require__(871));
    var choices_1 = __importDefault(__webpack_require__(273));
    var loading_1 = __importDefault(__webpack_require__(502));
    var utils_1 = __webpack_require__(799);
    exports.defaultState = {
      groups: [],
      items: [],
      choices: [],
      loading: false
    };
    var appReducer = (0, redux_1.combineReducers)({
      items: items_1.default,
      groups: groups_1.default,
      choices: choices_1.default,
      loading: loading_1.default
    });
    var rootReducer = function (passedState, action) {
      var state = passedState;
      // If we are clearing all items, groups and options we reassign
      // state and then pass that state to our proper reducer. This isn't
      // mutating our actual state
      // See: http://stackoverflow.com/a/35641992
      if (action.type === 'CLEAR_ALL') {
        state = exports.defaultState;
      } else if (action.type === 'RESET_TO') {
        return (0, utils_1.cloneObject)(action.state);
      }
      return appReducer(state, action);
    };
    exports["default"] = rootReducer;

    /***/ }),

    /***/ 52:
    /***/ (function(__unused_webpack_module, exports) {



    var __spreadArray = this && this.__spreadArray || function (to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.defaultState = void 0;
    exports.defaultState = [];
    function items(state, action) {
      if (state === void 0) {
        state = exports.defaultState;
      }
      if (action === void 0) {
        action = {};
      }
      switch (action.type) {
        case 'ADD_ITEM':
          {
            var addItemAction = action;
            // Add object to items array
            var newState = __spreadArray(__spreadArray([], state, true), [{
              id: addItemAction.id,
              choiceId: addItemAction.choiceId,
              groupId: addItemAction.groupId,
              value: addItemAction.value,
              label: addItemAction.label,
              active: true,
              highlighted: false,
              customProperties: addItemAction.customProperties,
              placeholder: addItemAction.placeholder || false,
              keyCode: null
            }], false);
            return newState.map(function (obj) {
              var item = obj;
              item.highlighted = false;
              return item;
            });
          }
        case 'REMOVE_ITEM':
          {
            // Set item to inactive
            return state.map(function (obj) {
              var item = obj;
              if (item.id === action.id) {
                item.active = false;
              }
              return item;
            });
          }
        case 'HIGHLIGHT_ITEM':
          {
            var highlightItemAction_1 = action;
            return state.map(function (obj) {
              var item = obj;
              if (item.id === highlightItemAction_1.id) {
                item.highlighted = highlightItemAction_1.highlighted;
              }
              return item;
            });
          }
        default:
          {
            return state;
          }
      }
    }
    exports["default"] = items;

    /***/ }),

    /***/ 502:
    /***/ (function(__unused_webpack_module, exports) {



    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    exports.defaultState = void 0;
    exports.defaultState = false;
    var general = function (state, action) {
      if (state === void 0) {
        state = exports.defaultState;
      }
      if (action === void 0) {
        action = {};
      }
      switch (action.type) {
        case 'SET_IS_LOADING':
          {
            return action.isLoading;
          }
        default:
          {
            return state;
          }
      }
    };
    exports["default"] = general;

    /***/ }),

    /***/ 744:
    /***/ (function(__unused_webpack_module, exports, __webpack_require__) {



    var __spreadArray = this && this.__spreadArray || function (to, from, pack) {
      if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
          if (!ar) ar = Array.prototype.slice.call(from, 0, i);
          ar[i] = from[i];
        }
      }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    var __importDefault = this && this.__importDefault || function (mod) {
      return mod && mod.__esModule ? mod : {
        "default": mod
      };
    };
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    /* eslint-disable @typescript-eslint/no-explicit-any */
    var redux_1 = __webpack_require__(791);
    var index_1 = __importDefault(__webpack_require__(655));
    var Store = /** @class */function () {
      function Store() {
        this._store = (0, redux_1.createStore)(index_1.default, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());
      }
      /**
       * Subscribe store to function call (wrapped Redux method)
       */
      Store.prototype.subscribe = function (onChange) {
        this._store.subscribe(onChange);
      };
      /**
       * Dispatch event to store (wrapped Redux method)
       */
      Store.prototype.dispatch = function (action) {
        this._store.dispatch(action);
      };
      Object.defineProperty(Store.prototype, "state", {
        /**
         * Get store object (wrapping Redux method)
         */
        get: function () {
          return this._store.getState();
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "items", {
        /**
         * Get items from store
         */
        get: function () {
          return this.state.items;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "activeItems", {
        /**
         * Get active items from store
         */
        get: function () {
          return this.items.filter(function (item) {
            return item.active === true;
          });
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "highlightedActiveItems", {
        /**
         * Get highlighted items from store
         */
        get: function () {
          return this.items.filter(function (item) {
            return item.active && item.highlighted;
          });
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "choices", {
        /**
         * Get choices from store
         */
        get: function () {
          return this.state.choices;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "activeChoices", {
        /**
         * Get active choices from store
         */
        get: function () {
          return this.choices.filter(function (choice) {
            return choice.active === true;
          });
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "selectableChoices", {
        /**
         * Get selectable choices from store
         */
        get: function () {
          return this.choices.filter(function (choice) {
            return choice.disabled !== true;
          });
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "searchableChoices", {
        /**
         * Get choices that can be searched (excluding placeholders)
         */
        get: function () {
          return this.selectableChoices.filter(function (choice) {
            return choice.placeholder !== true;
          });
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "placeholderChoice", {
        /**
         * Get placeholder choice from store
         */
        get: function () {
          return __spreadArray([], this.choices, true).reverse().find(function (choice) {
            return choice.placeholder === true;
          });
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "groups", {
        /**
         * Get groups from store
         */
        get: function () {
          return this.state.groups;
        },
        enumerable: false,
        configurable: true
      });
      Object.defineProperty(Store.prototype, "activeGroups", {
        /**
         * Get active groups from store
         */
        get: function () {
          var _a = this,
            groups = _a.groups,
            choices = _a.choices;
          return groups.filter(function (group) {
            var isActive = group.active === true && group.disabled === false;
            var hasActiveOptions = choices.some(function (choice) {
              return choice.active === true && choice.disabled === false;
            });
            return isActive && hasActiveOptions;
          }, []);
        },
        enumerable: false,
        configurable: true
      });
      /**
       * Get loading state from store
       */
      Store.prototype.isLoading = function () {
        return this.state.loading;
      };
      /**
       * Get single choice by it's ID
       */
      Store.prototype.getChoiceById = function (id) {
        return this.activeChoices.find(function (choice) {
          return choice.id === parseInt(id, 10);
        });
      };
      /**
       * Get group by group id
       */
      Store.prototype.getGroupById = function (id) {
        return this.groups.find(function (group) {
          return group.id === id;
        });
      };
      return Store;
    }();
    exports["default"] = Store;

    /***/ }),

    /***/ 686:
    /***/ (function(__unused_webpack_module, exports) {



    /**
     * Helpers to create HTML elements used by Choices
     * Can be overridden by providing `callbackOnCreateTemplates` option
     */
    Object.defineProperty(exports, "__esModule", ({
      value: true
    }));
    var templates = {
      containerOuter: function (_a, dir, isSelectElement, isSelectOneElement, searchEnabled, passedElementType, labelId) {
        var containerOuter = _a.classNames.containerOuter;
        var div = Object.assign(document.createElement('div'), {
          className: containerOuter
        });
        div.dataset.type = passedElementType;
        if (dir) {
          div.dir = dir;
        }
        if (isSelectOneElement) {
          div.tabIndex = 0;
        }
        if (isSelectElement) {
          div.setAttribute('role', searchEnabled ? 'combobox' : 'listbox');
          if (searchEnabled) {
            div.setAttribute('aria-autocomplete', 'list');
          }
        }
        div.setAttribute('aria-haspopup', 'true');
        div.setAttribute('aria-expanded', 'false');
        if (labelId) {
          div.setAttribute('aria-labelledby', labelId);
        }
        return div;
      },
      containerInner: function (_a) {
        var containerInner = _a.classNames.containerInner;
        return Object.assign(document.createElement('div'), {
          className: containerInner
        });
      },
      itemList: function (_a, isSelectOneElement) {
        var _b = _a.classNames,
          list = _b.list,
          listSingle = _b.listSingle,
          listItems = _b.listItems;
        return Object.assign(document.createElement('div'), {
          className: "".concat(list, " ").concat(isSelectOneElement ? listSingle : listItems)
        });
      },
      placeholder: function (_a, value) {
        var _b;
        var allowHTML = _a.allowHTML,
          placeholder = _a.classNames.placeholder;
        return Object.assign(document.createElement('div'), (_b = {
          className: placeholder
        }, _b[allowHTML ? 'innerHTML' : 'innerText'] = value, _b));
      },
      item: function (_a, _b, removeItemButton) {
        var _c, _d;
        var allowHTML = _a.allowHTML,
          _e = _a.classNames,
          item = _e.item,
          button = _e.button,
          highlightedState = _e.highlightedState,
          itemSelectable = _e.itemSelectable,
          placeholder = _e.placeholder;
        var id = _b.id,
          value = _b.value,
          label = _b.label,
          customProperties = _b.customProperties,
          active = _b.active,
          disabled = _b.disabled,
          highlighted = _b.highlighted,
          isPlaceholder = _b.placeholder;
        var div = Object.assign(document.createElement('div'), (_c = {
          className: item
        }, _c[allowHTML ? 'innerHTML' : 'innerText'] = label, _c));
        Object.assign(div.dataset, {
          item: '',
          id: id,
          value: value,
          customProperties: customProperties
        });
        if (active) {
          div.setAttribute('aria-selected', 'true');
        }
        if (disabled) {
          div.setAttribute('aria-disabled', 'true');
        }
        if (isPlaceholder) {
          div.classList.add(placeholder);
        }
        div.classList.add(highlighted ? highlightedState : itemSelectable);
        if (removeItemButton) {
          if (disabled) {
            div.classList.remove(itemSelectable);
          }
          div.dataset.deletable = '';
          /** @todo This MUST be localizable, not hardcoded! */
          var REMOVE_ITEM_TEXT = 'Remove item';
          var removeButton = Object.assign(document.createElement('button'), (_d = {
            type: 'button',
            className: button
          }, _d[allowHTML ? 'innerHTML' : 'innerText'] = REMOVE_ITEM_TEXT, _d));
          removeButton.setAttribute('aria-label', "".concat(REMOVE_ITEM_TEXT, ": '").concat(value, "'"));
          removeButton.dataset.button = '';
          div.appendChild(removeButton);
        }
        return div;
      },
      choiceList: function (_a, isSelectOneElement) {
        var list = _a.classNames.list;
        var div = Object.assign(document.createElement('div'), {
          className: list
        });
        if (!isSelectOneElement) {
          div.setAttribute('aria-multiselectable', 'true');
        }
        div.setAttribute('role', 'listbox');
        return div;
      },
      choiceGroup: function (_a, _b) {
        var _c;
        var allowHTML = _a.allowHTML,
          _d = _a.classNames,
          group = _d.group,
          groupHeading = _d.groupHeading,
          itemDisabled = _d.itemDisabled;
        var id = _b.id,
          value = _b.value,
          disabled = _b.disabled;
        var div = Object.assign(document.createElement('div'), {
          className: "".concat(group, " ").concat(disabled ? itemDisabled : '')
        });
        div.setAttribute('role', 'group');
        Object.assign(div.dataset, {
          group: '',
          id: id,
          value: value
        });
        if (disabled) {
          div.setAttribute('aria-disabled', 'true');
        }
        div.appendChild(Object.assign(document.createElement('div'), (_c = {
          className: groupHeading
        }, _c[allowHTML ? 'innerHTML' : 'innerText'] = value, _c)));
        return div;
      },
      choice: function (_a, _b, selectText) {
        var _c;
        var allowHTML = _a.allowHTML,
          _d = _a.classNames,
          item = _d.item,
          itemChoice = _d.itemChoice,
          itemSelectable = _d.itemSelectable,
          selectedState = _d.selectedState,
          itemDisabled = _d.itemDisabled,
          placeholder = _d.placeholder;
        var id = _b.id,
          value = _b.value,
          label = _b.label,
          groupId = _b.groupId,
          elementId = _b.elementId,
          isDisabled = _b.disabled,
          isSelected = _b.selected,
          isPlaceholder = _b.placeholder;
        var div = Object.assign(document.createElement('div'), (_c = {
          id: elementId
        }, _c[allowHTML ? 'innerHTML' : 'innerText'] = label, _c.className = "".concat(item, " ").concat(itemChoice), _c));
        if (isSelected) {
          div.classList.add(selectedState);
        }
        if (isPlaceholder) {
          div.classList.add(placeholder);
        }
        div.setAttribute('role', groupId && groupId > 0 ? 'treeitem' : 'option');
        Object.assign(div.dataset, {
          choice: '',
          id: id,
          value: value,
          selectText: selectText
        });
        if (isDisabled) {
          div.classList.add(itemDisabled);
          div.dataset.choiceDisabled = '';
          div.setAttribute('aria-disabled', 'true');
        } else {
          div.classList.add(itemSelectable);
          div.dataset.choiceSelectable = '';
        }
        return div;
      },
      input: function (_a, placeholderValue) {
        var _b = _a.classNames,
          input = _b.input,
          inputCloned = _b.inputCloned;
        var inp = Object.assign(document.createElement('input'), {
          type: 'search',
          name: 'search_terms',
          className: "".concat(input, " ").concat(inputCloned),
          autocomplete: 'off',
          autocapitalize: 'off',
          spellcheck: false
        });
        inp.setAttribute('role', 'textbox');
        inp.setAttribute('aria-autocomplete', 'list');
        inp.setAttribute('aria-label', placeholderValue);
        return inp;
      },
      dropdown: function (_a) {
        var _b = _a.classNames,
          list = _b.list,
          listDropdown = _b.listDropdown;
        var div = document.createElement('div');
        div.classList.add(list, listDropdown);
        div.setAttribute('aria-expanded', 'false');
        return div;
      },
      notice: function (_a, innerText, type) {
        var _b;
        var allowHTML = _a.allowHTML,
          _c = _a.classNames,
          item = _c.item,
          itemChoice = _c.itemChoice,
          noResults = _c.noResults,
          noChoices = _c.noChoices;
        if (type === void 0) {
          type = '';
        }
        var classes = [item, itemChoice];
        if (type === 'no-choices') {
          classes.push(noChoices);
        } else if (type === 'no-results') {
          classes.push(noResults);
        }
        return Object.assign(document.createElement('div'), (_b = {}, _b[allowHTML ? 'innerHTML' : 'innerText'] = innerText, _b.className = classes.join(' '), _b));
      },
      option: function (_a) {
        var label = _a.label,
          value = _a.value,
          customProperties = _a.customProperties,
          active = _a.active,
          disabled = _a.disabled;
        var opt = new Option(label, value, false, active);
        if (customProperties) {
          opt.dataset.customProperties = "".concat(customProperties);
        }
        opt.disabled = !!disabled;
        return opt;
      }
    };
    exports["default"] = templates;

    /***/ }),

    /***/ 996:
    /***/ (function(module) {



    var isMergeableObject = function isMergeableObject(value) {
    	return isNonNullObject(value)
    		&& !isSpecial(value)
    };

    function isNonNullObject(value) {
    	return !!value && typeof value === 'object'
    }

    function isSpecial(value) {
    	var stringValue = Object.prototype.toString.call(value);

    	return stringValue === '[object RegExp]'
    		|| stringValue === '[object Date]'
    		|| isReactElement(value)
    }

    // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25
    var canUseSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;

    function isReactElement(value) {
    	return value.$$typeof === REACT_ELEMENT_TYPE
    }

    function emptyTarget(val) {
    	return Array.isArray(val) ? [] : {}
    }

    function cloneUnlessOtherwiseSpecified(value, options) {
    	return (options.clone !== false && options.isMergeableObject(value))
    		? deepmerge(emptyTarget(value), value, options)
    		: value
    }

    function defaultArrayMerge(target, source, options) {
    	return target.concat(source).map(function(element) {
    		return cloneUnlessOtherwiseSpecified(element, options)
    	})
    }

    function getMergeFunction(key, options) {
    	if (!options.customMerge) {
    		return deepmerge
    	}
    	var customMerge = options.customMerge(key);
    	return typeof customMerge === 'function' ? customMerge : deepmerge
    }

    function getEnumerableOwnPropertySymbols(target) {
    	return Object.getOwnPropertySymbols
    		? Object.getOwnPropertySymbols(target).filter(function(symbol) {
    			return target.propertyIsEnumerable(symbol)
    		})
    		: []
    }

    function getKeys(target) {
    	return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))
    }

    function propertyIsOnObject(object, property) {
    	try {
    		return property in object
    	} catch(_) {
    		return false
    	}
    }

    // Protects from prototype poisoning and unexpected merging up the prototype chain.
    function propertyIsUnsafe(target, key) {
    	return propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,
    		&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,
    			&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.
    }

    function mergeObject(target, source, options) {
    	var destination = {};
    	if (options.isMergeableObject(target)) {
    		getKeys(target).forEach(function(key) {
    			destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);
    		});
    	}
    	getKeys(source).forEach(function(key) {
    		if (propertyIsUnsafe(target, key)) {
    			return
    		}

    		if (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {
    			destination[key] = getMergeFunction(key, options)(target[key], source[key], options);
    		} else {
    			destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);
    		}
    	});
    	return destination
    }

    function deepmerge(target, source, options) {
    	options = options || {};
    	options.arrayMerge = options.arrayMerge || defaultArrayMerge;
    	options.isMergeableObject = options.isMergeableObject || isMergeableObject;
    	// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()
    	// implementations can use it. The caller may not replace it.
    	options.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;

    	var sourceIsArray = Array.isArray(source);
    	var targetIsArray = Array.isArray(target);
    	var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;

    	if (!sourceAndTargetTypesMatch) {
    		return cloneUnlessOtherwiseSpecified(source, options)
    	} else if (sourceIsArray) {
    		return options.arrayMerge(target, source, options)
    	} else {
    		return mergeObject(target, source, options)
    	}
    }

    deepmerge.all = function deepmergeAll(array, options) {
    	if (!Array.isArray(array)) {
    		throw new Error('first argument should be an array')
    	}

    	return array.reduce(function(prev, next) {
    		return deepmerge(prev, next, options)
    	}, {})
    };

    var deepmerge_1 = deepmerge;

    module.exports = deepmerge_1;


    /***/ }),

    /***/ 221:
    /***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

    __webpack_require__.r(__webpack_exports__);
    /* harmony export */ __webpack_require__.d(__webpack_exports__, {
    /* harmony export */   "default": function() { return /* binding */ Fuse; }
    /* harmony export */ });
    /**
     * Fuse.js v6.6.2 - Lightweight fuzzy-search (http://fusejs.io)
     *
     * Copyright (c) 2022 Kiro Risk (http://kiro.me)
     * All Rights Reserved. Apache Software License 2.0
     *
     * http://www.apache.org/licenses/LICENSE-2.0
     */

    function isArray(value) {
      return !Array.isArray
        ? getTag(value) === '[object Array]'
        : Array.isArray(value)
    }

    // Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js
    const INFINITY = 1 / 0;
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value
      }
      let result = value + '';
      return result == '0' && 1 / value == -INFINITY ? '-0' : result
    }

    function toString(value) {
      return value == null ? '' : baseToString(value)
    }

    function isString(value) {
      return typeof value === 'string'
    }

    function isNumber(value) {
      return typeof value === 'number'
    }

    // Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js
    function isBoolean(value) {
      return (
        value === true ||
        value === false ||
        (isObjectLike(value) && getTag(value) == '[object Boolean]')
      )
    }

    function isObject(value) {
      return typeof value === 'object'
    }

    // Checks if `value` is object-like.
    function isObjectLike(value) {
      return isObject(value) && value !== null
    }

    function isDefined(value) {
      return value !== undefined && value !== null
    }

    function isBlank(value) {
      return !value.trim().length
    }

    // Gets the `toStringTag` of `value`.
    // Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js
    function getTag(value) {
      return value == null
        ? value === undefined
          ? '[object Undefined]'
          : '[object Null]'
        : Object.prototype.toString.call(value)
    }

    const INCORRECT_INDEX_TYPE = "Incorrect 'index' type";

    const LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>
      `Invalid value for key ${key}`;

    const PATTERN_LENGTH_TOO_LARGE = (max) =>
      `Pattern length exceeds max of ${max}.`;

    const MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;

    const INVALID_KEY_WEIGHT_VALUE = (key) =>
      `Property 'weight' in key '${key}' must be a positive integer`;

    const hasOwn = Object.prototype.hasOwnProperty;

    class KeyStore {
      constructor(keys) {
        this._keys = [];
        this._keyMap = {};

        let totalWeight = 0;

        keys.forEach((key) => {
          let obj = createKey(key);

          totalWeight += obj.weight;

          this._keys.push(obj);
          this._keyMap[obj.id] = obj;

          totalWeight += obj.weight;
        });

        // Normalize weights so that their sum is equal to 1
        this._keys.forEach((key) => {
          key.weight /= totalWeight;
        });
      }
      get(keyId) {
        return this._keyMap[keyId]
      }
      keys() {
        return this._keys
      }
      toJSON() {
        return JSON.stringify(this._keys)
      }
    }

    function createKey(key) {
      let path = null;
      let id = null;
      let src = null;
      let weight = 1;
      let getFn = null;

      if (isString(key) || isArray(key)) {
        src = key;
        path = createKeyPath(key);
        id = createKeyId(key);
      } else {
        if (!hasOwn.call(key, 'name')) {
          throw new Error(MISSING_KEY_PROPERTY('name'))
        }

        const name = key.name;
        src = name;

        if (hasOwn.call(key, 'weight')) {
          weight = key.weight;

          if (weight <= 0) {
            throw new Error(INVALID_KEY_WEIGHT_VALUE(name))
          }
        }

        path = createKeyPath(name);
        id = createKeyId(name);
        getFn = key.getFn;
      }

      return { path, id, weight, src, getFn }
    }

    function createKeyPath(key) {
      return isArray(key) ? key : key.split('.')
    }

    function createKeyId(key) {
      return isArray(key) ? key.join('.') : key
    }

    function get(obj, path) {
      let list = [];
      let arr = false;

      const deepGet = (obj, path, index) => {
        if (!isDefined(obj)) {
          return
        }
        if (!path[index]) {
          // If there's no path left, we've arrived at the object we care about.
          list.push(obj);
        } else {
          let key = path[index];

          const value = obj[key];

          if (!isDefined(value)) {
            return
          }

          // If we're at the last value in the path, and if it's a string/number/bool,
          // add it to the list
          if (
            index === path.length - 1 &&
            (isString(value) || isNumber(value) || isBoolean(value))
          ) {
            list.push(toString(value));
          } else if (isArray(value)) {
            arr = true;
            // Search each item in the array.
            for (let i = 0, len = value.length; i < len; i += 1) {
              deepGet(value[i], path, index + 1);
            }
          } else if (path.length) {
            // An object. Recurse further.
            deepGet(value, path, index + 1);
          }
        }
      };

      // Backwards compatibility (since path used to be a string)
      deepGet(obj, isString(path) ? path.split('.') : path, 0);

      return arr ? list : list[0]
    }

    const MatchOptions = {
      // Whether the matches should be included in the result set. When `true`, each record in the result
      // set will include the indices of the matched characters.
      // These can consequently be used for highlighting purposes.
      includeMatches: false,
      // When `true`, the matching function will continue to the end of a search pattern even if
      // a perfect match has already been located in the string.
      findAllMatches: false,
      // Minimum number of characters that must be matched before a result is considered a match
      minMatchCharLength: 1
    };

    const BasicOptions = {
      // When `true`, the algorithm continues searching to the end of the input even if a perfect
      // match is found before the end of the same input.
      isCaseSensitive: false,
      // When true, the matching function will continue to the end of a search pattern even if
      includeScore: false,
      // List of properties that will be searched. This also supports nested properties.
      keys: [],
      // Whether to sort the result list, by score
      shouldSort: true,
      // Default sort function: sort by ascending score, ascending index
      sortFn: (a, b) =>
        a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1
    };

    const FuzzyOptions = {
      // Approximately where in the text is the pattern expected to be found?
      location: 0,
      // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match
      // (of both letters and location), a threshold of '1.0' would match anything.
      threshold: 0.6,
      // Determines how close the match must be to the fuzzy location (specified above).
      // An exact letter match which is 'distance' characters away from the fuzzy location
      // would score as a complete mismatch. A distance of '0' requires the match be at
      // the exact location specified, a threshold of '1000' would require a perfect match
      // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.
      distance: 100
    };

    const AdvancedOptions = {
      // When `true`, it enables the use of unix-like search commands
      useExtendedSearch: false,
      // The get function to use when fetching an object's properties.
      // The default will search nested paths *ie foo.bar.baz*
      getFn: get,
      // When `true`, search will ignore `location` and `distance`, so it won't matter
      // where in the string the pattern appears.
      // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score
      ignoreLocation: false,
      // When `true`, the calculation for the relevance score (used for sorting) will
      // ignore the field-length norm.
      // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm
      ignoreFieldNorm: false,
      // The weight to determine how much field length norm effects scoring.
      fieldNormWeight: 1
    };

    var Config = {
      ...BasicOptions,
      ...MatchOptions,
      ...FuzzyOptions,
      ...AdvancedOptions
    };

    const SPACE = /[^ ]+/g;

    // Field-length norm: the shorter the field, the higher the weight.
    // Set to 3 decimals to reduce index size.
    function norm(weight = 1, mantissa = 3) {
      const cache = new Map();
      const m = Math.pow(10, mantissa);

      return {
        get(value) {
          const numTokens = value.match(SPACE).length;

          if (cache.has(numTokens)) {
            return cache.get(numTokens)
          }

          // Default function is 1/sqrt(x), weight makes that variable
          const norm = 1 / Math.pow(numTokens, 0.5 * weight);

          // In place of `toFixed(mantissa)`, for faster computation
          const n = parseFloat(Math.round(norm * m) / m);

          cache.set(numTokens, n);

          return n
        },
        clear() {
          cache.clear();
        }
      }
    }

    class FuseIndex {
      constructor({
        getFn = Config.getFn,
        fieldNormWeight = Config.fieldNormWeight
      } = {}) {
        this.norm = norm(fieldNormWeight, 3);
        this.getFn = getFn;
        this.isCreated = false;

        this.setIndexRecords();
      }
      setSources(docs = []) {
        this.docs = docs;
      }
      setIndexRecords(records = []) {
        this.records = records;
      }
      setKeys(keys = []) {
        this.keys = keys;
        this._keysMap = {};
        keys.forEach((key, idx) => {
          this._keysMap[key.id] = idx;
        });
      }
      create() {
        if (this.isCreated || !this.docs.length) {
          return
        }

        this.isCreated = true;

        // List is Array<String>
        if (isString(this.docs[0])) {
          this.docs.forEach((doc, docIndex) => {
            this._addString(doc, docIndex);
          });
        } else {
          // List is Array<Object>
          this.docs.forEach((doc, docIndex) => {
            this._addObject(doc, docIndex);
          });
        }

        this.norm.clear();
      }
      // Adds a doc to the end of the index
      add(doc) {
        const idx = this.size();

        if (isString(doc)) {
          this._addString(doc, idx);
        } else {
          this._addObject(doc, idx);
        }
      }
      // Removes the doc at the specified index of the index
      removeAt(idx) {
        this.records.splice(idx, 1);

        // Change ref index of every subsquent doc
        for (let i = idx, len = this.size(); i < len; i += 1) {
          this.records[i].i -= 1;
        }
      }
      getValueForItemAtKeyId(item, keyId) {
        return item[this._keysMap[keyId]]
      }
      size() {
        return this.records.length
      }
      _addString(doc, docIndex) {
        if (!isDefined(doc) || isBlank(doc)) {
          return
        }

        let record = {
          v: doc,
          i: docIndex,
          n: this.norm.get(doc)
        };

        this.records.push(record);
      }
      _addObject(doc, docIndex) {
        let record = { i: docIndex, $: {} };

        // Iterate over every key (i.e, path), and fetch the value at that key
        this.keys.forEach((key, keyIndex) => {
          let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);

          if (!isDefined(value)) {
            return
          }

          if (isArray(value)) {
            let subRecords = [];
            const stack = [{ nestedArrIndex: -1, value }];

            while (stack.length) {
              const { nestedArrIndex, value } = stack.pop();

              if (!isDefined(value)) {
                continue
              }

              if (isString(value) && !isBlank(value)) {
                let subRecord = {
                  v: value,
                  i: nestedArrIndex,
                  n: this.norm.get(value)
                };

                subRecords.push(subRecord);
              } else if (isArray(value)) {
                value.forEach((item, k) => {
                  stack.push({
                    nestedArrIndex: k,
                    value: item
                  });
                });
              }
            }
            record.$[keyIndex] = subRecords;
          } else if (isString(value) && !isBlank(value)) {
            let subRecord = {
              v: value,
              n: this.norm.get(value)
            };

            record.$[keyIndex] = subRecord;
          }
        });

        this.records.push(record);
      }
      toJSON() {
        return {
          keys: this.keys,
          records: this.records
        }
      }
    }

    function createIndex(
      keys,
      docs,
      { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}
    ) {
      const myIndex = new FuseIndex({ getFn, fieldNormWeight });
      myIndex.setKeys(keys.map(createKey));
      myIndex.setSources(docs);
      myIndex.create();
      return myIndex
    }

    function parseIndex(
      data,
      { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}
    ) {
      const { keys, records } = data;
      const myIndex = new FuseIndex({ getFn, fieldNormWeight });
      myIndex.setKeys(keys);
      myIndex.setIndexRecords(records);
      return myIndex
    }

    function computeScore$1(
      pattern,
      {
        errors = 0,
        currentLocation = 0,
        expectedLocation = 0,
        distance = Config.distance,
        ignoreLocation = Config.ignoreLocation
      } = {}
    ) {
      const accuracy = errors / pattern.length;

      if (ignoreLocation) {
        return accuracy
      }

      const proximity = Math.abs(expectedLocation - currentLocation);

      if (!distance) {
        // Dodge divide by zero error.
        return proximity ? 1.0 : accuracy
      }

      return accuracy + proximity / distance
    }

    function convertMaskToIndices(
      matchmask = [],
      minMatchCharLength = Config.minMatchCharLength
    ) {
      let indices = [];
      let start = -1;
      let end = -1;
      let i = 0;

      for (let len = matchmask.length; i < len; i += 1) {
        let match = matchmask[i];
        if (match && start === -1) {
          start = i;
        } else if (!match && start !== -1) {
          end = i - 1;
          if (end - start + 1 >= minMatchCharLength) {
            indices.push([start, end]);
          }
          start = -1;
        }
      }

      // (i-1 - start) + 1 => i - start
      if (matchmask[i - 1] && i - start >= minMatchCharLength) {
        indices.push([start, i - 1]);
      }

      return indices
    }

    // Machine word size
    const MAX_BITS = 32;

    function search(
      text,
      pattern,
      patternAlphabet,
      {
        location = Config.location,
        distance = Config.distance,
        threshold = Config.threshold,
        findAllMatches = Config.findAllMatches,
        minMatchCharLength = Config.minMatchCharLength,
        includeMatches = Config.includeMatches,
        ignoreLocation = Config.ignoreLocation
      } = {}
    ) {
      if (pattern.length > MAX_BITS) {
        throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))
      }

      const patternLen = pattern.length;
      // Set starting location at beginning text and initialize the alphabet.
      const textLen = text.length;
      // Handle the case when location > text.length
      const expectedLocation = Math.max(0, Math.min(location, textLen));
      // Highest score beyond which we give up.
      let currentThreshold = threshold;
      // Is there a nearby exact match? (speedup)
      let bestLocation = expectedLocation;

      // Performance: only computer matches when the minMatchCharLength > 1
      // OR if `includeMatches` is true.
      const computeMatches = minMatchCharLength > 1 || includeMatches;
      // A mask of the matches, used for building the indices
      const matchMask = computeMatches ? Array(textLen) : [];

      let index;

      // Get all exact matches, here for speed up
      while ((index = text.indexOf(pattern, bestLocation)) > -1) {
        let score = computeScore$1(pattern, {
          currentLocation: index,
          expectedLocation,
          distance,
          ignoreLocation
        });

        currentThreshold = Math.min(score, currentThreshold);
        bestLocation = index + patternLen;

        if (computeMatches) {
          let i = 0;
          while (i < patternLen) {
            matchMask[index + i] = 1;
            i += 1;
          }
        }
      }

      // Reset the best location
      bestLocation = -1;

      let lastBitArr = [];
      let finalScore = 1;
      let binMax = patternLen + textLen;

      const mask = 1 << (patternLen - 1);

      for (let i = 0; i < patternLen; i += 1) {
        // Scan for the best match; each iteration allows for one more error.
        // Run a binary search to determine how far from the match location we can stray
        // at this error level.
        let binMin = 0;
        let binMid = binMax;

        while (binMin < binMid) {
          const score = computeScore$1(pattern, {
            errors: i,
            currentLocation: expectedLocation + binMid,
            expectedLocation,
            distance,
            ignoreLocation
          });

          if (score <= currentThreshold) {
            binMin = binMid;
          } else {
            binMax = binMid;
          }

          binMid = Math.floor((binMax - binMin) / 2 + binMin);
        }

        // Use the result from this iteration as the maximum for the next.
        binMax = binMid;

        let start = Math.max(1, expectedLocation - binMid + 1);
        let finish = findAllMatches
          ? textLen
          : Math.min(expectedLocation + binMid, textLen) + patternLen;

        // Initialize the bit array
        let bitArr = Array(finish + 2);

        bitArr[finish + 1] = (1 << i) - 1;

        for (let j = finish; j >= start; j -= 1) {
          let currentLocation = j - 1;
          let charMatch = patternAlphabet[text.charAt(currentLocation)];

          if (computeMatches) {
            // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)
            matchMask[currentLocation] = +!!charMatch;
          }

          // First pass: exact match
          bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;

          // Subsequent passes: fuzzy match
          if (i) {
            bitArr[j] |=
              ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];
          }

          if (bitArr[j] & mask) {
            finalScore = computeScore$1(pattern, {
              errors: i,
              currentLocation,
              expectedLocation,
              distance,
              ignoreLocation
            });

            // This match will almost certainly be better than any existing match.
            // But check anyway.
            if (finalScore <= currentThreshold) {
              // Indeed it is
              currentThreshold = finalScore;
              bestLocation = currentLocation;

              // Already passed `loc`, downhill from here on in.
              if (bestLocation <= expectedLocation) {
                break
              }

              // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.
              start = Math.max(1, 2 * expectedLocation - bestLocation);
            }
          }
        }

        // No hope for a (better) match at greater error levels.
        const score = computeScore$1(pattern, {
          errors: i + 1,
          currentLocation: expectedLocation,
          expectedLocation,
          distance,
          ignoreLocation
        });

        if (score > currentThreshold) {
          break
        }

        lastBitArr = bitArr;
      }

      const result = {
        isMatch: bestLocation >= 0,
        // Count exact matches (those with a score of 0) to be "almost" exact
        score: Math.max(0.001, finalScore)
      };

      if (computeMatches) {
        const indices = convertMaskToIndices(matchMask, minMatchCharLength);
        if (!indices.length) {
          result.isMatch = false;
        } else if (includeMatches) {
          result.indices = indices;
        }
      }

      return result
    }

    function createPatternAlphabet(pattern) {
      let mask = {};

      for (let i = 0, len = pattern.length; i < len; i += 1) {
        const char = pattern.charAt(i);
        mask[char] = (mask[char] || 0) | (1 << (len - i - 1));
      }

      return mask
    }

    class BitapSearch {
      constructor(
        pattern,
        {
          location = Config.location,
          threshold = Config.threshold,
          distance = Config.distance,
          includeMatches = Config.includeMatches,
          findAllMatches = Config.findAllMatches,
          minMatchCharLength = Config.minMatchCharLength,
          isCaseSensitive = Config.isCaseSensitive,
          ignoreLocation = Config.ignoreLocation
        } = {}
      ) {
        this.options = {
          location,
          threshold,
          distance,
          includeMatches,
          findAllMatches,
          minMatchCharLength,
          isCaseSensitive,
          ignoreLocation
        };

        this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();

        this.chunks = [];

        if (!this.pattern.length) {
          return
        }

        const addChunk = (pattern, startIndex) => {
          this.chunks.push({
            pattern,
            alphabet: createPatternAlphabet(pattern),
            startIndex
          });
        };

        const len = this.pattern.length;

        if (len > MAX_BITS) {
          let i = 0;
          const remainder = len % MAX_BITS;
          const end = len - remainder;

          while (i < end) {
            addChunk(this.pattern.substr(i, MAX_BITS), i);
            i += MAX_BITS;
          }

          if (remainder) {
            const startIndex = len - MAX_BITS;
            addChunk(this.pattern.substr(startIndex), startIndex);
          }
        } else {
          addChunk(this.pattern, 0);
        }
      }

      searchIn(text) {
        const { isCaseSensitive, includeMatches } = this.options;

        if (!isCaseSensitive) {
          text = text.toLowerCase();
        }

        // Exact match
        if (this.pattern === text) {
          let result = {
            isMatch: true,
            score: 0
          };

          if (includeMatches) {
            result.indices = [[0, text.length - 1]];
          }

          return result
        }

        // Otherwise, use Bitap algorithm
        const {
          location,
          distance,
          threshold,
          findAllMatches,
          minMatchCharLength,
          ignoreLocation
        } = this.options;

        let allIndices = [];
        let totalScore = 0;
        let hasMatches = false;

        this.chunks.forEach(({ pattern, alphabet, startIndex }) => {
          const { isMatch, score, indices } = search(text, pattern, alphabet, {
            location: location + startIndex,
            distance,
            threshold,
            findAllMatches,
            minMatchCharLength,
            includeMatches,
            ignoreLocation
          });

          if (isMatch) {
            hasMatches = true;
          }

          totalScore += score;

          if (isMatch && indices) {
            allIndices = [...allIndices, ...indices];
          }
        });

        let result = {
          isMatch: hasMatches,
          score: hasMatches ? totalScore / this.chunks.length : 1
        };

        if (hasMatches && includeMatches) {
          result.indices = allIndices;
        }

        return result
      }
    }

    class BaseMatch {
      constructor(pattern) {
        this.pattern = pattern;
      }
      static isMultiMatch(pattern) {
        return getMatch(pattern, this.multiRegex)
      }
      static isSingleMatch(pattern) {
        return getMatch(pattern, this.singleRegex)
      }
      search(/*text*/) {}
    }

    function getMatch(pattern, exp) {
      const matches = pattern.match(exp);
      return matches ? matches[1] : null
    }

    // Token: 'file

    class ExactMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'exact'
      }
      static get multiRegex() {
        return /^="(.*)"$/
      }
      static get singleRegex() {
        return /^=(.*)$/
      }
      search(text) {
        const isMatch = text === this.pattern;

        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices: [0, this.pattern.length - 1]
        }
      }
    }

    // Token: !fire

    class InverseExactMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'inverse-exact'
      }
      static get multiRegex() {
        return /^!"(.*)"$/
      }
      static get singleRegex() {
        return /^!(.*)$/
      }
      search(text) {
        const index = text.indexOf(this.pattern);
        const isMatch = index === -1;

        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices: [0, text.length - 1]
        }
      }
    }

    // Token: ^file

    class PrefixExactMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'prefix-exact'
      }
      static get multiRegex() {
        return /^\^"(.*)"$/
      }
      static get singleRegex() {
        return /^\^(.*)$/
      }
      search(text) {
        const isMatch = text.startsWith(this.pattern);

        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices: [0, this.pattern.length - 1]
        }
      }
    }

    // Token: !^fire

    class InversePrefixExactMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'inverse-prefix-exact'
      }
      static get multiRegex() {
        return /^!\^"(.*)"$/
      }
      static get singleRegex() {
        return /^!\^(.*)$/
      }
      search(text) {
        const isMatch = !text.startsWith(this.pattern);

        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices: [0, text.length - 1]
        }
      }
    }

    // Token: .file$

    class SuffixExactMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'suffix-exact'
      }
      static get multiRegex() {
        return /^"(.*)"\$$/
      }
      static get singleRegex() {
        return /^(.*)\$$/
      }
      search(text) {
        const isMatch = text.endsWith(this.pattern);

        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices: [text.length - this.pattern.length, text.length - 1]
        }
      }
    }

    // Token: !.file$

    class InverseSuffixExactMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'inverse-suffix-exact'
      }
      static get multiRegex() {
        return /^!"(.*)"\$$/
      }
      static get singleRegex() {
        return /^!(.*)\$$/
      }
      search(text) {
        const isMatch = !text.endsWith(this.pattern);
        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices: [0, text.length - 1]
        }
      }
    }

    class FuzzyMatch extends BaseMatch {
      constructor(
        pattern,
        {
          location = Config.location,
          threshold = Config.threshold,
          distance = Config.distance,
          includeMatches = Config.includeMatches,
          findAllMatches = Config.findAllMatches,
          minMatchCharLength = Config.minMatchCharLength,
          isCaseSensitive = Config.isCaseSensitive,
          ignoreLocation = Config.ignoreLocation
        } = {}
      ) {
        super(pattern);
        this._bitapSearch = new BitapSearch(pattern, {
          location,
          threshold,
          distance,
          includeMatches,
          findAllMatches,
          minMatchCharLength,
          isCaseSensitive,
          ignoreLocation
        });
      }
      static get type() {
        return 'fuzzy'
      }
      static get multiRegex() {
        return /^"(.*)"$/
      }
      static get singleRegex() {
        return /^(.*)$/
      }
      search(text) {
        return this._bitapSearch.searchIn(text)
      }
    }

    // Token: 'file

    class IncludeMatch extends BaseMatch {
      constructor(pattern) {
        super(pattern);
      }
      static get type() {
        return 'include'
      }
      static get multiRegex() {
        return /^'"(.*)"$/
      }
      static get singleRegex() {
        return /^'(.*)$/
      }
      search(text) {
        let location = 0;
        let index;

        const indices = [];
        const patternLen = this.pattern.length;

        // Get all exact matches
        while ((index = text.indexOf(this.pattern, location)) > -1) {
          location = index + patternLen;
          indices.push([index, location - 1]);
        }

        const isMatch = !!indices.length;

        return {
          isMatch,
          score: isMatch ? 0 : 1,
          indices
        }
      }
    }

    // ❗Order is important. DO NOT CHANGE.
    const searchers = [
      ExactMatch,
      IncludeMatch,
      PrefixExactMatch,
      InversePrefixExactMatch,
      InverseSuffixExactMatch,
      SuffixExactMatch,
      InverseExactMatch,
      FuzzyMatch
    ];

    const searchersLen = searchers.length;

    // Regex to split by spaces, but keep anything in quotes together
    const SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
    const OR_TOKEN = '|';

    // Return a 2D array representation of the query, for simpler parsing.
    // Example:
    // "^core go$ | rb$ | py$ xy$" => [["^core", "go$"], ["rb$"], ["py$", "xy$"]]
    function parseQuery(pattern, options = {}) {
      return pattern.split(OR_TOKEN).map((item) => {
        let query = item
          .trim()
          .split(SPACE_RE)
          .filter((item) => item && !!item.trim());

        let results = [];
        for (let i = 0, len = query.length; i < len; i += 1) {
          const queryItem = query[i];

          // 1. Handle multiple query match (i.e, once that are quoted, like `"hello world"`)
          let found = false;
          let idx = -1;
          while (!found && ++idx < searchersLen) {
            const searcher = searchers[idx];
            let token = searcher.isMultiMatch(queryItem);
            if (token) {
              results.push(new searcher(token, options));
              found = true;
            }
          }

          if (found) {
            continue
          }

          // 2. Handle single query matches (i.e, once that are *not* quoted)
          idx = -1;
          while (++idx < searchersLen) {
            const searcher = searchers[idx];
            let token = searcher.isSingleMatch(queryItem);
            if (token) {
              results.push(new searcher(token, options));
              break
            }
          }
        }

        return results
      })
    }

    // These extended matchers can return an array of matches, as opposed
    // to a singl match
    const MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);

    /**
     * Command-like searching
     * ======================
     *
     * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,
     * search in a given text.
     *
     * Search syntax:
     *
     * | Token       | Match type                 | Description                            |
     * | ----------- | -------------------------- | -------------------------------------- |
     * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |
     * | `=scheme`   | exact-match                | Items that are `scheme`                |
     * | `'python`   | include-match              | Items that include `python`            |
     * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |
     * | `^java`     | prefix-exact-match         | Items that start with `java`           |
     * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |
     * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |
     * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |
     *
     * A single pipe character acts as an OR operator. For example, the following
     * query matches entries that start with `core` and end with either`go`, `rb`,
     * or`py`.
     *
     * ```
     * ^core go$ | rb$ | py$
     * ```
     */
    class ExtendedSearch {
      constructor(
        pattern,
        {
          isCaseSensitive = Config.isCaseSensitive,
          includeMatches = Config.includeMatches,
          minMatchCharLength = Config.minMatchCharLength,
          ignoreLocation = Config.ignoreLocation,
          findAllMatches = Config.findAllMatches,
          location = Config.location,
          threshold = Config.threshold,
          distance = Config.distance
        } = {}
      ) {
        this.query = null;
        this.options = {
          isCaseSensitive,
          includeMatches,
          minMatchCharLength,
          findAllMatches,
          ignoreLocation,
          location,
          threshold,
          distance
        };

        this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
        this.query = parseQuery(this.pattern, this.options);
      }

      static condition(_, options) {
        return options.useExtendedSearch
      }

      searchIn(text) {
        const query = this.query;

        if (!query) {
          return {
            isMatch: false,
            score: 1
          }
        }

        const { includeMatches, isCaseSensitive } = this.options;

        text = isCaseSensitive ? text : text.toLowerCase();

        let numMatches = 0;
        let allIndices = [];
        let totalScore = 0;

        // ORs
        for (let i = 0, qLen = query.length; i < qLen; i += 1) {
          const searchers = query[i];

          // Reset indices
          allIndices.length = 0;
          numMatches = 0;

          // ANDs
          for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {
            const searcher = searchers[j];
            const { isMatch, indices, score } = searcher.search(text);

            if (isMatch) {
              numMatches += 1;
              totalScore += score;
              if (includeMatches) {
                const type = searcher.constructor.type;
                if (MultiMatchSet.has(type)) {
                  allIndices = [...allIndices, ...indices];
                } else {
                  allIndices.push(indices);
                }
              }
            } else {
              totalScore = 0;
              numMatches = 0;
              allIndices.length = 0;
              break
            }
          }

          // OR condition, so if TRUE, return
          if (numMatches) {
            let result = {
              isMatch: true,
              score: totalScore / numMatches
            };

            if (includeMatches) {
              result.indices = allIndices;
            }

            return result
          }
        }

        // Nothing was matched
        return {
          isMatch: false,
          score: 1
        }
      }
    }

    const registeredSearchers = [];

    function register(...args) {
      registeredSearchers.push(...args);
    }

    function createSearcher(pattern, options) {
      for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {
        let searcherClass = registeredSearchers[i];
        if (searcherClass.condition(pattern, options)) {
          return new searcherClass(pattern, options)
        }
      }

      return new BitapSearch(pattern, options)
    }

    const LogicalOperator = {
      AND: '$and',
      OR: '$or'
    };

    const KeyType = {
      PATH: '$path',
      PATTERN: '$val'
    };

    const isExpression = (query) =>
      !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);

    const isPath = (query) => !!query[KeyType.PATH];

    const isLeaf = (query) =>
      !isArray(query) && isObject(query) && !isExpression(query);

    const convertToExplicit = (query) => ({
      [LogicalOperator.AND]: Object.keys(query).map((key) => ({
        [key]: query[key]
      }))
    });

    // When `auto` is `true`, the parse function will infer and initialize and add
    // the appropriate `Searcher` instance
    function parse(query, options, { auto = true } = {}) {
      const next = (query) => {
        let keys = Object.keys(query);

        const isQueryPath = isPath(query);

        if (!isQueryPath && keys.length > 1 && !isExpression(query)) {
          return next(convertToExplicit(query))
        }

        if (isLeaf(query)) {
          const key = isQueryPath ? query[KeyType.PATH] : keys[0];

          const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];

          if (!isString(pattern)) {
            throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))
          }

          const obj = {
            keyId: createKeyId(key),
            pattern
          };

          if (auto) {
            obj.searcher = createSearcher(pattern, options);
          }

          return obj
        }

        let node = {
          children: [],
          operator: keys[0]
        };

        keys.forEach((key) => {
          const value = query[key];

          if (isArray(value)) {
            value.forEach((item) => {
              node.children.push(next(item));
            });
          }
        });

        return node
      };

      if (!isExpression(query)) {
        query = convertToExplicit(query);
      }

      return next(query)
    }

    // Practical scoring function
    function computeScore(
      results,
      { ignoreFieldNorm = Config.ignoreFieldNorm }
    ) {
      results.forEach((result) => {
        let totalScore = 1;

        result.matches.forEach(({ key, norm, score }) => {
          const weight = key ? key.weight : null;

          totalScore *= Math.pow(
            score === 0 && weight ? Number.EPSILON : score,
            (weight || 1) * (ignoreFieldNorm ? 1 : norm)
          );
        });

        result.score = totalScore;
      });
    }

    function transformMatches(result, data) {
      const matches = result.matches;
      data.matches = [];

      if (!isDefined(matches)) {
        return
      }

      matches.forEach((match) => {
        if (!isDefined(match.indices) || !match.indices.length) {
          return
        }

        const { indices, value } = match;

        let obj = {
          indices,
          value
        };

        if (match.key) {
          obj.key = match.key.src;
        }

        if (match.idx > -1) {
          obj.refIndex = match.idx;
        }

        data.matches.push(obj);
      });
    }

    function transformScore(result, data) {
      data.score = result.score;
    }

    function format(
      results,
      docs,
      {
        includeMatches = Config.includeMatches,
        includeScore = Config.includeScore
      } = {}
    ) {
      const transformers = [];

      if (includeMatches) transformers.push(transformMatches);
      if (includeScore) transformers.push(transformScore);

      return results.map((result) => {
        const { idx } = result;

        const data = {
          item: docs[idx],
          refIndex: idx
        };

        if (transformers.length) {
          transformers.forEach((transformer) => {
            transformer(result, data);
          });
        }

        return data
      })
    }

    class Fuse {
      constructor(docs, options = {}, index) {
        this.options = { ...Config, ...options };

        if (
          this.options.useExtendedSearch &&
          !true
        ) ;

        this._keyStore = new KeyStore(this.options.keys);

        this.setCollection(docs, index);
      }

      setCollection(docs, index) {
        this._docs = docs;

        if (index && !(index instanceof FuseIndex)) {
          throw new Error(INCORRECT_INDEX_TYPE)
        }

        this._myIndex =
          index ||
          createIndex(this.options.keys, this._docs, {
            getFn: this.options.getFn,
            fieldNormWeight: this.options.fieldNormWeight
          });
      }

      add(doc) {
        if (!isDefined(doc)) {
          return
        }

        this._docs.push(doc);
        this._myIndex.add(doc);
      }

      remove(predicate = (/* doc, idx */) => false) {
        const results = [];

        for (let i = 0, len = this._docs.length; i < len; i += 1) {
          const doc = this._docs[i];
          if (predicate(doc, i)) {
            this.removeAt(i);
            i -= 1;
            len -= 1;

            results.push(doc);
          }
        }

        return results
      }

      removeAt(idx) {
        this._docs.splice(idx, 1);
        this._myIndex.removeAt(idx);
      }

      getIndex() {
        return this._myIndex
      }

      search(query, { limit = -1 } = {}) {
        const {
          includeMatches,
          includeScore,
          shouldSort,
          sortFn,
          ignoreFieldNorm
        } = this.options;

        let results = isString(query)
          ? isString(this._docs[0])
            ? this._searchStringList(query)
            : this._searchObjectList(query)
          : this._searchLogical(query);

        computeScore(results, { ignoreFieldNorm });

        if (shouldSort) {
          results.sort(sortFn);
        }

        if (isNumber(limit) && limit > -1) {
          results = results.slice(0, limit);
        }

        return format(results, this._docs, {
          includeMatches,
          includeScore
        })
      }

      _searchStringList(query) {
        const searcher = createSearcher(query, this.options);
        const { records } = this._myIndex;
        const results = [];

        // Iterate over every string in the index
        records.forEach(({ v: text, i: idx, n: norm }) => {
          if (!isDefined(text)) {
            return
          }

          const { isMatch, score, indices } = searcher.searchIn(text);

          if (isMatch) {
            results.push({
              item: text,
              idx,
              matches: [{ score, value: text, norm, indices }]
            });
          }
        });

        return results
      }

      _searchLogical(query) {

        const expression = parse(query, this.options);

        const evaluate = (node, item, idx) => {
          if (!node.children) {
            const { keyId, searcher } = node;

            const matches = this._findMatches({
              key: this._keyStore.get(keyId),
              value: this._myIndex.getValueForItemAtKeyId(item, keyId),
              searcher
            });

            if (matches && matches.length) {
              return [
                {
                  idx,
                  item,
                  matches
                }
              ]
            }

            return []
          }

          const res = [];
          for (let i = 0, len = node.children.length; i < len; i += 1) {
            const child = node.children[i];
            const result = evaluate(child, item, idx);
            if (result.length) {
              res.push(...result);
            } else if (node.operator === LogicalOperator.AND) {
              return []
            }
          }
          return res
        };

        const records = this._myIndex.records;
        const resultMap = {};
        const results = [];

        records.forEach(({ $: item, i: idx }) => {
          if (isDefined(item)) {
            let expResults = evaluate(expression, item, idx);

            if (expResults.length) {
              // Dedupe when adding
              if (!resultMap[idx]) {
                resultMap[idx] = { idx, item, matches: [] };
                results.push(resultMap[idx]);
              }
              expResults.forEach(({ matches }) => {
                resultMap[idx].matches.push(...matches);
              });
            }
          }
        });

        return results
      }

      _searchObjectList(query) {
        const searcher = createSearcher(query, this.options);
        const { keys, records } = this._myIndex;
        const results = [];

        // List is Array<Object>
        records.forEach(({ $: item, i: idx }) => {
          if (!isDefined(item)) {
            return
          }

          let matches = [];

          // Iterate over every key (i.e, path), and fetch the value at that key
          keys.forEach((key, keyIndex) => {
            matches.push(
              ...this._findMatches({
                key,
                value: item[keyIndex],
                searcher
              })
            );
          });

          if (matches.length) {
            results.push({
              idx,
              item,
              matches
            });
          }
        });

        return results
      }
      _findMatches({ key, value, searcher }) {
        if (!isDefined(value)) {
          return []
        }

        let matches = [];

        if (isArray(value)) {
          value.forEach(({ v: text, i: idx, n: norm }) => {
            if (!isDefined(text)) {
              return
            }

            const { isMatch, score, indices } = searcher.searchIn(text);

            if (isMatch) {
              matches.push({
                score,
                key,
                value: text,
                idx,
                norm,
                indices
              });
            }
          });
        } else {
          const { v: text, n: norm } = value;

          const { isMatch, score, indices } = searcher.searchIn(text);

          if (isMatch) {
            matches.push({ score, key, value: text, norm, indices });
          }
        }

        return matches
      }
    }

    Fuse.version = '6.6.2';
    Fuse.createIndex = createIndex;
    Fuse.parseIndex = parseIndex;
    Fuse.config = Config;

    {
      Fuse.parseQuery = parse;
    }

    {
      register(ExtendedSearch);
    }




    /***/ }),

    /***/ 791:
    /***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

    // ESM COMPAT FLAG
    __webpack_require__.r(__webpack_exports__);

    // EXPORTS
    __webpack_require__.d(__webpack_exports__, {
      "__DO_NOT_USE__ActionTypes": function() { return /* binding */ ActionTypes; },
      "applyMiddleware": function() { return /* binding */ applyMiddleware; },
      "bindActionCreators": function() { return /* binding */ bindActionCreators; },
      "combineReducers": function() { return /* binding */ combineReducers; },
      "compose": function() { return /* binding */ compose; },
      "createStore": function() { return /* binding */ createStore; },
      "legacy_createStore": function() { return /* binding */ legacy_createStore; }
    });
    function _typeof(obj) {
      "@babel/helpers - typeof";

      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
        return typeof obj;
      } : function (obj) {
        return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      }, _typeof(obj);
    }

    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null) return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== undefined) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object") return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }


    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }

    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value: value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    }

    function ownKeys(object, enumerableOnly) {
      var keys = Object.keys(object);
      if (Object.getOwnPropertySymbols) {
        var symbols = Object.getOwnPropertySymbols(object);
        enumerableOnly && (symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable;
        })), keys.push.apply(keys, symbols);
      }
      return keys;
    }
    function _objectSpread2(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = null != arguments[i] ? arguments[i] : {};
        i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
      return target;
    }


    /**
     * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js
     *
     * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes
     * during build.
     * @param {number} code
     */
    function formatProdErrorMessage(code) {
      return "Minified Redux error #" + code + "; visit https://redux.js.org/Errors?code=" + code + " for the full message or " + 'use the non-minified dev environment for full errors. ';
    }

    // Inlined version of the `symbol-observable` polyfill
    var $$observable = (function () {
      return typeof Symbol === 'function' && Symbol.observable || '@@observable';
    })();

    /**
     * These are private action types reserved by Redux.
     * For any unknown actions, you must return the current state.
     * If the current state is undefined, you must return the initial state.
     * Do not reference these action types directly in your code.
     */
    var randomString = function randomString() {
      return Math.random().toString(36).substring(7).split('').join('.');
    };

    var ActionTypes = {
      INIT: "@@redux/INIT" + randomString(),
      REPLACE: "@@redux/REPLACE" + randomString(),
      PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {
        return "@@redux/PROBE_UNKNOWN_ACTION" + randomString();
      }
    };

    /**
     * @param {any} obj The object to inspect.
     * @returns {boolean} True if the argument appears to be a plain object.
     */
    function isPlainObject(obj) {
      if (typeof obj !== 'object' || obj === null) return false;
      var proto = obj;

      while (Object.getPrototypeOf(proto) !== null) {
        proto = Object.getPrototypeOf(proto);
      }

      return Object.getPrototypeOf(obj) === proto;
    }

    /**
     * @deprecated
     *
     * **We recommend using the `configureStore` method
     * of the `@reduxjs/toolkit` package**, which replaces `createStore`.
     *
     * Redux Toolkit is our recommended approach for writing Redux logic today,
     * including store setup, reducers, data fetching, and more.
     *
     * **For more details, please read this Redux docs page:**
     * **https://redux.js.org/introduction/why-rtk-is-redux-today**
     *
     * `configureStore` from Redux Toolkit is an improved version of `createStore` that
     * simplifies setup and helps avoid common bugs.
     *
     * You should not be using the `redux` core package by itself today, except for learning purposes.
     * The `createStore` method from the core `redux` package will not be removed, but we encourage
     * all users to migrate to using Redux Toolkit for all Redux code.
     *
     * If you want to use `createStore` without this visual deprecation warning, use
     * the `legacy_createStore` import instead:
     *
     * `import { legacy_createStore as createStore} from 'redux'`
     *
     */

    function createStore(reducer, preloadedState, enhancer) {
      var _ref2;

      if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {
        throw new Error(  formatProdErrorMessage(0) );
      }

      if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {
        enhancer = preloadedState;
        preloadedState = undefined;
      }

      if (typeof enhancer !== 'undefined') {
        if (typeof enhancer !== 'function') {
          throw new Error(  formatProdErrorMessage(1) );
        }

        return enhancer(createStore)(reducer, preloadedState);
      }

      if (typeof reducer !== 'function') {
        throw new Error(  formatProdErrorMessage(2) );
      }

      var currentReducer = reducer;
      var currentState = preloadedState;
      var currentListeners = [];
      var nextListeners = currentListeners;
      var isDispatching = false;
      /**
       * This makes a shallow copy of currentListeners so we can use
       * nextListeners as a temporary list while dispatching.
       *
       * This prevents any bugs around consumers calling
       * subscribe/unsubscribe in the middle of a dispatch.
       */

      function ensureCanMutateNextListeners() {
        if (nextListeners === currentListeners) {
          nextListeners = currentListeners.slice();
        }
      }
      /**
       * Reads the state tree managed by the store.
       *
       * @returns {any} The current state tree of your application.
       */


      function getState() {
        if (isDispatching) {
          throw new Error(  formatProdErrorMessage(3) );
        }

        return currentState;
      }
      /**
       * Adds a change listener. It will be called any time an action is dispatched,
       * and some part of the state tree may potentially have changed. You may then
       * call `getState()` to read the current state tree inside the callback.
       *
       * You may call `dispatch()` from a change listener, with the following
       * caveats:
       *
       * 1. The subscriptions are snapshotted just before every `dispatch()` call.
       * If you subscribe or unsubscribe while the listeners are being invoked, this
       * will not have any effect on the `dispatch()` that is currently in progress.
       * However, the next `dispatch()` call, whether nested or not, will use a more
       * recent snapshot of the subscription list.
       *
       * 2. The listener should not expect to see all state changes, as the state
       * might have been updated multiple times during a nested `dispatch()` before
       * the listener is called. It is, however, guaranteed that all subscribers
       * registered before the `dispatch()` started will be called with the latest
       * state by the time it exits.
       *
       * @param {Function} listener A callback to be invoked on every dispatch.
       * @returns {Function} A function to remove this change listener.
       */


      function subscribe(listener) {
        if (typeof listener !== 'function') {
          throw new Error(  formatProdErrorMessage(4) );
        }

        if (isDispatching) {
          throw new Error(  formatProdErrorMessage(5) );
        }

        var isSubscribed = true;
        ensureCanMutateNextListeners();
        nextListeners.push(listener);
        return function unsubscribe() {
          if (!isSubscribed) {
            return;
          }

          if (isDispatching) {
            throw new Error(  formatProdErrorMessage(6) );
          }

          isSubscribed = false;
          ensureCanMutateNextListeners();
          var index = nextListeners.indexOf(listener);
          nextListeners.splice(index, 1);
          currentListeners = null;
        };
      }
      /**
       * Dispatches an action. It is the only way to trigger a state change.
       *
       * The `reducer` function, used to create the store, will be called with the
       * current state tree and the given `action`. Its return value will
       * be considered the **next** state of the tree, and the change listeners
       * will be notified.
       *
       * The base implementation only supports plain object actions. If you want to
       * dispatch a Promise, an Observable, a thunk, or something else, you need to
       * wrap your store creating function into the corresponding middleware. For
       * example, see the documentation for the `redux-thunk` package. Even the
       * middleware will eventually dispatch plain object actions using this method.
       *
       * @param {Object} action A plain object representing “what changed”. It is
       * a good idea to keep actions serializable so you can record and replay user
       * sessions, or use the time travelling `redux-devtools`. An action must have
       * a `type` property which may not be `undefined`. It is a good idea to use
       * string constants for action types.
       *
       * @returns {Object} For convenience, the same action object you dispatched.
       *
       * Note that, if you use a custom middleware, it may wrap `dispatch()` to
       * return something else (for example, a Promise you can await).
       */


      function dispatch(action) {
        if (!isPlainObject(action)) {
          throw new Error(  formatProdErrorMessage(7) );
        }

        if (typeof action.type === 'undefined') {
          throw new Error(  formatProdErrorMessage(8) );
        }

        if (isDispatching) {
          throw new Error(  formatProdErrorMessage(9) );
        }

        try {
          isDispatching = true;
          currentState = currentReducer(currentState, action);
        } finally {
          isDispatching = false;
        }

        var listeners = currentListeners = nextListeners;

        for (var i = 0; i < listeners.length; i++) {
          var listener = listeners[i];
          listener();
        }

        return action;
      }
      /**
       * Replaces the reducer currently used by the store to calculate the state.
       *
       * You might need this if your app implements code splitting and you want to
       * load some of the reducers dynamically. You might also need this if you
       * implement a hot reloading mechanism for Redux.
       *
       * @param {Function} nextReducer The reducer for the store to use instead.
       * @returns {void}
       */


      function replaceReducer(nextReducer) {
        if (typeof nextReducer !== 'function') {
          throw new Error(  formatProdErrorMessage(10) );
        }

        currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.
        // Any reducers that existed in both the new and old rootReducer
        // will receive the previous state. This effectively populates
        // the new state tree with any relevant data from the old one.

        dispatch({
          type: ActionTypes.REPLACE
        });
      }
      /**
       * Interoperability point for observable/reactive libraries.
       * @returns {observable} A minimal observable of state changes.
       * For more information, see the observable proposal:
       * https://github.com/tc39/proposal-observable
       */


      function observable() {
        var _ref;

        var outerSubscribe = subscribe;
        return _ref = {
          /**
           * The minimal observable subscription method.
           * @param {Object} observer Any object that can be used as an observer.
           * The observer object should have a `next` method.
           * @returns {subscription} An object with an `unsubscribe` method that can
           * be used to unsubscribe the observable from the store, and prevent further
           * emission of values from the observable.
           */
          subscribe: function subscribe(observer) {
            if (typeof observer !== 'object' || observer === null) {
              throw new Error(  formatProdErrorMessage(11) );
            }

            function observeState() {
              if (observer.next) {
                observer.next(getState());
              }
            }

            observeState();
            var unsubscribe = outerSubscribe(observeState);
            return {
              unsubscribe: unsubscribe
            };
          }
        }, _ref[$$observable] = function () {
          return this;
        }, _ref;
      } // When a store is created, an "INIT" action is dispatched so that every
      // reducer returns their initial state. This effectively populates
      // the initial state tree.


      dispatch({
        type: ActionTypes.INIT
      });
      return _ref2 = {
        dispatch: dispatch,
        subscribe: subscribe,
        getState: getState,
        replaceReducer: replaceReducer
      }, _ref2[$$observable] = observable, _ref2;
    }
    /**
     * Creates a Redux store that holds the state tree.
     *
     * **We recommend using `configureStore` from the
     * `@reduxjs/toolkit` package**, which replaces `createStore`:
     * **https://redux.js.org/introduction/why-rtk-is-redux-today**
     *
     * The only way to change the data in the store is to call `dispatch()` on it.
     *
     * There should only be a single store in your app. To specify how different
     * parts of the state tree respond to actions, you may combine several reducers
     * into a single reducer function by using `combineReducers`.
     *
     * @param {Function} reducer A function that returns the next state tree, given
     * the current state tree and the action to handle.
     *
     * @param {any} [preloadedState] The initial state. You may optionally specify it
     * to hydrate the state from the server in universal apps, or to restore a
     * previously serialized user session.
     * If you use `combineReducers` to produce the root reducer function, this must be
     * an object with the same shape as `combineReducers` keys.
     *
     * @param {Function} [enhancer] The store enhancer. You may optionally specify it
     * to enhance the store with third-party capabilities such as middleware,
     * time travel, persistence, etc. The only store enhancer that ships with Redux
     * is `applyMiddleware()`.
     *
     * @returns {Store} A Redux store that lets you read the state, dispatch actions
     * and subscribe to changes.
     */

    var legacy_createStore = createStore;

    function assertReducerShape(reducers) {
      Object.keys(reducers).forEach(function (key) {
        var reducer = reducers[key];
        var initialState = reducer(undefined, {
          type: ActionTypes.INIT
        });

        if (typeof initialState === 'undefined') {
          throw new Error(  formatProdErrorMessage(12) );
        }

        if (typeof reducer(undefined, {
          type: ActionTypes.PROBE_UNKNOWN_ACTION()
        }) === 'undefined') {
          throw new Error(  formatProdErrorMessage(13) );
        }
      });
    }
    /**
     * Turns an object whose values are different reducer functions, into a single
     * reducer function. It will call every child reducer, and gather their results
     * into a single state object, whose keys correspond to the keys of the passed
     * reducer functions.
     *
     * @param {Object} reducers An object whose values correspond to different
     * reducer functions that need to be combined into one. One handy way to obtain
     * it is to use ES6 `import * as reducers` syntax. The reducers may never return
     * undefined for any action. Instead, they should return their initial state
     * if the state passed to them was undefined, and the current state for any
     * unrecognized action.
     *
     * @returns {Function} A reducer function that invokes every reducer inside the
     * passed object, and builds a state object with the same shape.
     */


    function combineReducers(reducers) {
      var reducerKeys = Object.keys(reducers);
      var finalReducers = {};

      for (var i = 0; i < reducerKeys.length; i++) {
        var key = reducerKeys[i];

        if (typeof reducers[key] === 'function') {
          finalReducers[key] = reducers[key];
        }
      }

      var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same

      var shapeAssertionError;

      try {
        assertReducerShape(finalReducers);
      } catch (e) {
        shapeAssertionError = e;
      }

      return function combination(state, action) {
        if (state === void 0) {
          state = {};
        }

        if (shapeAssertionError) {
          throw shapeAssertionError;
        }

        var hasChanged = false;
        var nextState = {};

        for (var _i = 0; _i < finalReducerKeys.length; _i++) {
          var _key = finalReducerKeys[_i];
          var reducer = finalReducers[_key];
          var previousStateForKey = state[_key];
          var nextStateForKey = reducer(previousStateForKey, action);

          if (typeof nextStateForKey === 'undefined') {
            var actionType = action && action.type;
            throw new Error(  formatProdErrorMessage(14) );
          }

          nextState[_key] = nextStateForKey;
          hasChanged = hasChanged || nextStateForKey !== previousStateForKey;
        }

        hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;
        return hasChanged ? nextState : state;
      };
    }

    function bindActionCreator(actionCreator, dispatch) {
      return function () {
        return dispatch(actionCreator.apply(this, arguments));
      };
    }
    /**
     * Turns an object whose values are action creators, into an object with the
     * same keys, but with every function wrapped into a `dispatch` call so they
     * may be invoked directly. This is just a convenience method, as you can call
     * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.
     *
     * For convenience, you can also pass an action creator as the first argument,
     * and get a dispatch wrapped function in return.
     *
     * @param {Function|Object} actionCreators An object whose values are action
     * creator functions. One handy way to obtain it is to use ES6 `import * as`
     * syntax. You may also pass a single function.
     *
     * @param {Function} dispatch The `dispatch` function available on your Redux
     * store.
     *
     * @returns {Function|Object} The object mimicking the original object, but with
     * every action creator wrapped into the `dispatch` call. If you passed a
     * function as `actionCreators`, the return value will also be a single
     * function.
     */


    function bindActionCreators(actionCreators, dispatch) {
      if (typeof actionCreators === 'function') {
        return bindActionCreator(actionCreators, dispatch);
      }

      if (typeof actionCreators !== 'object' || actionCreators === null) {
        throw new Error(  formatProdErrorMessage(16) );
      }

      var boundActionCreators = {};

      for (var key in actionCreators) {
        var actionCreator = actionCreators[key];

        if (typeof actionCreator === 'function') {
          boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);
        }
      }

      return boundActionCreators;
    }

    /**
     * Composes single-argument functions from right to left. The rightmost
     * function can take multiple arguments as it provides the signature for
     * the resulting composite function.
     *
     * @param {...Function} funcs The functions to compose.
     * @returns {Function} A function obtained by composing the argument functions
     * from right to left. For example, compose(f, g, h) is identical to doing
     * (...args) => f(g(h(...args))).
     */
    function compose() {
      for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
        funcs[_key] = arguments[_key];
      }

      if (funcs.length === 0) {
        return function (arg) {
          return arg;
        };
      }

      if (funcs.length === 1) {
        return funcs[0];
      }

      return funcs.reduce(function (a, b) {
        return function () {
          return a(b.apply(void 0, arguments));
        };
      });
    }

    /**
     * Creates a store enhancer that applies middleware to the dispatch method
     * of the Redux store. This is handy for a variety of tasks, such as expressing
     * asynchronous actions in a concise manner, or logging every action payload.
     *
     * See `redux-thunk` package as an example of the Redux middleware.
     *
     * Because middleware is potentially asynchronous, this should be the first
     * store enhancer in the composition chain.
     *
     * Note that each middleware will be given the `dispatch` and `getState` functions
     * as named arguments.
     *
     * @param {...Function} middlewares The middleware chain to be applied.
     * @returns {Function} A store enhancer applying the middleware.
     */

    function applyMiddleware() {
      for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {
        middlewares[_key] = arguments[_key];
      }

      return function (createStore) {
        return function () {
          var store = createStore.apply(void 0, arguments);

          var _dispatch = function dispatch() {
            throw new Error(  formatProdErrorMessage(15) );
          };

          var middlewareAPI = {
            getState: store.getState,
            dispatch: function dispatch() {
              return _dispatch.apply(void 0, arguments);
            }
          };
          var chain = middlewares.map(function (middleware) {
            return middleware(middlewareAPI);
          });
          _dispatch = compose.apply(void 0, chain)(store.dispatch);
          return _objectSpread2(_objectSpread2({}, store), {}, {
            dispatch: _dispatch
          });
        };
      };
    }




    /***/ })

    /******/ 	});
    /************************************************************************/
    /******/ 	// The module cache
    /******/ 	var __webpack_module_cache__ = {};
    /******/ 	
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
    /******/ 		// Check if module is in cache
    /******/ 		var cachedModule = __webpack_module_cache__[moduleId];
    /******/ 		if (cachedModule !== undefined) {
    /******/ 			return cachedModule.exports;
    /******/ 		}
    /******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = __webpack_module_cache__[moduleId] = {
    /******/ 			// no module.id needed
    /******/ 			// no module.loaded needed
    /******/ 			exports: {}
    /******/ 		};
    /******/ 	
    /******/ 		// Execute the module function
    /******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    /******/ 	
    /******/ 		// Return the exports of the module
    /******/ 		return module.exports;
    /******/ 	}
    /******/ 	
    /************************************************************************/
    /******/ 	/* webpack/runtime/compat get default export */
    /******/ 	!function() {
    /******/ 		// getDefaultExport function for compatibility with non-harmony modules
    /******/ 		__webpack_require__.n = function(module) {
    /******/ 			var getter = module && module.__esModule ?
    /******/ 				function() { return module['default']; } :
    /******/ 				function() { return module; };
    /******/ 			__webpack_require__.d(getter, { a: getter });
    /******/ 			return getter;
    /******/ 		};
    /******/ 	}();
    /******/ 	
    /******/ 	/* webpack/runtime/define property getters */
    /******/ 	!function() {
    /******/ 		// define getter functions for harmony exports
    /******/ 		__webpack_require__.d = function(exports, definition) {
    /******/ 			for(var key in definition) {
    /******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
    /******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
    /******/ 				}
    /******/ 			}
    /******/ 		};
    /******/ 	}();
    /******/ 	
    /******/ 	/* webpack/runtime/hasOwnProperty shorthand */
    /******/ 	!function() {
    /******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); };
    /******/ 	}();
    /******/ 	
    /******/ 	/* webpack/runtime/make namespace object */
    /******/ 	!function() {
    /******/ 		// define __esModule on exports
    /******/ 		__webpack_require__.r = function(exports) {
    /******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
    /******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
    /******/ 			}
    /******/ 			Object.defineProperty(exports, '__esModule', { value: true });
    /******/ 		};
    /******/ 	}();
    /******/ 	
    /************************************************************************/
    var __webpack_exports__ = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
    !function() {
    /* harmony import */ var _scripts_choices__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(373);
    /* harmony import */ var _scripts_choices__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_scripts_choices__WEBPACK_IMPORTED_MODULE_0__);
    /* harmony import */ var _scripts_interfaces__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(187);
    /* harmony import */ var _scripts_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(883);
    /* harmony import */ var _scripts_defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(789);
    /* harmony import */ var _scripts_templates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(686);







    /* harmony default export */ __webpack_exports__["default"] = ((_scripts_choices__WEBPACK_IMPORTED_MODULE_0___default()));

    }();
    __webpack_exports__ = __webpack_exports__["default"];
    /******/ 	return __webpack_exports__;
    /******/ })()
    ;
    });
    });

    var Choices = unwrapExports(choices);

    /* node_modules/OLSKTaxonomy/main.svelte generated by Svelte v3.54.0 */
    const file$6 = "node_modules/OLSKTaxonomy/main.svelte";

    function get_each_context$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[6] = list[i];
    	return child_ctx;
    }

    // (79:0) {#if mod._ValueSuggestions.length }
    function create_if_block$5(ctx) {
    	let p;
    	let each_value = /*mod*/ ctx[0]._ValueSuggestions;
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
    	}

    	const block = {
    		c: function create() {
    			p = element("p");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			add_location(p, file$6, 79, 0, 1706);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, p, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(p, null);
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*mod*/ 1) {
    				each_value = /*mod*/ ctx[0]._ValueSuggestions;
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$1(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block$1(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(p, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(p);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$5.name,
    		type: "if",
    		source: "(79:0) {#if mod._ValueSuggestions.length }",
    		ctx
    	});

    	return block;
    }

    // (81:0) {#each mod._ValueSuggestions as item }
    function create_each_block$1(ctx) {
    	let button;
    	let t_value = /*item*/ ctx[6] + "";
    	let t;
    	let mounted;
    	let dispose;

    	function click_handler() {
    		return /*click_handler*/ ctx[5](/*item*/ ctx[6]);
    	}

    	const block = {
    		c: function create() {
    			button = element("button");
    			t = text(t_value);
    			attr_dev(button, "class", "OLSKTaxonomySuggestion svelte-kfh5h3");
    			add_location(button, file$6, 81, 1, 1750);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, t);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", click_handler, false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    			if (dirty & /*mod*/ 1 && t_value !== (t_value = /*item*/ ctx[6] + "")) set_data_dev(t, t_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$1.name,
    		type: "each",
    		source: "(81:0) {#each mod._ValueSuggestions as item }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$6(ctx) {
    	let div;
    	let input;
    	let t;
    	let if_block = /*mod*/ ctx[0]._ValueSuggestions.length && create_if_block$5(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			input = element("input");
    			t = space();
    			if (if_block) if_block.c();
    			attr_dev(input, "type", "text");
    			add_location(input, file$6, 76, 0, 1613);
    			attr_dev(div, "class", "OLSKTaxonomy svelte-kfh5h3");
    			add_location(div, file$6, 74, 0, 1585);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, input);
    			/*input_binding*/ ctx[4](input);
    			append_dev(div, t);
    			if (if_block) if_block.m(div, null);
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*mod*/ ctx[0]._ValueSuggestions.length) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$5(ctx);
    					if_block.c();
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*input_binding*/ ctx[4](null);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$6.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$6($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKTaxonomyItems } = $$props;
    	let { OLSKTaxonomySuggestionItems = [] } = $$props;
    	let { OLSKTaxonomyDispatchUpdate } = $$props;

    	const mod = {
    		// VALUE
    		_ValueSuggestions: OLSKTaxonomySuggestionItems,
    		// CONTROL
    		ControlTagSuggestion(inputData) {
    			$$invalidate(
    				0,
    				mod._ValueSuggestions = mod._ValueSuggestions.filter(function (e) {
    					return e !== inputData;
    				}),
    				mod
    			);

    			mod._ChoicesInstance.setValue([inputData]);
    			mod.ReactItems();
    		},
    		// REACT
    		ReactItems() {
    			OLSKTaxonomyDispatchUpdate(mod._ChoicesInstance.getValue(true));
    		},
    		// SETUP
    		SetupEverything() {
    			$$invalidate(
    				0,
    				mod._ChoicesInstance = new Choices(mod._ChoicesElement,
    				{
    						items: OLSKTaxonomyItems,
    						placeholder: true,
    						placeholderValue: main_1('OLSKTaxonomyFieldText'),
    						addItemText(inputData) {
    							return main_1$2(main_1('OLSKTaxonomyHintTemplate'), inputData);
    						},
    						removeItems: true,
    						removeItemButton: true,
    						allowHTML: false
    					}),
    				mod
    			);

    			mod._ChoicesInstance.passedElement.element.addEventListener('change', mod.ReactItems, false);

    			mod._ChoicesInstance.passedElement.element.addEventListener(
    				'removeItem',
    				function (event) {
    					$$invalidate(
    						0,
    						mod._ValueSuggestions = OLSKTaxonomySuggestionItems.filter(function (e) {
    							return e === event.detail.value || mod._ValueSuggestions.includes(e);
    						}),
    						mod
    					);
    				},
    				false
    			);
    		},
    		// LIFECYCLE
    		LifecycleModuleDidLoad() {
    			mod.SetupEverything();
    		}
    	};

    	onMount(mod.LifecycleModuleDidLoad);

    	$$self.$$.on_mount.push(function () {
    		if (OLSKTaxonomyItems === undefined && !('OLSKTaxonomyItems' in $$props || $$self.$$.bound[$$self.$$.props['OLSKTaxonomyItems']])) {
    			console.warn("<Main> was created without expected prop 'OLSKTaxonomyItems'");
    		}

    		if (OLSKTaxonomyDispatchUpdate === undefined && !('OLSKTaxonomyDispatchUpdate' in $$props || $$self.$$.bound[$$self.$$.props['OLSKTaxonomyDispatchUpdate']])) {
    			console.warn("<Main> was created without expected prop 'OLSKTaxonomyDispatchUpdate'");
    		}
    	});

    	const writable_props = [
    		'OLSKTaxonomyItems',
    		'OLSKTaxonomySuggestionItems',
    		'OLSKTaxonomyDispatchUpdate'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function input_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._ChoicesElement = $$value;
    			$$invalidate(0, mod);
    		});
    	}

    	const click_handler = item => mod.ControlTagSuggestion(item);

    	$$self.$$set = $$props => {
    		if ('OLSKTaxonomyItems' in $$props) $$invalidate(1, OLSKTaxonomyItems = $$props.OLSKTaxonomyItems);
    		if ('OLSKTaxonomySuggestionItems' in $$props) $$invalidate(2, OLSKTaxonomySuggestionItems = $$props.OLSKTaxonomySuggestionItems);
    		if ('OLSKTaxonomyDispatchUpdate' in $$props) $$invalidate(3, OLSKTaxonomyDispatchUpdate = $$props.OLSKTaxonomyDispatchUpdate);
    	};

    	$$self.$capture_state = () => ({
    		OLSKTaxonomyItems,
    		OLSKTaxonomySuggestionItems,
    		OLSKTaxonomyDispatchUpdate,
    		OLSKLocalized: main_1,
    		OLSKFormatted: main_1$2,
    		Choices,
    		mod,
    		onMount
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKTaxonomyItems' in $$props) $$invalidate(1, OLSKTaxonomyItems = $$props.OLSKTaxonomyItems);
    		if ('OLSKTaxonomySuggestionItems' in $$props) $$invalidate(2, OLSKTaxonomySuggestionItems = $$props.OLSKTaxonomySuggestionItems);
    		if ('OLSKTaxonomyDispatchUpdate' in $$props) $$invalidate(3, OLSKTaxonomyDispatchUpdate = $$props.OLSKTaxonomyDispatchUpdate);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		mod,
    		OLSKTaxonomyItems,
    		OLSKTaxonomySuggestionItems,
    		OLSKTaxonomyDispatchUpdate,
    		input_binding,
    		click_handler
    	];
    }

    class Main$6 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$6, create_fragment$6, safe_not_equal, {
    			OLSKTaxonomyItems: 1,
    			OLSKTaxonomySuggestionItems: 2,
    			OLSKTaxonomyDispatchUpdate: 3
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$6.name
    		});
    	}

    	get OLSKTaxonomyItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKTaxonomyItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKTaxonomySuggestionItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKTaxonomySuggestionItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKTaxonomyDispatchUpdate() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKTaxonomyDispatchUpdate(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    function cubicOut(t) {
        const f = t - 1.0;
        return f * f * f + 1.0;
    }

    function fade(node, { delay = 0, duration = 400, easing = identity } = {}) {
        const o = +getComputedStyle(node).opacity;
        return {
            delay,
            duration,
            easing,
            css: t => `opacity: ${t * o}`
        };
    }

    /* os-app/sub-detail/main.svelte generated by Svelte v3.54.0 */
    const file$7 = "os-app/sub-detail/main.svelte";

    function get_each_context$2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[17] = list[i];
    	return child_ctx;
    }

    // (105:1) {#if JBXPlayDetailItem.$JBXDocumentIsInbox }
    function create_if_block_8(ctx) {
    	let div1;
    	let button;
    	let div0;
    	let raw_value = OLSKUIAssets._OLSKSharedClone + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			button = element("button");
    			div0 = element("div");
    			attr_dev(div0, "class", "JBXPlayDetailToolbarQueueButtonImage");
    			add_location(div0, file$7, 108, 3, 3117);
    			attr_dev(button, "class", "JBXPlayDetailToolbarQueueButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('JBXPlayDetailToolbarQueueButtonText'));
    			add_location(button, file$7, 107, 2, 2903);
    			attr_dev(div1, "class", "OLSKToolbarElementGroup");
    			add_location(div1, file$7, 106, 1, 2863);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, button);
    			append_dev(button, div0);
    			div0.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*JBXPlayDetailDispatchQueue*/ ctx[7])) /*JBXPlayDetailDispatchQueue*/ ctx[7].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_8.name,
    		type: "if",
    		source: "(105:1) {#if JBXPlayDetailItem.$JBXDocumentIsInbox }",
    		ctx
    	});

    	return block;
    }

    // (115:1) {#if !JBXPlayDetailItem.$JBXDocumentIsInbox }
    function create_if_block_5$1(ctx) {
    	let div1;
    	let t0;
    	let t1;
    	let button;
    	let div0;
    	let raw_value = OLSKUIAssets._OLSKSharedDiscard + "";
    	let button_title_value;
    	let mounted;
    	let dispose;
    	let if_block0 = !/*JBXPlayDetailItem*/ ctx[0].JBXDocumentArchiveDate && create_if_block_7$1(ctx);
    	let if_block1 = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentArchiveDate && create_if_block_6$1(ctx);

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			if (if_block0) if_block0.c();
    			t0 = space();
    			if (if_block1) if_block1.c();
    			t1 = space();
    			button = element("button");
    			div0 = element("div");
    			attr_dev(div0, "class", "JBXPlayDetailToolbarDiscardButtonImage");
    			add_location(div0, file$7, 130, 3, 4418);
    			attr_dev(button, "class", "JBXPlayDetailToolbarDiscardButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('JBXPlayDetailToolbarDiscardButtonText'));
    			add_location(button, file$7, 129, 2, 4131);
    			attr_dev(div1, "class", "OLSKToolbarElementGroup");
    			add_location(div1, file$7, 116, 1, 3290);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			if (if_block0) if_block0.m(div1, null);
    			append_dev(div1, t0);
    			if (if_block1) if_block1.m(div1, null);
    			append_dev(div1, t1);
    			append_dev(div1, button);
    			append_dev(button, div0);
    			div0.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler*/ ctx[12], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (!/*JBXPlayDetailItem*/ ctx[0].JBXDocumentArchiveDate) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);
    				} else {
    					if_block0 = create_if_block_7$1(ctx);
    					if_block0.c();
    					if_block0.m(div1, t0);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (/*JBXPlayDetailItem*/ ctx[0].JBXDocumentArchiveDate) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block_6$1(ctx);
    					if_block1.c();
    					if_block1.m(div1, t1);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_5$1.name,
    		type: "if",
    		source: "(115:1) {#if !JBXPlayDetailItem.$JBXDocumentIsInbox }",
    		ctx
    	});

    	return block;
    }

    // (118:2) {#if !JBXPlayDetailItem.JBXDocumentArchiveDate }
    function create_if_block_7$1(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedArchive + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "JBXPlayDetailToolbarArchiveButtonImage");
    			add_location(div, file$7, 119, 4, 3603);
    			attr_dev(button, "class", "JBXPlayDetailToolbarArchiveButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('JBXPlayDetailToolbarArchiveButtonText'));
    			add_location(button, file$7, 118, 3, 3382);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*JBXPlayDetailDispatchArchive*/ ctx[2])) /*JBXPlayDetailDispatchArchive*/ ctx[2].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_7$1.name,
    		type: "if",
    		source: "(118:2) {#if !JBXPlayDetailItem.JBXDocumentArchiveDate }",
    		ctx
    	});

    	return block;
    }

    // (124:2) {#if JBXPlayDetailItem.JBXDocumentArchiveDate }
    function create_if_block_6$1(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedUnarchive + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "JBXPlayDetailToolbarUnarchiveButtonImage");
    			add_location(div, file$7, 125, 4, 4004);
    			attr_dev(button, "class", "JBXPlayDetailToolbarUnarchiveButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('JBXPlayDetailToolbarUnarchiveButtonText'));
    			add_location(button, file$7, 124, 3, 3777);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*JBXPlayDetailDispatchUnarchive*/ ctx[3])) /*JBXPlayDetailDispatchUnarchive*/ ctx[3].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_6$1.name,
    		type: "if",
    		source: "(124:2) {#if JBXPlayDetailItem.JBXDocumentArchiveDate }",
    		ctx
    	});

    	return block;
    }

    // (140:0) {#if JBXPlayDetailItem.JBXDocumentURL }
    function create_if_block_2$3(ctx) {
    	let t0;
    	let div;
    	let p;
    	let input;
    	let input_placeholder_value;
    	let t1;
    	let a;
    	let t2_value = main_1('JBXPlayDetailMediaOpenButtonText') + "";
    	let t2;
    	let a_href_value;
    	let t3;
    	let t4;
    	let hr;
    	let mounted;
    	let dispose;
    	let if_block0 = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentEmbedURL && create_if_block_4$1(ctx);
    	let if_block1 = !/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox && create_if_block_3$1(ctx);

    	const block = {
    		c: function create() {
    			if (if_block0) if_block0.c();
    			t0 = space();
    			div = element("div");
    			p = element("p");
    			input = element("input");
    			t1 = space();
    			a = element("a");
    			t2 = text(t2_value);
    			t3 = space();
    			if (if_block1) if_block1.c();
    			t4 = space();
    			hr = element("hr");
    			attr_dev(input, "class", "JBXPlayDetailMediaURLField svelte-15jwvec");
    			attr_dev(input, "placeholder", input_placeholder_value = main_1('JBXPlayDetailMediaURLFieldText'));
    			attr_dev(input, "type", "text");
    			input.disabled = true;
    			add_location(input, file$7, 152, 2, 5190);
    			attr_dev(a, "class", "JBXPlayDetailMediaOpenButton OLSKDecorPress svelte-15jwvec");
    			attr_dev(a, "href", a_href_value = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL);
    			attr_dev(a, "target", "_blank");
    			add_location(a, file$7, 154, 2, 5371);
    			attr_dev(p, "class", "JBXPlayDetailLink svelte-15jwvec");
    			add_location(p, file$7, 151, 1, 5158);
    			attr_dev(hr, "role", "presentation");
    			add_location(hr, file$7, 161, 1, 5760);
    			attr_dev(div, "class", "JBXPlayDetailMedia OLSKDecor OLSKDecorBigForm");
    			add_location(div, file$7, 149, 0, 5096);
    		},
    		m: function mount(target, anchor) {
    			if (if_block0) if_block0.m(target, anchor);
    			insert_dev(target, t0, anchor);
    			insert_dev(target, div, anchor);
    			append_dev(div, p);
    			append_dev(p, input);
    			set_input_value(input, /*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL);
    			append_dev(p, t1);
    			append_dev(p, a);
    			append_dev(a, t2);
    			append_dev(p, t3);
    			if (if_block1) if_block1.m(p, null);
    			append_dev(div, t4);
    			append_dev(div, hr);

    			if (!mounted) {
    				dispose = listen_dev(input, "input", /*input_input_handler*/ ctx[13]);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (/*JBXPlayDetailItem*/ ctx[0].JBXDocumentEmbedURL) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);

    					if (dirty & /*JBXPlayDetailItem*/ 1) {
    						transition_in(if_block0, 1);
    					}
    				} else {
    					if_block0 = create_if_block_4$1(ctx);
    					if_block0.c();
    					transition_in(if_block0, 1);
    					if_block0.m(t0.parentNode, t0);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (dirty & /*JBXPlayDetailItem*/ 1 && input.value !== /*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL) {
    				set_input_value(input, /*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL);
    			}

    			if (dirty & /*JBXPlayDetailItem*/ 1 && a_href_value !== (a_href_value = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL)) {
    				attr_dev(a, "href", a_href_value);
    			}

    			if (!/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block_3$1(ctx);
    					if_block1.c();
    					if_block1.m(p, null);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}
    		},
    		i: function intro(local) {
    			transition_in(if_block0);
    		},
    		o: noop,
    		d: function destroy(detaching) {
    			if (if_block0) if_block0.d(detaching);
    			if (detaching) detach_dev(t0);
    			if (detaching) detach_dev(div);
    			if (if_block1) if_block1.d();
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$3.name,
    		type: "if",
    		source: "(140:0) {#if JBXPlayDetailItem.JBXDocumentURL }",
    		ctx
    	});

    	return block;
    }

    // (142:0) {#if JBXPlayDetailItem.JBXDocumentEmbedURL }
    function create_if_block_4$1(ctx) {
    	let previous_key = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentEmbedURL;
    	let key_block_anchor;
    	let key_block = create_key_block(ctx);

    	const block = {
    		c: function create() {
    			key_block.c();
    			key_block_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			key_block.m(target, anchor);
    			insert_dev(target, key_block_anchor, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*JBXPlayDetailItem*/ 1 && safe_not_equal(previous_key, previous_key = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentEmbedURL)) {
    				group_outros();
    				transition_out(key_block, 1, 1, noop);
    				check_outros();
    				key_block = create_key_block(ctx);
    				key_block.c();
    				transition_in(key_block, 1);
    				key_block.m(key_block_anchor.parentNode, key_block_anchor);
    			} else {
    				key_block.p(ctx, dirty);
    			}
    		},
    		i: function intro(local) {
    			transition_in(key_block);
    		},
    		o: function outro(local) {
    			transition_out(key_block);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(key_block_anchor);
    			key_block.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_4$1.name,
    		type: "if",
    		source: "(142:0) {#if JBXPlayDetailItem.JBXDocumentEmbedURL }",
    		ctx
    	});

    	return block;
    }

    // (143:1) {#key JBXPlayDetailItem.JBXDocumentEmbedURL}
    function create_key_block(ctx) {
    	let div;
    	let iframe;
    	let iframe_src_value;
    	let div_intro;

    	const block = {
    		c: function create() {
    			div = element("div");
    			iframe = element("iframe");
    			attr_dev(iframe, "class", "JBXPlayDetailMediaPlayer");
    			attr_dev(iframe, "width", "100%");
    			attr_dev(iframe, "height", "280");
    			if (!src_url_equal(iframe.src, iframe_src_value = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentEmbedURL)) attr_dev(iframe, "src", iframe_src_value);
    			attr_dev(iframe, "frameborder", "0");
    			attr_dev(iframe, "allow", "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture");
    			iframe.allowFullscreen = true;
    			add_location(iframe, file$7, 144, 3, 4820);
    			add_location(div, file$7, 143, 2, 4727);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, iframe);
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty & /*JBXPlayDetailItem*/ 1 && !src_url_equal(iframe.src, iframe_src_value = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentEmbedURL)) {
    				attr_dev(iframe, "src", iframe_src_value);
    			}
    		},
    		i: function intro(local) {
    			if (!div_intro) {
    				add_render_callback(() => {
    					div_intro = create_in_transition(div, fade, {
    						delay: main_1$1() ? 0 : 250,
    						duration: main_1$1() ? 0 : 300
    					});

    					div_intro.start();
    				});
    			}
    		},
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_key_block.name,
    		type: "key",
    		source: "(143:1) {#key JBXPlayDetailItem.JBXDocumentEmbedURL}",
    		ctx
    	});

    	return block;
    }

    // (157:2) {#if !JBXPlayDetailItem.$JBXDocumentIsInbox }
    function create_if_block_3$1(ctx) {
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			button.textContent = `${main_1('JBXPlayDetailMediaFetchButtonText')}`;
    			attr_dev(button, "class", "JBXPlayDetailMediaFetchButton svelte-15jwvec");
    			add_location(button, file$7, 157, 3, 5594);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*JBXPlayDetailDispatchFetch*/ ctx[4])) /*JBXPlayDetailDispatchFetch*/ ctx[4].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3$1.name,
    		type: "if",
    		source: "(157:2) {#if !JBXPlayDetailItem.$JBXDocumentIsInbox }",
    		ctx
    	});

    	return block;
    }

    // (177:0) {#if !JBXPlayDetailItem.$JBXDocumentIsInbox }
    function create_if_block_1$3(ctx) {
    	let hr;
    	let t;
    	let p;
    	let current;
    	let each_value = /*mod*/ ctx[10].__HOTFIX_ITEM_IDS;
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
    	}

    	const out = i => transition_out(each_blocks[i], 1, 1, () => {
    		each_blocks[i] = null;
    	});

    	const block = {
    		c: function create() {
    			hr = element("hr");
    			t = space();
    			p = element("p");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(hr, "role", "presentation");
    			add_location(hr, file$7, 177, 0, 6487);
    			add_location(p, file$7, 179, 0, 6515);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, hr, anchor);
    			insert_dev(target, t, anchor);
    			insert_dev(target, p, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(p, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*JBXPlayDetailItem, OLSKTaxonomySuggestionItems, mod*/ 1281) {
    				each_value = /*mod*/ ctx[10].__HOTFIX_ITEM_IDS;
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$2(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    						transition_in(each_blocks[i], 1);
    					} else {
    						each_blocks[i] = create_each_block$2(child_ctx);
    						each_blocks[i].c();
    						transition_in(each_blocks[i], 1);
    						each_blocks[i].m(p, null);
    					}
    				}

    				group_outros();

    				for (i = each_value.length; i < each_blocks.length; i += 1) {
    					out(i);
    				}

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			each_blocks = each_blocks.filter(Boolean);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(hr);
    			if (detaching) detach_dev(t);
    			if (detaching) detach_dev(p);
    			destroy_each(each_blocks, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$3.name,
    		type: "if",
    		source: "(177:0) {#if !JBXPlayDetailItem.$JBXDocumentIsInbox }",
    		ctx
    	});

    	return block;
    }

    // (181:1) {#each mod.__HOTFIX_ITEM_IDS as item }
    function create_each_block$2(ctx) {
    	let olsktaxonomy;
    	let current;

    	olsktaxonomy = new Main$6({
    			props: {
    				OLSKTaxonomyItems: /*JBXPlayDetailItem*/ ctx[0].JBXDocumentTags || [],
    				OLSKTaxonomySuggestionItems: /*OLSKTaxonomySuggestionItems*/ ctx[8],
    				OLSKTaxonomyDispatchUpdate: /*mod*/ ctx[10].OLSKTaxonomyDispatchUpdate
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(olsktaxonomy.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olsktaxonomy, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olsktaxonomy_changes = {};
    			if (dirty & /*JBXPlayDetailItem*/ 1) olsktaxonomy_changes.OLSKTaxonomyItems = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentTags || [];
    			if (dirty & /*OLSKTaxonomySuggestionItems*/ 256) olsktaxonomy_changes.OLSKTaxonomySuggestionItems = /*OLSKTaxonomySuggestionItems*/ ctx[8];
    			if (dirty & /*mod*/ 1024) olsktaxonomy_changes.OLSKTaxonomyDispatchUpdate = /*mod*/ ctx[10].OLSKTaxonomyDispatchUpdate;
    			olsktaxonomy.$set(olsktaxonomy_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olsktaxonomy.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olsktaxonomy.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olsktaxonomy, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$2.name,
    		type: "each",
    		source: "(181:1) {#each mod.__HOTFIX_ITEM_IDS as item }",
    		ctx
    	});

    	return block;
    }

    // (197:0) {#if _DebugLauncher && OLSK_SPEC_UI() }
    function create_if_block$6(ctx) {
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			attr_dev(button, "class", "OLSKAppToolbarLauncherButton");
    			add_location(button, file$7, 197, 1, 6861);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler_1*/ ctx[16], false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$6.name,
    		type: "if",
    		source: "(197:0) {#if _DebugLauncher && OLSK_SPEC_UI() }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$7(ctx) {
    	let div4;
    	let header;
    	let div1;
    	let button;
    	let div0;
    	let raw_value = OLSKUIAssets._OLSKSharedBack + "";
    	let button_title_value;
    	let t0;
    	let t1;
    	let t2;
    	let div3;
    	let t3;
    	let div2;
    	let p0;
    	let input;
    	let input_placeholder_value;
    	let input_disabled_value;
    	let t4;
    	let p1;
    	let textarea;
    	let textarea_placeholder_value;
    	let textarea_disabled_value;
    	let t5;
    	let t6;
    	let show_if = /*_DebugLauncher*/ ctx[9] && main_1$1();
    	let if_block4_anchor;
    	let current;
    	let mounted;
    	let dispose;
    	let if_block0 = /*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox && create_if_block_8(ctx);
    	let if_block1 = !/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox && create_if_block_5$1(ctx);
    	let if_block2 = /*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL && create_if_block_2$3(ctx);
    	let if_block3 = !/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox && create_if_block_1$3(ctx);
    	let if_block4 = show_if && create_if_block$6(ctx);

    	const block = {
    		c: function create() {
    			div4 = element("div");
    			header = element("header");
    			div1 = element("div");
    			button = element("button");
    			div0 = element("div");
    			t0 = space();
    			if (if_block0) if_block0.c();
    			t1 = space();
    			if (if_block1) if_block1.c();
    			t2 = space();
    			div3 = element("div");
    			if (if_block2) if_block2.c();
    			t3 = space();
    			div2 = element("div");
    			p0 = element("p");
    			input = element("input");
    			t4 = space();
    			p1 = element("p");
    			textarea = element("textarea");
    			t5 = space();
    			if (if_block3) if_block3.c();
    			t6 = space();
    			if (if_block4) if_block4.c();
    			if_block4_anchor = empty();
    			attr_dev(div0, "class", "JBXPlayDetailToolbarBackButtonImage");
    			add_location(div0, file$7, 100, 3, 2701);
    			attr_dev(button, "class", "JBXPlayDetailToolbarBackButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton OLSKVisibilityMobile OLSKVisibilityDesktopScreenreader");
    			attr_dev(button, "title", button_title_value = main_1('JBXPlayDetailToolbarBackButtonText'));
    			add_location(button, file$7, 99, 2, 2435);
    			attr_dev(div1, "class", "OLSKToolbarElementGroup");
    			add_location(div1, file$7, 98, 1, 2395);
    			attr_dev(header, "class", "JBXPlayDetailToolbar OLSKToolbar OLSKToolbarJustify OLSKMobileViewHeader OLSKCommonEdgeBottom ROCOStandardViewHead");
    			add_location(header, file$7, 97, 0, 2262);
    			attr_dev(input, "class", "JBXPlayDetailFormNameField");
    			attr_dev(input, "placeholder", input_placeholder_value = main_1('JBXPlayDetailFormNameFieldText'));
    			attr_dev(input, "type", "text");

    			input.disabled = input_disabled_value = /*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox
    			? true
    			: null;

    			add_location(input, file$7, 169, 1, 5867);
    			add_location(p0, file$7, 168, 0, 5862);
    			attr_dev(textarea, "class", "JBXPlayDetailFormNotesField");
    			attr_dev(textarea, "placeholder", textarea_placeholder_value = main_1('JBXPlayDetailFormNotesFieldText'));

    			textarea.disabled = textarea_disabled_value = /*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox
    			? true
    			: null;

    			add_location(textarea, file$7, 173, 1, 6154);
    			add_location(p1, file$7, 172, 0, 6149);
    			attr_dev(div2, "class", "JBXPlayDetailForm OLSKDecor OLSKDecorBigForm");
    			add_location(div2, file$7, 166, 0, 5802);
    			attr_dev(div3, "class", "ROCOStandardViewBody");
    			add_location(div3, file$7, 137, 0, 4557);
    			attr_dev(div4, "class", "JBXPlayDetail ROCOStandardView");
    			add_location(div4, file$7, 95, 0, 2216);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div4, anchor);
    			append_dev(div4, header);
    			append_dev(header, div1);
    			append_dev(div1, button);
    			append_dev(button, div0);
    			div0.innerHTML = raw_value;
    			append_dev(header, t0);
    			if (if_block0) if_block0.m(header, null);
    			append_dev(header, t1);
    			if (if_block1) if_block1.m(header, null);
    			append_dev(div4, t2);
    			append_dev(div4, div3);
    			if (if_block2) if_block2.m(div3, null);
    			append_dev(div3, t3);
    			append_dev(div3, div2);
    			append_dev(div2, p0);
    			append_dev(p0, input);
    			set_input_value(input, /*JBXPlayDetailItem*/ ctx[0].JBXDocumentName);
    			append_dev(div2, t4);
    			append_dev(div2, p1);
    			append_dev(p1, textarea);
    			set_input_value(textarea, /*JBXPlayDetailItem*/ ctx[0].JBXDocumentNotes);
    			append_dev(div2, t5);
    			if (if_block3) if_block3.m(div2, null);
    			insert_dev(target, t6, anchor);
    			if (if_block4) if_block4.m(target, anchor);
    			insert_dev(target, if_block4_anchor, anchor);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					listen_dev(
    						button,
    						"click",
    						function () {
    							if (is_function(/*JBXPlayDetailDispatchBack*/ ctx[1])) /*JBXPlayDetailDispatchBack*/ ctx[1].apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					),
    					listen_dev(input, "input", /*input_input_handler_1*/ ctx[14]),
    					listen_dev(
    						input,
    						"input",
    						function () {
    							if (is_function(/*JBXPlayDetailDispatchUpdate*/ ctx[5])) /*JBXPlayDetailDispatchUpdate*/ ctx[5].apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					),
    					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[15]),
    					listen_dev(
    						textarea,
    						"input",
    						function () {
    							if (is_function(/*JBXPlayDetailDispatchUpdate*/ ctx[5])) /*JBXPlayDetailDispatchUpdate*/ ctx[5].apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, [dirty]) {
    			ctx = new_ctx;

    			if (/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);
    				} else {
    					if_block0 = create_if_block_8(ctx);
    					if_block0.c();
    					if_block0.m(header, t1);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (!/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block_5$1(ctx);
    					if_block1.c();
    					if_block1.m(header, null);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}

    			if (/*JBXPlayDetailItem*/ ctx[0].JBXDocumentURL) {
    				if (if_block2) {
    					if_block2.p(ctx, dirty);

    					if (dirty & /*JBXPlayDetailItem*/ 1) {
    						transition_in(if_block2, 1);
    					}
    				} else {
    					if_block2 = create_if_block_2$3(ctx);
    					if_block2.c();
    					transition_in(if_block2, 1);
    					if_block2.m(div3, t3);
    				}
    			} else if (if_block2) {
    				if_block2.d(1);
    				if_block2 = null;
    			}

    			if (!current || dirty & /*JBXPlayDetailItem*/ 1 && input_disabled_value !== (input_disabled_value = /*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox
    			? true
    			: null)) {
    				prop_dev(input, "disabled", input_disabled_value);
    			}

    			if (dirty & /*JBXPlayDetailItem*/ 1 && input.value !== /*JBXPlayDetailItem*/ ctx[0].JBXDocumentName) {
    				set_input_value(input, /*JBXPlayDetailItem*/ ctx[0].JBXDocumentName);
    			}

    			if (!current || dirty & /*JBXPlayDetailItem*/ 1 && textarea_disabled_value !== (textarea_disabled_value = /*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox
    			? true
    			: null)) {
    				prop_dev(textarea, "disabled", textarea_disabled_value);
    			}

    			if (dirty & /*JBXPlayDetailItem*/ 1) {
    				set_input_value(textarea, /*JBXPlayDetailItem*/ ctx[0].JBXDocumentNotes);
    			}

    			if (!/*JBXPlayDetailItem*/ ctx[0].$JBXDocumentIsInbox) {
    				if (if_block3) {
    					if_block3.p(ctx, dirty);

    					if (dirty & /*JBXPlayDetailItem*/ 1) {
    						transition_in(if_block3, 1);
    					}
    				} else {
    					if_block3 = create_if_block_1$3(ctx);
    					if_block3.c();
    					transition_in(if_block3, 1);
    					if_block3.m(div2, null);
    				}
    			} else if (if_block3) {
    				group_outros();

    				transition_out(if_block3, 1, 1, () => {
    					if_block3 = null;
    				});

    				check_outros();
    			}

    			if (dirty & /*_DebugLauncher*/ 512) show_if = /*_DebugLauncher*/ ctx[9] && main_1$1();

    			if (show_if) {
    				if (if_block4) {
    					if_block4.p(ctx, dirty);
    				} else {
    					if_block4 = create_if_block$6(ctx);
    					if_block4.c();
    					if_block4.m(if_block4_anchor.parentNode, if_block4_anchor);
    				}
    			} else if (if_block4) {
    				if_block4.d(1);
    				if_block4 = null;
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block2);
    			transition_in(if_block3);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block3);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div4);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			if (if_block2) if_block2.d();
    			if (if_block3) if_block3.d();
    			if (detaching) detach_dev(t6);
    			if (if_block4) if_block4.d(detaching);
    			if (detaching) detach_dev(if_block4_anchor);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$7.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$7($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { JBXPlayDetailItem } = $$props;
    	let { JBXPlayDetailDispatchBack } = $$props;
    	let { JBXPlayDetailDispatchArchive } = $$props;
    	let { JBXPlayDetailDispatchUnarchive } = $$props;
    	let { JBXPlayDetailDispatchFetch } = $$props;
    	let { JBXPlayDetailDispatchUpdate } = $$props;
    	let { JBXPlayDetailDispatchDiscard } = $$props;
    	let { JBXPlayDetailDispatchQueue } = $$props;
    	let { OLSKTaxonomySuggestionItems = [] } = $$props;
    	let { _DebugLauncher = false } = $$props;

    	const modPublic = {
    		JBXPlayDetailRecipes() {
    			return mod.DataPlayDetailRecipes();
    		}
    	};

    	const mod = {
    		__HOTFIX_ITEM_IDS: [],
    		// DATA
    		DataPlayDetailRecipes() {
    			const outputData = [];

    			if (!JBXPlayDetailItem.$JBXDocumentIsInbox && !JBXPlayDetailItem.JBXDocumentArchiveDate) {
    				outputData.push({
    					LCHRecipeSignature: 'JBXPlayDetailLauncherItemArchive',
    					LCHRecipeName: main_1('JBXPlayDetailToolbarArchiveButtonText'),
    					LCHRecipeCallback: function JBXPlayDetailLauncherItemArchive() {
    						JBXPlayDetailDispatchArchive();
    					}
    				});
    			}

    			if (!JBXPlayDetailItem.$JBXDocumentIsInbox && JBXPlayDetailItem.JBXDocumentArchiveDate) {
    				outputData.push({
    					LCHRecipeSignature: 'JBXPlayDetailLauncherItemUnarchive',
    					LCHRecipeName: main_1('JBXPlayDetailToolbarUnarchiveButtonText'),
    					LCHRecipeCallback: function JBXPlayDetailLauncherItemUnarchive() {
    						JBXPlayDetailDispatchUnarchive();
    					}
    				});
    			}

    			if (main_1$1()) {
    				outputData.push({
    					LCHRecipeName: 'JBXPlayDetailLauncherFakeItemProxy',
    					LCHRecipeCallback: function JBXPlayDetailLauncherFakeItemProxy() {
    						
    					}
    				});
    			}

    			return outputData;
    		},
    		// MESSAGE
    		OLSKTaxonomyDispatchUpdate(inputData) {
    			$$invalidate(0, JBXPlayDetailItem.JBXDocumentTags = inputData, JBXPlayDetailItem);
    			JBXPlayDetailDispatchUpdate();
    		},
    		// REACT
    		ReactItem(inputData) {
    			if (mod.__HOTFIX_ITEM_IDS.includes(inputData)) {
    				return;
    			}

    			$$invalidate(10, mod.__HOTFIX_ITEM_IDS = [], mod);

    			setTimeout(function () {
    				$$invalidate(10, mod.__HOTFIX_ITEM_IDS = [inputData], mod);
    			});
    		}
    	};

    	$$self.$$.on_mount.push(function () {
    		if (JBXPlayDetailItem === undefined && !('JBXPlayDetailItem' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailItem']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailItem'");
    		}

    		if (JBXPlayDetailDispatchBack === undefined && !('JBXPlayDetailDispatchBack' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchBack']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchBack'");
    		}

    		if (JBXPlayDetailDispatchArchive === undefined && !('JBXPlayDetailDispatchArchive' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchArchive']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchArchive'");
    		}

    		if (JBXPlayDetailDispatchUnarchive === undefined && !('JBXPlayDetailDispatchUnarchive' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchUnarchive']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchUnarchive'");
    		}

    		if (JBXPlayDetailDispatchFetch === undefined && !('JBXPlayDetailDispatchFetch' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchFetch']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchFetch'");
    		}

    		if (JBXPlayDetailDispatchUpdate === undefined && !('JBXPlayDetailDispatchUpdate' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchUpdate']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchUpdate'");
    		}

    		if (JBXPlayDetailDispatchDiscard === undefined && !('JBXPlayDetailDispatchDiscard' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchDiscard']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchDiscard'");
    		}

    		if (JBXPlayDetailDispatchQueue === undefined && !('JBXPlayDetailDispatchQueue' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayDetailDispatchQueue']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayDetailDispatchQueue'");
    		}
    	});

    	const writable_props = [
    		'JBXPlayDetailItem',
    		'JBXPlayDetailDispatchBack',
    		'JBXPlayDetailDispatchArchive',
    		'JBXPlayDetailDispatchUnarchive',
    		'JBXPlayDetailDispatchFetch',
    		'JBXPlayDetailDispatchUpdate',
    		'JBXPlayDetailDispatchDiscard',
    		'JBXPlayDetailDispatchQueue',
    		'OLSKTaxonomySuggestionItems',
    		'_DebugLauncher'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	const click_handler = () => window.confirm(main_1('OLSKWordingConfirmText')) && JBXPlayDetailDispatchDiscard();

    	function input_input_handler() {
    		JBXPlayDetailItem.JBXDocumentURL = this.value;
    		$$invalidate(0, JBXPlayDetailItem);
    	}

    	function input_input_handler_1() {
    		JBXPlayDetailItem.JBXDocumentName = this.value;
    		$$invalidate(0, JBXPlayDetailItem);
    	}

    	function textarea_input_handler() {
    		JBXPlayDetailItem.JBXDocumentNotes = this.value;
    		$$invalidate(0, JBXPlayDetailItem);
    	}

    	const click_handler_1 = () => window.Launchlet.LCHSingletonCreate({
    		LCHOptionRecipes: mod.DataPlayDetailRecipes()
    	});

    	$$self.$$set = $$props => {
    		if ('JBXPlayDetailItem' in $$props) $$invalidate(0, JBXPlayDetailItem = $$props.JBXPlayDetailItem);
    		if ('JBXPlayDetailDispatchBack' in $$props) $$invalidate(1, JBXPlayDetailDispatchBack = $$props.JBXPlayDetailDispatchBack);
    		if ('JBXPlayDetailDispatchArchive' in $$props) $$invalidate(2, JBXPlayDetailDispatchArchive = $$props.JBXPlayDetailDispatchArchive);
    		if ('JBXPlayDetailDispatchUnarchive' in $$props) $$invalidate(3, JBXPlayDetailDispatchUnarchive = $$props.JBXPlayDetailDispatchUnarchive);
    		if ('JBXPlayDetailDispatchFetch' in $$props) $$invalidate(4, JBXPlayDetailDispatchFetch = $$props.JBXPlayDetailDispatchFetch);
    		if ('JBXPlayDetailDispatchUpdate' in $$props) $$invalidate(5, JBXPlayDetailDispatchUpdate = $$props.JBXPlayDetailDispatchUpdate);
    		if ('JBXPlayDetailDispatchDiscard' in $$props) $$invalidate(6, JBXPlayDetailDispatchDiscard = $$props.JBXPlayDetailDispatchDiscard);
    		if ('JBXPlayDetailDispatchQueue' in $$props) $$invalidate(7, JBXPlayDetailDispatchQueue = $$props.JBXPlayDetailDispatchQueue);
    		if ('OLSKTaxonomySuggestionItems' in $$props) $$invalidate(8, OLSKTaxonomySuggestionItems = $$props.OLSKTaxonomySuggestionItems);
    		if ('_DebugLauncher' in $$props) $$invalidate(9, _DebugLauncher = $$props._DebugLauncher);
    	};

    	$$self.$capture_state = () => ({
    		JBXPlayDetailItem,
    		JBXPlayDetailDispatchBack,
    		JBXPlayDetailDispatchArchive,
    		JBXPlayDetailDispatchUnarchive,
    		JBXPlayDetailDispatchFetch,
    		JBXPlayDetailDispatchUpdate,
    		JBXPlayDetailDispatchDiscard,
    		JBXPlayDetailDispatchQueue,
    		OLSKTaxonomySuggestionItems,
    		_DebugLauncher,
    		modPublic,
    		OLSKLocalized: main_1,
    		OLSK_SPEC_UI: main_1$1,
    		mod,
    		OLSKUIAssets,
    		OLSKTaxonomy: Main$6,
    		fade
    	});

    	$$self.$inject_state = $$props => {
    		if ('JBXPlayDetailItem' in $$props) $$invalidate(0, JBXPlayDetailItem = $$props.JBXPlayDetailItem);
    		if ('JBXPlayDetailDispatchBack' in $$props) $$invalidate(1, JBXPlayDetailDispatchBack = $$props.JBXPlayDetailDispatchBack);
    		if ('JBXPlayDetailDispatchArchive' in $$props) $$invalidate(2, JBXPlayDetailDispatchArchive = $$props.JBXPlayDetailDispatchArchive);
    		if ('JBXPlayDetailDispatchUnarchive' in $$props) $$invalidate(3, JBXPlayDetailDispatchUnarchive = $$props.JBXPlayDetailDispatchUnarchive);
    		if ('JBXPlayDetailDispatchFetch' in $$props) $$invalidate(4, JBXPlayDetailDispatchFetch = $$props.JBXPlayDetailDispatchFetch);
    		if ('JBXPlayDetailDispatchUpdate' in $$props) $$invalidate(5, JBXPlayDetailDispatchUpdate = $$props.JBXPlayDetailDispatchUpdate);
    		if ('JBXPlayDetailDispatchDiscard' in $$props) $$invalidate(6, JBXPlayDetailDispatchDiscard = $$props.JBXPlayDetailDispatchDiscard);
    		if ('JBXPlayDetailDispatchQueue' in $$props) $$invalidate(7, JBXPlayDetailDispatchQueue = $$props.JBXPlayDetailDispatchQueue);
    		if ('OLSKTaxonomySuggestionItems' in $$props) $$invalidate(8, OLSKTaxonomySuggestionItems = $$props.OLSKTaxonomySuggestionItems);
    		if ('_DebugLauncher' in $$props) $$invalidate(9, _DebugLauncher = $$props._DebugLauncher);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*mod, JBXPlayDetailItem*/ 1025) {
    			$: {
    				mod.ReactItem(JBXPlayDetailItem.JBXDocumentID);
    			}
    		}
    	};

    	return [
    		JBXPlayDetailItem,
    		JBXPlayDetailDispatchBack,
    		JBXPlayDetailDispatchArchive,
    		JBXPlayDetailDispatchUnarchive,
    		JBXPlayDetailDispatchFetch,
    		JBXPlayDetailDispatchUpdate,
    		JBXPlayDetailDispatchDiscard,
    		JBXPlayDetailDispatchQueue,
    		OLSKTaxonomySuggestionItems,
    		_DebugLauncher,
    		mod,
    		modPublic,
    		click_handler,
    		input_input_handler,
    		input_input_handler_1,
    		textarea_input_handler,
    		click_handler_1
    	];
    }

    class Main$7 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$7, create_fragment$7, safe_not_equal, {
    			JBXPlayDetailItem: 0,
    			JBXPlayDetailDispatchBack: 1,
    			JBXPlayDetailDispatchArchive: 2,
    			JBXPlayDetailDispatchUnarchive: 3,
    			JBXPlayDetailDispatchFetch: 4,
    			JBXPlayDetailDispatchUpdate: 5,
    			JBXPlayDetailDispatchDiscard: 6,
    			JBXPlayDetailDispatchQueue: 7,
    			OLSKTaxonomySuggestionItems: 8,
    			_DebugLauncher: 9,
    			modPublic: 11
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$7.name
    		});
    	}

    	get JBXPlayDetailItem() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailItem(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchBack() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchBack(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchArchive() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchArchive(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchUnarchive() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchUnarchive(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchFetch() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchFetch(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchUpdate() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchUpdate(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchDiscard() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchDiscard(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get JBXPlayDetailDispatchQueue() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayDetailDispatchQueue(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKTaxonomySuggestionItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKTaxonomySuggestionItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get _DebugLauncher() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set _DebugLauncher(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get modPublic() {
    		return this.$$.ctx[11];
    	}

    	set modPublic(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var clipboard = createCommonjsModule(function (module, exports) {
    /*!
     * clipboard.js v2.0.11
     * https://clipboardjs.com/
     *
     * Licensed MIT © Zeno Rocha
     */
    (function webpackUniversalModuleDefinition(root, factory) {
    	module.exports = factory();
    })(commonjsGlobal, function() {
    return /******/ (function() { // webpackBootstrap
    /******/ 	var __webpack_modules__ = ({

    /***/ 686:
    /***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

    // EXPORTS
    __webpack_require__.d(__webpack_exports__, {
      "default": function() { return /* binding */ clipboard; }
    });

    // EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js
    var tiny_emitter = __webpack_require__(279);
    var tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);
    // EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js
    var listen = __webpack_require__(370);
    var listen_default = /*#__PURE__*/__webpack_require__.n(listen);
    // EXTERNAL MODULE: ./node_modules/select/src/select.js
    var src_select = __webpack_require__(817);
    var select_default = /*#__PURE__*/__webpack_require__.n(src_select);
    /**
     * Executes a given operation type.
     * @param {String} type
     * @return {Boolean}
     */
    function command(type) {
      try {
        return document.execCommand(type);
      } catch (err) {
        return false;
      }
    }


    /**
     * Cut action wrapper.
     * @param {String|HTMLElement} target
     * @return {String}
     */

    var ClipboardActionCut = function ClipboardActionCut(target) {
      var selectedText = select_default()(target);
      command('cut');
      return selectedText;
    };

    /* harmony default export */ var actions_cut = (ClipboardActionCut);
    /**
     * Creates a fake textarea element with a value.
     * @param {String} value
     * @return {HTMLElement}
     */
    function createFakeElement(value) {
      var isRTL = document.documentElement.getAttribute('dir') === 'rtl';
      var fakeElement = document.createElement('textarea'); // Prevent zooming on iOS

      fakeElement.style.fontSize = '12pt'; // Reset box model

      fakeElement.style.border = '0';
      fakeElement.style.padding = '0';
      fakeElement.style.margin = '0'; // Move element out of screen horizontally

      fakeElement.style.position = 'absolute';
      fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically

      var yPosition = window.pageYOffset || document.documentElement.scrollTop;
      fakeElement.style.top = "".concat(yPosition, "px");
      fakeElement.setAttribute('readonly', '');
      fakeElement.value = value;
      return fakeElement;
    }



    /**
     * Create fake copy action wrapper using a fake element.
     * @param {String} target
     * @param {Object} options
     * @return {String}
     */

    var fakeCopyAction = function fakeCopyAction(value, options) {
      var fakeElement = createFakeElement(value);
      options.container.appendChild(fakeElement);
      var selectedText = select_default()(fakeElement);
      command('copy');
      fakeElement.remove();
      return selectedText;
    };
    /**
     * Copy action wrapper.
     * @param {String|HTMLElement} target
     * @param {Object} options
     * @return {String}
     */


    var ClipboardActionCopy = function ClipboardActionCopy(target) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
        container: document.body
      };
      var selectedText = '';

      if (typeof target === 'string') {
        selectedText = fakeCopyAction(target, options);
      } else if (target instanceof HTMLInputElement && !['text', 'search', 'url', 'tel', 'password'].includes(target === null || target === void 0 ? void 0 : target.type)) {
        // If input type doesn't support `setSelectionRange`. Simulate it. https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange
        selectedText = fakeCopyAction(target.value, options);
      } else {
        selectedText = select_default()(target);
        command('copy');
      }

      return selectedText;
    };

    /* harmony default export */ var actions_copy = (ClipboardActionCopy);
    function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }



    /**
     * Inner function which performs selection from either `text` or `target`
     * properties and then executes copy or cut operations.
     * @param {Object} options
     */

    var ClipboardActionDefault = function ClipboardActionDefault() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      // Defines base properties passed from constructor.
      var _options$action = options.action,
          action = _options$action === void 0 ? 'copy' : _options$action,
          container = options.container,
          target = options.target,
          text = options.text; // Sets the `action` to be performed which can be either 'copy' or 'cut'.

      if (action !== 'copy' && action !== 'cut') {
        throw new Error('Invalid "action" value, use either "copy" or "cut"');
      } // Sets the `target` property using an element that will be have its content copied.


      if (target !== undefined) {
        if (target && _typeof(target) === 'object' && target.nodeType === 1) {
          if (action === 'copy' && target.hasAttribute('disabled')) {
            throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');
          }

          if (action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {
            throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');
          }
        } else {
          throw new Error('Invalid "target" value, use a valid Element');
        }
      } // Define selection strategy based on `text` property.


      if (text) {
        return actions_copy(text, {
          container: container
        });
      } // Defines which selection strategy based on `target` property.


      if (target) {
        return action === 'cut' ? actions_cut(target) : actions_copy(target, {
          container: container
        });
      }
    };

    /* harmony default export */ var actions_default = (ClipboardActionDefault);
    function clipboard_typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return clipboard_typeof(obj); }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

    function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

    function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

    function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

    function _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

    function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

    function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

    function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }






    /**
     * Helper function to retrieve attribute value.
     * @param {String} suffix
     * @param {Element} element
     */

    function getAttributeValue(suffix, element) {
      var attribute = "data-clipboard-".concat(suffix);

      if (!element.hasAttribute(attribute)) {
        return;
      }

      return element.getAttribute(attribute);
    }
    /**
     * Base class which takes one or more elements, adds event listeners to them,
     * and instantiates a new `ClipboardAction` on each click.
     */


    var Clipboard = /*#__PURE__*/function (_Emitter) {
      _inherits(Clipboard, _Emitter);

      var _super = _createSuper(Clipboard);

      /**
       * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
       * @param {Object} options
       */
      function Clipboard(trigger, options) {
        var _this;

        _classCallCheck(this, Clipboard);

        _this = _super.call(this);

        _this.resolveOptions(options);

        _this.listenClick(trigger);

        return _this;
      }
      /**
       * Defines if attributes would be resolved using internal setter functions
       * or custom functions that were passed in the constructor.
       * @param {Object} options
       */


      _createClass(Clipboard, [{
        key: "resolveOptions",
        value: function resolveOptions() {
          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          this.action = typeof options.action === 'function' ? options.action : this.defaultAction;
          this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;
          this.text = typeof options.text === 'function' ? options.text : this.defaultText;
          this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;
        }
        /**
         * Adds a click event listener to the passed trigger.
         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger
         */

      }, {
        key: "listenClick",
        value: function listenClick(trigger) {
          var _this2 = this;

          this.listener = listen_default()(trigger, 'click', function (e) {
            return _this2.onClick(e);
          });
        }
        /**
         * Defines a new `ClipboardAction` on each click event.
         * @param {Event} e
         */

      }, {
        key: "onClick",
        value: function onClick(e) {
          var trigger = e.delegateTarget || e.currentTarget;
          var action = this.action(trigger) || 'copy';
          var text = actions_default({
            action: action,
            container: this.container,
            target: this.target(trigger),
            text: this.text(trigger)
          }); // Fires an event based on the copy operation result.

          this.emit(text ? 'success' : 'error', {
            action: action,
            text: text,
            trigger: trigger,
            clearSelection: function clearSelection() {
              if (trigger) {
                trigger.focus();
              }

              window.getSelection().removeAllRanges();
            }
          });
        }
        /**
         * Default `action` lookup function.
         * @param {Element} trigger
         */

      }, {
        key: "defaultAction",
        value: function defaultAction(trigger) {
          return getAttributeValue('action', trigger);
        }
        /**
         * Default `target` lookup function.
         * @param {Element} trigger
         */

      }, {
        key: "defaultTarget",
        value: function defaultTarget(trigger) {
          var selector = getAttributeValue('target', trigger);

          if (selector) {
            return document.querySelector(selector);
          }
        }
        /**
         * Allow fire programmatically a copy action
         * @param {String|HTMLElement} target
         * @param {Object} options
         * @returns Text copied.
         */

      }, {
        key: "defaultText",

        /**
         * Default `text` lookup function.
         * @param {Element} trigger
         */
        value: function defaultText(trigger) {
          return getAttributeValue('text', trigger);
        }
        /**
         * Destroy lifecycle.
         */

      }, {
        key: "destroy",
        value: function destroy() {
          this.listener.destroy();
        }
      }], [{
        key: "copy",
        value: function copy(target) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
            container: document.body
          };
          return actions_copy(target, options);
        }
        /**
         * Allow fire programmatically a cut action
         * @param {String|HTMLElement} target
         * @returns Text cutted.
         */

      }, {
        key: "cut",
        value: function cut(target) {
          return actions_cut(target);
        }
        /**
         * Returns the support of the given action, or all actions if no action is
         * given.
         * @param {String} [action]
         */

      }, {
        key: "isSupported",
        value: function isSupported() {
          var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];
          var actions = typeof action === 'string' ? [action] : action;
          var support = !!document.queryCommandSupported;
          actions.forEach(function (action) {
            support = support && !!document.queryCommandSupported(action);
          });
          return support;
        }
      }]);

      return Clipboard;
    }((tiny_emitter_default()));

    /* harmony default export */ var clipboard = (Clipboard);

    /***/ }),

    /***/ 828:
    /***/ (function(module) {

    var DOCUMENT_NODE_TYPE = 9;

    /**
     * A polyfill for Element.matches()
     */
    if (typeof Element !== 'undefined' && !Element.prototype.matches) {
        var proto = Element.prototype;

        proto.matches = proto.matchesSelector ||
                        proto.mozMatchesSelector ||
                        proto.msMatchesSelector ||
                        proto.oMatchesSelector ||
                        proto.webkitMatchesSelector;
    }

    /**
     * Finds the closest parent that matches a selector.
     *
     * @param {Element} element
     * @param {String} selector
     * @return {Function}
     */
    function closest (element, selector) {
        while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {
            if (typeof element.matches === 'function' &&
                element.matches(selector)) {
              return element;
            }
            element = element.parentNode;
        }
    }

    module.exports = closest;


    /***/ }),

    /***/ 438:
    /***/ (function(module, __unused_webpack_exports, __webpack_require__) {

    var closest = __webpack_require__(828);

    /**
     * Delegates event to a selector.
     *
     * @param {Element} element
     * @param {String} selector
     * @param {String} type
     * @param {Function} callback
     * @param {Boolean} useCapture
     * @return {Object}
     */
    function _delegate(element, selector, type, callback, useCapture) {
        var listenerFn = listener.apply(this, arguments);

        element.addEventListener(type, listenerFn, useCapture);

        return {
            destroy: function() {
                element.removeEventListener(type, listenerFn, useCapture);
            }
        }
    }

    /**
     * Delegates event to a selector.
     *
     * @param {Element|String|Array} [elements]
     * @param {String} selector
     * @param {String} type
     * @param {Function} callback
     * @param {Boolean} useCapture
     * @return {Object}
     */
    function delegate(elements, selector, type, callback, useCapture) {
        // Handle the regular Element usage
        if (typeof elements.addEventListener === 'function') {
            return _delegate.apply(null, arguments);
        }

        // Handle Element-less usage, it defaults to global delegation
        if (typeof type === 'function') {
            // Use `document` as the first parameter, then apply arguments
            // This is a short way to .unshift `arguments` without running into deoptimizations
            return _delegate.bind(null, document).apply(null, arguments);
        }

        // Handle Selector-based usage
        if (typeof elements === 'string') {
            elements = document.querySelectorAll(elements);
        }

        // Handle Array-like based usage
        return Array.prototype.map.call(elements, function (element) {
            return _delegate(element, selector, type, callback, useCapture);
        });
    }

    /**
     * Finds closest match and invokes callback.
     *
     * @param {Element} element
     * @param {String} selector
     * @param {String} type
     * @param {Function} callback
     * @return {Function}
     */
    function listener(element, selector, type, callback) {
        return function(e) {
            e.delegateTarget = closest(e.target, selector);

            if (e.delegateTarget) {
                callback.call(element, e);
            }
        }
    }

    module.exports = delegate;


    /***/ }),

    /***/ 879:
    /***/ (function(__unused_webpack_module, exports) {

    /**
     * Check if argument is a HTML element.
     *
     * @param {Object} value
     * @return {Boolean}
     */
    exports.node = function(value) {
        return value !== undefined
            && value instanceof HTMLElement
            && value.nodeType === 1;
    };

    /**
     * Check if argument is a list of HTML elements.
     *
     * @param {Object} value
     * @return {Boolean}
     */
    exports.nodeList = function(value) {
        var type = Object.prototype.toString.call(value);

        return value !== undefined
            && (type === '[object NodeList]' || type === '[object HTMLCollection]')
            && ('length' in value)
            && (value.length === 0 || exports.node(value[0]));
    };

    /**
     * Check if argument is a string.
     *
     * @param {Object} value
     * @return {Boolean}
     */
    exports.string = function(value) {
        return typeof value === 'string'
            || value instanceof String;
    };

    /**
     * Check if argument is a function.
     *
     * @param {Object} value
     * @return {Boolean}
     */
    exports.fn = function(value) {
        var type = Object.prototype.toString.call(value);

        return type === '[object Function]';
    };


    /***/ }),

    /***/ 370:
    /***/ (function(module, __unused_webpack_exports, __webpack_require__) {

    var is = __webpack_require__(879);
    var delegate = __webpack_require__(438);

    /**
     * Validates all params and calls the right
     * listener function based on its target type.
     *
     * @param {String|HTMLElement|HTMLCollection|NodeList} target
     * @param {String} type
     * @param {Function} callback
     * @return {Object}
     */
    function listen(target, type, callback) {
        if (!target && !type && !callback) {
            throw new Error('Missing required arguments');
        }

        if (!is.string(type)) {
            throw new TypeError('Second argument must be a String');
        }

        if (!is.fn(callback)) {
            throw new TypeError('Third argument must be a Function');
        }

        if (is.node(target)) {
            return listenNode(target, type, callback);
        }
        else if (is.nodeList(target)) {
            return listenNodeList(target, type, callback);
        }
        else if (is.string(target)) {
            return listenSelector(target, type, callback);
        }
        else {
            throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');
        }
    }

    /**
     * Adds an event listener to a HTML element
     * and returns a remove listener function.
     *
     * @param {HTMLElement} node
     * @param {String} type
     * @param {Function} callback
     * @return {Object}
     */
    function listenNode(node, type, callback) {
        node.addEventListener(type, callback);

        return {
            destroy: function() {
                node.removeEventListener(type, callback);
            }
        }
    }

    /**
     * Add an event listener to a list of HTML elements
     * and returns a remove listener function.
     *
     * @param {NodeList|HTMLCollection} nodeList
     * @param {String} type
     * @param {Function} callback
     * @return {Object}
     */
    function listenNodeList(nodeList, type, callback) {
        Array.prototype.forEach.call(nodeList, function(node) {
            node.addEventListener(type, callback);
        });

        return {
            destroy: function() {
                Array.prototype.forEach.call(nodeList, function(node) {
                    node.removeEventListener(type, callback);
                });
            }
        }
    }

    /**
     * Add an event listener to a selector
     * and returns a remove listener function.
     *
     * @param {String} selector
     * @param {String} type
     * @param {Function} callback
     * @return {Object}
     */
    function listenSelector(selector, type, callback) {
        return delegate(document.body, selector, type, callback);
    }

    module.exports = listen;


    /***/ }),

    /***/ 817:
    /***/ (function(module) {

    function select(element) {
        var selectedText;

        if (element.nodeName === 'SELECT') {
            element.focus();

            selectedText = element.value;
        }
        else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {
            var isReadOnly = element.hasAttribute('readonly');

            if (!isReadOnly) {
                element.setAttribute('readonly', '');
            }

            element.select();
            element.setSelectionRange(0, element.value.length);

            if (!isReadOnly) {
                element.removeAttribute('readonly');
            }

            selectedText = element.value;
        }
        else {
            if (element.hasAttribute('contenteditable')) {
                element.focus();
            }

            var selection = window.getSelection();
            var range = document.createRange();

            range.selectNodeContents(element);
            selection.removeAllRanges();
            selection.addRange(range);

            selectedText = selection.toString();
        }

        return selectedText;
    }

    module.exports = select;


    /***/ }),

    /***/ 279:
    /***/ (function(module) {

    function E () {
      // Keep this empty so it's easier to inherit from
      // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)
    }

    E.prototype = {
      on: function (name, callback, ctx) {
        var e = this.e || (this.e = {});

        (e[name] || (e[name] = [])).push({
          fn: callback,
          ctx: ctx
        });

        return this;
      },

      once: function (name, callback, ctx) {
        var self = this;
        function listener () {
          self.off(name, listener);
          callback.apply(ctx, arguments);
        }
        listener._ = callback;
        return this.on(name, listener, ctx);
      },

      emit: function (name) {
        var data = [].slice.call(arguments, 1);
        var evtArr = ((this.e || (this.e = {}))[name] || []).slice();
        var i = 0;
        var len = evtArr.length;

        for (i; i < len; i++) {
          evtArr[i].fn.apply(evtArr[i].ctx, data);
        }

        return this;
      },

      off: function (name, callback) {
        var e = this.e || (this.e = {});
        var evts = e[name];
        var liveEvents = [];

        if (evts && callback) {
          for (var i = 0, len = evts.length; i < len; i++) {
            if (evts[i].fn !== callback && evts[i].fn._ !== callback)
              liveEvents.push(evts[i]);
          }
        }

        // Remove event from queue to prevent memory leak
        // Suggested by https://github.com/lazd
        // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910

        (liveEvents.length)
          ? e[name] = liveEvents
          : delete e[name];

        return this;
      }
    };

    module.exports = E;
    module.exports.TinyEmitter = E;


    /***/ })

    /******/ 	});
    /************************************************************************/
    /******/ 	// The module cache
    /******/ 	var __webpack_module_cache__ = {};
    /******/ 	
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
    /******/ 		// Check if module is in cache
    /******/ 		if(__webpack_module_cache__[moduleId]) {
    /******/ 			return __webpack_module_cache__[moduleId].exports;
    /******/ 		}
    /******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = __webpack_module_cache__[moduleId] = {
    /******/ 			// no module.id needed
    /******/ 			// no module.loaded needed
    /******/ 			exports: {}
    /******/ 		};
    /******/ 	
    /******/ 		// Execute the module function
    /******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
    /******/ 	
    /******/ 		// Return the exports of the module
    /******/ 		return module.exports;
    /******/ 	}
    /******/ 	
    /************************************************************************/
    /******/ 	/* webpack/runtime/compat get default export */
    /******/ 	!function() {
    /******/ 		// getDefaultExport function for compatibility with non-harmony modules
    /******/ 		__webpack_require__.n = function(module) {
    /******/ 			var getter = module && module.__esModule ?
    /******/ 				function() { return module['default']; } :
    /******/ 				function() { return module; };
    /******/ 			__webpack_require__.d(getter, { a: getter });
    /******/ 			return getter;
    /******/ 		};
    /******/ 	}();
    /******/ 	
    /******/ 	/* webpack/runtime/define property getters */
    /******/ 	!function() {
    /******/ 		// define getter functions for harmony exports
    /******/ 		__webpack_require__.d = function(exports, definition) {
    /******/ 			for(var key in definition) {
    /******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
    /******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
    /******/ 				}
    /******/ 			}
    /******/ 		};
    /******/ 	}();
    /******/ 	
    /******/ 	/* webpack/runtime/hasOwnProperty shorthand */
    /******/ 	!function() {
    /******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); };
    /******/ 	}();
    /******/ 	
    /************************************************************************/
    /******/ 	// module exports must be returned from runtime so entry inlining is disabled
    /******/ 	// startup
    /******/ 	// Load entry module and return exports
    /******/ 	return __webpack_require__(686);
    /******/ })()
    .default;
    });
    });

    var Clipboard = unwrapExports(clipboard);

    function flip(node, { from, to }, params = {}) {
        const style = getComputedStyle(node);
        const transform = style.transform === 'none' ? '' : style.transform;
        const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);
        const dx = (from.left + from.width * ox / to.width) - (to.left + ox);
        const dy = (from.top + from.height * oy / to.height) - (to.top + oy);
        const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;
        return {
            delay,
            duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,
            easing,
            css: (t, u) => {
                const x = u * dx;
                const y = u * dy;
                const sx = t + u * from.width / to.width;
                const sy = t + u * from.height / to.height;
                return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;
            }
        };
    }

    /* node_modules/svelte-dragdroplist/DragDropList.svelte generated by Svelte v3.54.0 */
    const file$8 = "node_modules/svelte-dragdroplist/DragDropList.svelte";

    function get_each_context$3(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[31] = list[i];
    	child_ctx[33] = i;
    	return child_ctx;
    }

    const get_customView_slot_changes = dirty => ({ item: dirty[0] & /*data*/ 1 });
    const get_customView_slot_context = ctx => ({ item: /*datum*/ ctx[31] });

    // (216:24) {:else}
    function create_else_block$1(ctx) {
    	let p;
    	let t_value = /*datum*/ ctx[31] + "";
    	let t;

    	const block = {
    		c: function create() {
    			p = element("p");
    			t = text(t_value);
    			add_location(p, file$8, 216, 28, 7146);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, p, anchor);
    			append_dev(p, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*data*/ 1 && t_value !== (t_value = /*datum*/ ctx[31] + "")) set_data_dev(t, t_value);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(p);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$1.name,
    		type: "else",
    		source: "(216:24) {:else}",
    		ctx
    	});

    	return block;
    }

    // (214:45) 
    function create_if_block_3$2(ctx) {
    	let p;
    	let t_value = /*datum*/ ctx[31].text + "";
    	let t;

    	const block = {
    		c: function create() {
    			p = element("p");
    			t = text(t_value);
    			add_location(p, file$8, 214, 28, 7066);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, p, anchor);
    			append_dev(p, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*data*/ 1 && t_value !== (t_value = /*datum*/ ctx[31].text + "")) set_data_dev(t, t_value);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(p);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3$2.name,
    		type: "if",
    		source: "(214:45) ",
    		ctx
    	});

    	return block;
    }

    // (212:24) {#if datum.html}
    function create_if_block_2$4(ctx) {
    	let html_tag;
    	let raw_value = /*datum*/ ctx[31].html + "";
    	let html_anchor;

    	const block = {
    		c: function create() {
    			html_tag = new HtmlTag(false);
    			html_anchor = empty();
    			html_tag.a = html_anchor;
    		},
    		m: function mount(target, anchor) {
    			html_tag.m(raw_value, target, anchor);
    			insert_dev(target, html_anchor, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty[0] & /*data*/ 1 && raw_value !== (raw_value = /*datum*/ ctx[31].html + "")) html_tag.p(raw_value);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(html_anchor);
    			if (detaching) html_tag.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$4.name,
    		type: "if",
    		source: "(212:24) {#if datum.html}",
    		ctx
    	});

    	return block;
    }

    // (209:20) {#if $$slots.customView}
    function create_if_block_1$4(ctx) {
    	let current;
    	const customView_slot_template = /*#slots*/ ctx[17].customView;
    	const customView_slot = create_slot(customView_slot_template, ctx, /*$$scope*/ ctx[16], get_customView_slot_context);

    	const block = {
    		c: function create() {
    			if (customView_slot) customView_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (customView_slot) {
    				customView_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (customView_slot) {
    				if (customView_slot.p && (!current || dirty[0] & /*$$scope, data*/ 65537)) {
    					update_slot_base(
    						customView_slot,
    						customView_slot_template,
    						ctx,
    						/*$$scope*/ ctx[16],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[16])
    						: get_slot_changes(customView_slot_template, /*$$scope*/ ctx[16], dirty, get_customView_slot_changes),
    						get_customView_slot_context
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(customView_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(customView_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (customView_slot) customView_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$4.name,
    		type: "if",
    		source: "(209:20) {#if $$slots.customView}",
    		ctx
    	});

    	return block;
    }

    // (223:20) {#if removesItems}
    function create_if_block$7(ctx) {
    	let button;
    	let svg;
    	let path0;
    	let path1;
    	let mounted;
    	let dispose;

    	function click_handler_2(...args) {
    		return /*click_handler_2*/ ctx[21](/*i*/ ctx[33], ...args);
    	}

    	const block = {
    		c: function create() {
    			button = element("button");
    			svg = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			attr_dev(path0, "d", "M0 0h24v24H0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$8, 225, 111, 7539);
    			attr_dev(path1, "d", "M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z");
    			add_location(path1, file$8, 225, 148, 7576);
    			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg, "height", "16");
    			attr_dev(svg, "viewBox", "0 0 24 24");
    			attr_dev(svg, "width", "16");
    			add_location(svg, file$8, 225, 28, 7456);
    			attr_dev(button, "class", "svelte-1g3zabj");
    			add_location(button, file$8, 223, 24, 7349);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, svg);
    			append_dev(svg, path0);
    			append_dev(svg, path1);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", click_handler_2, false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$7.name,
    		type: "if",
    		source: "(223:20) {#if removesItems}",
    		ctx
    	});

    	return block;
    }

    // (181:8) {#each data as datum, i (datum[objectKey] ? datum[objectKey] : JSON.stringify(datum))}
    function create_each_block$3(key_1, ctx) {
    	let div3;
    	let div0;
    	let button0;
    	let svg0;
    	let path0;
    	let path1;
    	let button0_style_value;
    	let t0;
    	let button1;
    	let svg1;
    	let path2;
    	let path3;
    	let button1_style_value;
    	let t1;
    	let div1;
    	let current_block_type_index;
    	let if_block0;
    	let t2;
    	let div2;
    	let t3;
    	let div3_id_value;
    	let div3_data_index_value;
    	let div3_data_id_value;
    	let rect;
    	let stop_animation = noop;
    	let current;
    	let mounted;
    	let dispose;

    	function click_handler(...args) {
    		return /*click_handler*/ ctx[19](/*i*/ ctx[33], ...args);
    	}

    	function click_handler_1(...args) {
    		return /*click_handler_1*/ ctx[20](/*i*/ ctx[33], ...args);
    	}

    	const if_block_creators = [create_if_block_1$4, create_if_block_2$4, create_if_block_3$2, create_else_block$1];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*$$slots*/ ctx[15].customView) return 0;
    		if (/*datum*/ ctx[31].html) return 1;
    		if (/*datum*/ ctx[31].text) return 2;
    		return 3;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    	let if_block1 = /*removesItems*/ ctx[1] && create_if_block$7(ctx);

    	const block = {
    		key: key_1,
    		first: null,
    		c: function create() {
    			div3 = element("div");
    			div0 = element("div");
    			button0 = element("button");
    			svg0 = svg_element("svg");
    			path0 = svg_element("path");
    			path1 = svg_element("path");
    			t0 = space();
    			button1 = element("button");
    			svg1 = svg_element("svg");
    			path2 = svg_element("path");
    			path3 = svg_element("path");
    			t1 = space();
    			div1 = element("div");
    			if_block0.c();
    			t2 = space();
    			div2 = element("div");
    			if (if_block1) if_block1.c();
    			t3 = space();
    			attr_dev(path0, "d", "M0 0h24v24H0V0z");
    			attr_dev(path0, "fill", "none");
    			add_location(path0, file$8, 197, 111, 6069);
    			attr_dev(path1, "d", "M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6 1.41 1.41z");
    			add_location(path1, file$8, 197, 150, 6108);
    			attr_dev(svg0, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg0, "viewBox", "0 0 24 24");
    			attr_dev(svg0, "width", "16px");
    			attr_dev(svg0, "height", "16px");
    			add_location(svg0, file$8, 197, 24, 5982);
    			attr_dev(button0, "class", "up svelte-1g3zabj");
    			attr_dev(button0, "style", button0_style_value = "visibility: " + (/*i*/ ctx[33] > 0 ? "" : "hidden") + ";");
    			add_location(button0, file$8, 193, 20, 5763);
    			attr_dev(path2, "d", "M0 0h24v24H0V0z");
    			attr_dev(path2, "fill", "none");
    			add_location(path2, file$8, 203, 111, 6555);
    			attr_dev(path3, "d", "M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z");
    			add_location(path3, file$8, 203, 150, 6594);
    			attr_dev(svg1, "xmlns", "http://www.w3.org/2000/svg");
    			attr_dev(svg1, "viewBox", "0 0 24 24");
    			attr_dev(svg1, "width", "16px");
    			attr_dev(svg1, "height", "16px");
    			add_location(svg1, file$8, 203, 24, 6468);
    			attr_dev(button1, "class", "down svelte-1g3zabj");

    			attr_dev(button1, "style", button1_style_value = "visibility: " + (/*i*/ ctx[33] < /*data*/ ctx[0].length - 1
    			? ""
    			: "hidden") + ";");

    			add_location(button1, file$8, 199, 20, 6233);
    			attr_dev(div0, "class", "buttons svelte-1g3zabj");
    			add_location(div0, file$8, 192, 16, 5721);
    			attr_dev(div1, "class", "content svelte-1g3zabj");
    			add_location(div1, file$8, 207, 16, 6738);
    			attr_dev(div2, "class", "buttons delete svelte-1g3zabj");
    			add_location(div2, file$8, 221, 16, 7257);

    			attr_dev(div3, "id", div3_id_value = /*grabbed*/ ctx[4] && (/*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			? /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			: JSON.stringify(/*datum*/ ctx[31])) == /*grabbed*/ ctx[4].dataset.id
    			? "grabbed"
    			: "");

    			attr_dev(div3, "class", "item svelte-1g3zabj");
    			attr_dev(div3, "data-index", div3_data_index_value = /*i*/ ctx[33]);

    			attr_dev(div3, "data-id", div3_data_id_value = /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			? /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			: JSON.stringify(/*datum*/ ctx[31]));

    			attr_dev(div3, "data-graby", "0");
    			add_location(div3, file$8, 181, 12, 4968);
    			this.first = div3;
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div3, anchor);
    			append_dev(div3, div0);
    			append_dev(div0, button0);
    			append_dev(button0, svg0);
    			append_dev(svg0, path0);
    			append_dev(svg0, path1);
    			append_dev(div0, t0);
    			append_dev(div0, button1);
    			append_dev(button1, svg1);
    			append_dev(svg1, path2);
    			append_dev(svg1, path3);
    			append_dev(div3, t1);
    			append_dev(div3, div1);
    			if_blocks[current_block_type_index].m(div1, null);
    			append_dev(div3, t2);
    			append_dev(div3, div2);
    			if (if_block1) if_block1.m(div2, null);
    			append_dev(div3, t3);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					listen_dev(button0, "click", click_handler, false, false, false),
    					listen_dev(button1, "click", click_handler_1, false, false, false),
    					listen_dev(div3, "mousedown", /*mousedown_handler*/ ctx[22], false, false, false),
    					listen_dev(div3, "touchstart", /*touchstart_handler*/ ctx[23], false, false, false),
    					listen_dev(div3, "mouseenter", /*mouseenter_handler*/ ctx[24], false, false, false),
    					listen_dev(div3, "touchmove", /*touchmove_handler*/ ctx[25], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (!current || dirty[0] & /*data*/ 1 && button0_style_value !== (button0_style_value = "visibility: " + (/*i*/ ctx[33] > 0 ? "" : "hidden") + ";")) {
    				attr_dev(button0, "style", button0_style_value);
    			}

    			if (!current || dirty[0] & /*data*/ 1 && button1_style_value !== (button1_style_value = "visibility: " + (/*i*/ ctx[33] < /*data*/ ctx[0].length - 1
    			? ""
    			: "hidden") + ";")) {
    				attr_dev(button1, "style", button1_style_value);
    			}

    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block0 = if_blocks[current_block_type_index];

    				if (!if_block0) {
    					if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block0.c();
    				} else {
    					if_block0.p(ctx, dirty);
    				}

    				transition_in(if_block0, 1);
    				if_block0.m(div1, null);
    			}

    			if (/*removesItems*/ ctx[1]) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block$7(ctx);
    					if_block1.c();
    					if_block1.m(div2, null);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}

    			if (!current || dirty[0] & /*grabbed, data, objectKey*/ 21 && div3_id_value !== (div3_id_value = /*grabbed*/ ctx[4] && (/*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			? /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			: JSON.stringify(/*datum*/ ctx[31])) == /*grabbed*/ ctx[4].dataset.id
    			? "grabbed"
    			: "")) {
    				attr_dev(div3, "id", div3_id_value);
    			}

    			if (!current || dirty[0] & /*data*/ 1 && div3_data_index_value !== (div3_data_index_value = /*i*/ ctx[33])) {
    				attr_dev(div3, "data-index", div3_data_index_value);
    			}

    			if (!current || dirty[0] & /*data, objectKey*/ 5 && div3_data_id_value !== (div3_data_id_value = /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			? /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    			: JSON.stringify(/*datum*/ ctx[31]))) {
    				attr_dev(div3, "data-id", div3_data_id_value);
    			}
    		},
    		r: function measure() {
    			rect = div3.getBoundingClientRect();
    		},
    		f: function fix() {
    			fix_position(div3);
    			stop_animation();
    		},
    		a: function animate() {
    			stop_animation();
    			stop_animation = create_animation(div3, rect, flip, { duration: 200 });
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block0);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block0);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div3);
    			if_blocks[current_block_type_index].d();
    			if (if_block1) if_block1.d();
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$3.name,
    		type: "each",
    		source: "(181:8) {#each data as datum, i (datum[objectKey] ? datum[objectKey] : JSON.stringify(datum))}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$8(ctx) {
    	let main;
    	let div0;
    	let p;
    	let div0_class_value;
    	let div0_style_value;
    	let t;
    	let div1;
    	let each_blocks = [];
    	let each_1_lookup = new Map();
    	let current;
    	let mounted;
    	let dispose;
    	let each_value = /*data*/ ctx[0];
    	validate_each_argument(each_value);

    	const get_key = ctx => /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    	? /*datum*/ ctx[31][/*objectKey*/ ctx[2]]
    	: JSON.stringify(/*datum*/ ctx[31]);

    	validate_each_keys(ctx, each_value, get_each_context$3, get_key);

    	for (let i = 0; i < each_value.length; i += 1) {
    		let child_ctx = get_each_context$3(ctx, each_value, i);
    		let key = get_key(child_ctx);
    		each_1_lookup.set(key, each_blocks[i] = create_each_block$3(key, child_ctx));
    	}

    	const block = {
    		c: function create() {
    			main = element("main");
    			div0 = element("div");
    			p = element("p");
    			t = space();
    			div1 = element("div");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(p, "class", "svelte-1g3zabj");
    			add_location(p, file$8, 173, 61, 4494);
    			attr_dev(div0, "id", "ghost");
    			attr_dev(div0, "class", div0_class_value = "" + (null_to_empty(/*grabbed*/ ctx[4] ? "item haunting" : "item") + " svelte-1g3zabj"));
    			attr_dev(div0, "style", div0_style_value = "top: " + (/*mouseY*/ ctx[5] + /*offsetY*/ ctx[6] - /*layerY*/ ctx[7]) + "px");
    			add_location(div0, file$8, 169, 4, 4331);
    			attr_dev(div1, "class", "list svelte-1g3zabj");
    			add_location(div1, file$8, 174, 4, 4512);
    			attr_dev(main, "class", "dragdroplist svelte-1g3zabj");
    			add_location(main, file$8, 168, 0, 4299);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, div0);
    			append_dev(div0, p);
    			/*div0_binding*/ ctx[18](div0);
    			append_dev(main, t);
    			append_dev(main, div1);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(div1, null);
    			}

    			current = true;

    			if (!mounted) {
    				dispose = [
    					listen_dev(div1, "mousemove", /*mousemove_handler*/ ctx[26], false, false, false),
    					listen_dev(div1, "touchmove", /*touchmove_handler_1*/ ctx[27], false, false, false),
    					listen_dev(div1, "mouseup", /*mouseup_handler*/ ctx[28], false, false, false),
    					listen_dev(div1, "touchend", /*touchend_handler*/ ctx[29], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, dirty) {
    			if (!current || dirty[0] & /*grabbed*/ 16 && div0_class_value !== (div0_class_value = "" + (null_to_empty(/*grabbed*/ ctx[4] ? "item haunting" : "item") + " svelte-1g3zabj"))) {
    				attr_dev(div0, "class", div0_class_value);
    			}

    			if (!current || dirty[0] & /*mouseY, offsetY, layerY*/ 224 && div0_style_value !== (div0_style_value = "top: " + (/*mouseY*/ ctx[5] + /*offsetY*/ ctx[6] - /*layerY*/ ctx[7]) + "px")) {
    				attr_dev(div0, "style", div0_style_value);
    			}

    			if (dirty[0] & /*grabbed, data, objectKey, grab, dragEnter, touchEnter, removeDatum, removesItems, $$scope, $$slots, moveDatum*/ 122135) {
    				each_value = /*data*/ ctx[0];
    				validate_each_argument(each_value);
    				group_outros();
    				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();
    				validate_each_keys(ctx, each_value, get_each_context$3, get_key);
    				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, div1, fix_and_outro_and_destroy_block, create_each_block$3, null, get_each_context$3);
    				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();
    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			/*div0_binding*/ ctx[18](null);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].d();
    			}

    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$8.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$8($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('DragDropList', slots, ['customView']);
    	const $$slots = compute_slots(slots);
    	let { data = [] } = $$props;
    	let { removesItems = false } = $$props;
    	let { objectKey = 'id' } = $$props;
    	let ghost;
    	let grabbed;
    	let lastTarget;
    	let mouseY = 0; // pointer y coordinate within client
    	let offsetY = 0; // y distance from top of grabbed element to pointer
    	let layerY = 0; // distance from top of list to top of client

    	function grab(clientY, element) {
    		// modify grabbed element
    		$$invalidate(4, grabbed = element);

    		$$invalidate(4, grabbed.dataset.grabY = clientY, grabbed);

    		// modify ghost element (which is actually dragged)
    		$$invalidate(3, ghost.innerHTML = grabbed.innerHTML, ghost);

    		// record offset from cursor to top of element
    		// (used for positioning ghost)
    		$$invalidate(6, offsetY = grabbed.getBoundingClientRect().y - clientY);

    		drag(clientY);
    	}

    	// drag handler updates cursor position
    	function drag(clientY) {
    		if (grabbed) {
    			$$invalidate(5, mouseY = clientY);
    			$$invalidate(7, layerY = ghost.parentNode.getBoundingClientRect().y);
    		}
    	}

    	// touchEnter handler emulates the mouseenter event for touch input
    	// (more or less)
    	function touchEnter(ev) {
    		drag(ev.clientY);

    		// trigger dragEnter the first time the cursor moves over a list item
    		let target = document.elementFromPoint(ev.clientX, ev.clientY).closest(".item");

    		if (target && target != lastTarget) {
    			lastTarget = target;
    			dragEnter(ev, target);
    		}
    	}

    	function dragEnter(ev, target) {
    		// swap items in data
    		if (grabbed && target != grabbed && target.classList.contains("item")) {
    			moveDatum(parseInt(grabbed.dataset.index), parseInt(target.dataset.index));
    		}
    	}

    	// does the actual moving of items in data
    	function moveDatum(from, to) {
    		let temp = data[from];
    		$$invalidate(0, data = [...data.slice(0, from), ...data.slice(from + 1)]);
    		$$invalidate(0, data = [...data.slice(0, to), temp, ...data.slice(to)]);
    	}

    	function release(ev) {
    		$$invalidate(4, grabbed = null);
    	}

    	function removeDatum(index) {
    		$$invalidate(0, data = [...data.slice(0, index), ...data.slice(index + 1)]);
    	}

    	const writable_props = ['data', 'removesItems', 'objectKey'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<DragDropList> was created with unknown prop '${key}'`);
    	});

    	function div0_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			ghost = $$value;
    			$$invalidate(3, ghost);
    		});
    	}

    	const click_handler = function (i, ev) {
    		moveDatum(i, i - 1);
    	};

    	const click_handler_1 = function (i, ev) {
    		moveDatum(i, i + 1);
    	};

    	const click_handler_2 = function (i, ev) {
    		removeDatum(i);
    	};

    	const mousedown_handler = function (ev) {
    		grab(ev.clientY, this);
    	};

    	const touchstart_handler = function (ev) {
    		grab(ev.touches[0].clientY, this);
    	};

    	const mouseenter_handler = function (ev) {
    		ev.stopPropagation();
    		dragEnter(ev, ev.target);
    	};

    	const touchmove_handler = function (ev) {
    		ev.stopPropagation();
    		ev.preventDefault();
    		touchEnter(ev.touches[0]);
    	};

    	const mousemove_handler = function (ev) {
    		ev.stopPropagation();
    		drag(ev.clientY);
    	};

    	const touchmove_handler_1 = function (ev) {
    		ev.stopPropagation();
    		drag(ev.touches[0].clientY);
    	};

    	const mouseup_handler = function (ev) {
    		ev.stopPropagation();
    		release();
    	};

    	const touchend_handler = function (ev) {
    		ev.stopPropagation();
    		release(ev.touches[0]);
    	};

    	$$self.$$set = $$props => {
    		if ('data' in $$props) $$invalidate(0, data = $$props.data);
    		if ('removesItems' in $$props) $$invalidate(1, removesItems = $$props.removesItems);
    		if ('objectKey' in $$props) $$invalidate(2, objectKey = $$props.objectKey);
    		if ('$$scope' in $$props) $$invalidate(16, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		flip,
    		data,
    		removesItems,
    		objectKey,
    		ghost,
    		grabbed,
    		lastTarget,
    		mouseY,
    		offsetY,
    		layerY,
    		grab,
    		drag,
    		touchEnter,
    		dragEnter,
    		moveDatum,
    		release,
    		removeDatum
    	});

    	$$self.$inject_state = $$props => {
    		if ('data' in $$props) $$invalidate(0, data = $$props.data);
    		if ('removesItems' in $$props) $$invalidate(1, removesItems = $$props.removesItems);
    		if ('objectKey' in $$props) $$invalidate(2, objectKey = $$props.objectKey);
    		if ('ghost' in $$props) $$invalidate(3, ghost = $$props.ghost);
    		if ('grabbed' in $$props) $$invalidate(4, grabbed = $$props.grabbed);
    		if ('lastTarget' in $$props) lastTarget = $$props.lastTarget;
    		if ('mouseY' in $$props) $$invalidate(5, mouseY = $$props.mouseY);
    		if ('offsetY' in $$props) $$invalidate(6, offsetY = $$props.offsetY);
    		if ('layerY' in $$props) $$invalidate(7, layerY = $$props.layerY);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		data,
    		removesItems,
    		objectKey,
    		ghost,
    		grabbed,
    		mouseY,
    		offsetY,
    		layerY,
    		grab,
    		drag,
    		touchEnter,
    		dragEnter,
    		moveDatum,
    		release,
    		removeDatum,
    		$$slots,
    		$$scope,
    		slots,
    		div0_binding,
    		click_handler,
    		click_handler_1,
    		click_handler_2,
    		mousedown_handler,
    		touchstart_handler,
    		mouseenter_handler,
    		touchmove_handler,
    		mousemove_handler,
    		touchmove_handler_1,
    		mouseup_handler,
    		touchend_handler
    	];
    }

    class DragDropList extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$8, create_fragment$8, safe_not_equal, { data: 0, removesItems: 1, objectKey: 2 }, null, [-1, -1]);

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "DragDropList",
    			options,
    			id: create_fragment$8.name
    		});
    	}

    	get data() {
    		throw new Error("<DragDropList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set data(value) {
    		throw new Error("<DragDropList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get removesItems() {
    		throw new Error("<DragDropList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set removesItems(value) {
    		throw new Error("<DragDropList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get objectKey() {
    		throw new Error("<DragDropList>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set objectKey(value) {
    		throw new Error("<DragDropList>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* os-app/sub-share/main.svelte generated by Svelte v3.54.0 */
    const file$9 = "os-app/sub-share/main.svelte";

    // (69:2) 
    function create_customView_slot(ctx) {
    	let div;
    	let jbxplaylistitem;
    	let current;

    	jbxplaylistitem = new Main$5({
    			props: { JBXPlayListItemObject: /*item*/ ctx[4] },
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div = element("div");
    			create_component(jbxplaylistitem.$$.fragment);
    			attr_dev(div, "class", "OLSKDecorTappable");
    			attr_dev(div, "slot", "customView");
    			add_location(div, file$9, 68, 2, 1489);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			mount_component(jbxplaylistitem, div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const jbxplaylistitem_changes = {};
    			if (dirty & /*item*/ 16) jbxplaylistitem_changes.JBXPlayListItemObject = /*item*/ ctx[4];
    			jbxplaylistitem.$set(jbxplaylistitem_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(jbxplaylistitem.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(jbxplaylistitem.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_component(jbxplaylistitem);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_customView_slot.name,
    		type: "slot",
    		source: "(69:2) ",
    		ctx
    	});

    	return block;
    }

    function create_fragment$9(ctx) {
    	let div3;
    	let div0;
    	let dragdrop;
    	let updating_data;
    	let t0;
    	let div2;
    	let div1;
    	let input;
    	let input_placeholder_value;
    	let t1;
    	let button;
    	let current;
    	let mounted;
    	let dispose;

    	function dragdrop_data_binding(value) {
    		/*dragdrop_data_binding*/ ctx[2](value);
    	}

    	let dragdrop_props = {
    		objectKey: 'JBXDocumentID',
    		$$slots: {
    			customView: [
    				create_customView_slot,
    				({ item }) => ({ 4: item }),
    				({ item }) => item ? 16 : 0
    			]
    		},
    		$$scope: { ctx }
    	};

    	if (/*JBXPlayShareItems*/ ctx[0] !== void 0) {
    		dragdrop_props.data = /*JBXPlayShareItems*/ ctx[0];
    	}

    	dragdrop = new DragDropList({ props: dragdrop_props, $$inline: true });
    	binding_callbacks.push(() => bind(dragdrop, 'data', dragdrop_data_binding, /*JBXPlayShareItems*/ ctx[0]));

    	const block = {
    		c: function create() {
    			div3 = element("div");
    			div0 = element("div");
    			create_component(dragdrop.$$.fragment);
    			t0 = space();
    			div2 = element("div");
    			div1 = element("div");
    			input = element("input");
    			t1 = space();
    			button = element("button");
    			button.textContent = `${main_1('JBXPlayShareCopyButtonText')}`;
    			attr_dev(div0, "class", "JBXPlayShareList svelte-u8bvg5");
    			add_location(div0, file$9, 66, 0, 1382);
    			attr_dev(input, "class", "JBXPlayShareLinkField svelte-u8bvg5");
    			attr_dev(input, "placeholder", input_placeholder_value = main_1('JBXPlayShareLinkFieldText'));
    			attr_dev(input, "type", "text");
    			attr_dev(input, "onclick", "this.select()");
    			add_location(input, file$9, 76, 2, 1787);
    			attr_dev(button, "class", "JBXPlayShareCopyButton");
    			attr_dev(button, "data-clipboard-target", ".JBXPlayShareLinkField");
    			add_location(button, file$9, 78, 2, 1955);
    			attr_dev(div1, "class", "OLSKToolbarElementGroup svelte-u8bvg5");
    			add_location(div1, file$9, 75, 1, 1747);
    			attr_dev(div2, "class", "JBXPlayShareToolbar OLSKToolbar OLSKToolbarJustify OLSKCommonEdgeTop OLSKDecor OLSKDecorFixedHeader svelte-u8bvg5");
    			add_location(div2, file$9, 74, 0, 1632);
    			attr_dev(div3, "class", "JBXPlayShare svelte-u8bvg5");
    			add_location(div3, file$9, 64, 0, 1354);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div3, anchor);
    			append_dev(div3, div0);
    			mount_component(dragdrop, div0, null);
    			append_dev(div3, t0);
    			append_dev(div3, div2);
    			append_dev(div2, div1);
    			append_dev(div1, input);
    			set_input_value(input, /*mod*/ ctx[1]._ValueLink);
    			append_dev(div1, t1);
    			append_dev(div1, button);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(input, "input", /*input_input_handler*/ ctx[3]);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			const dragdrop_changes = {};

    			if (dirty & /*$$scope, item*/ 48) {
    				dragdrop_changes.$$scope = { dirty, ctx };
    			}

    			if (!updating_data && dirty & /*JBXPlayShareItems*/ 1) {
    				updating_data = true;
    				dragdrop_changes.data = /*JBXPlayShareItems*/ ctx[0];
    				add_flush_callback(() => updating_data = false);
    			}

    			dragdrop.$set(dragdrop_changes);

    			if (dirty & /*mod*/ 2 && input.value !== /*mod*/ ctx[1]._ValueLink) {
    				set_input_value(input, /*mod*/ ctx[1]._ValueLink);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(dragdrop.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(dragdrop.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div3);
    			destroy_component(dragdrop);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$9.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$9($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { JBXPlayShareItems } = $$props;

    	const mod = {
    		// VALUE
    		_ValueLink: '',
    		// INTERFACE
    		InterfaceCopyButtonDidClick() {
    			return Launchlet.LCHTasksRun([
    				{
    					LCHRecipeCallback() {
    						return this.api.LCHCopyToClipboard(Math.random().toString());
    					},
    					LCHRecipeURLFilter: '*',
    					LCHRecipeIsAutomatic: true
    				}
    			]);
    		},
    		// CONTROL
    		ControlUpdateLink(inputData) {
    			$$invalidate(
    				1,
    				mod._ValueLink = window.location.origin + window.OLSKCanonical('JBXPlayRoute') + '/#' + main$e.OLSKHashString({
    					[mod$2.JBXPlayInboxAnchor()]: OLSKString.OLSKStringEncode(JSON.stringify(inputData.map(function (e) {
    						return main$a.OLSKObjectRemap(e, mod$2.JBXPlayRemap(e));
    					})))
    				}),
    				mod
    			);
    		},
    		// REACT
    		ReactItems(inputData) {
    			mod.ControlUpdateLink(inputData);
    		},
    		// LIFECYCLE
    		LifecycleModuleDidMount() {
    			new Clipboard('.JBXPlayShareCopyButton');
    		}
    	};

    	onMount(mod.LifecycleModuleDidMount);

    	$$self.$$.on_mount.push(function () {
    		if (JBXPlayShareItems === undefined && !('JBXPlayShareItems' in $$props || $$self.$$.bound[$$self.$$.props['JBXPlayShareItems']])) {
    			console.warn("<Main> was created without expected prop 'JBXPlayShareItems'");
    		}
    	});

    	const writable_props = ['JBXPlayShareItems'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function dragdrop_data_binding(value) {
    		JBXPlayShareItems = value;
    		$$invalidate(0, JBXPlayShareItems);
    	}

    	function input_input_handler() {
    		mod._ValueLink = this.value;
    		$$invalidate(1, mod);
    	}

    	$$self.$$set = $$props => {
    		if ('JBXPlayShareItems' in $$props) $$invalidate(0, JBXPlayShareItems = $$props.JBXPlayShareItems);
    	};

    	$$self.$capture_state = () => ({
    		JBXPlayShareItems,
    		OLSKLocalized: main_1,
    		JBXPlayLogic: mod$2,
    		OLSKString,
    		OLSKHash: main$e,
    		OLSKObject: main$a,
    		mod,
    		onMount,
    		Clipboard,
    		DragDrop: DragDropList,
    		JBXPlayListItem: Main$5
    	});

    	$$self.$inject_state = $$props => {
    		if ('JBXPlayShareItems' in $$props) $$invalidate(0, JBXPlayShareItems = $$props.JBXPlayShareItems);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*mod, JBXPlayShareItems*/ 3) {
    			$: {
    				mod.ReactItems(JBXPlayShareItems);
    			}
    		}
    	};

    	return [JBXPlayShareItems, mod, dragdrop_data_binding, input_input_handler];
    }

    class Main$8 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$9, create_fragment$9, safe_not_equal, { JBXPlayShareItems: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$9.name
    		});
    	}

    	get JBXPlayShareItems() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set JBXPlayShareItems(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKReloadButton/main.svelte generated by Svelte v3.54.0 */
    const file$a = "node_modules/OLSKReloadButton/main.svelte";

    function create_fragment$a(ctx) {
    	let button;
    	let div;
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKReloadButtonImage");
    			add_location(div, file$a, 7, 1, 329);
    			attr_dev(button, "class", "OLSKReloadButton OLSKToolbarButton OLSKDecorTappable OLSKDecorButtonNoStyle");
    			attr_dev(button, "title", button_title_value = main_1('OLSKReloadButtonText'));
    			add_location(button, file$a, 6, 0, 143);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = _OLSKSharedReload;

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler*/ ctx[0], false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$a.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$a($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	const click_handler = () => window.location.reload();
    	$$self.$capture_state = () => ({ OLSKLocalized: main_1, _OLSKSharedReload });
    	return [click_handler];
    }

    class Main$9 extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$a, create_fragment$a, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$a.name
    		});
    	}
    }

    /* node_modules/OLSKAppToolbar/main.svelte generated by Svelte v3.54.0 */
    const file$b = "node_modules/OLSKAppToolbar/main.svelte";

    // (52:1) {:else}
    function create_else_block$2(ctx) {
    	let olskreloadbutton;
    	let current;
    	olskreloadbutton = new Main$9({ $$inline: true });

    	const block = {
    		c: function create() {
    			create_component(olskreloadbutton.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskreloadbutton, target, anchor);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskreloadbutton.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskreloadbutton.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olskreloadbutton, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block$2.name,
    		type: "else",
    		source: "(52:1) {:else}",
    		ctx
    	});

    	return block;
    }

    // (48:1) {#if OLSKAppToolbarDispatchApropos }
    function create_if_block_7$2(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedApropos + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKAppToolbarAproposButtonImage svelte-p1utxj");
    			add_location(div, file$b, 49, 3, 1428);
    			attr_dev(button, "class", "OLSKAppToolbarAproposButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton svelte-p1utxj");
    			attr_dev(button, "title", button_title_value = main_1('OLSKAppToolbarAproposButtonText'));
    			add_location(button, file$b, 48, 2, 1219);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKAppToolbarDispatchApropos*/ ctx[6])) /*OLSKAppToolbarDispatchApropos*/ ctx[6].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_7$2.name,
    		type: "if",
    		source: "(48:1) {#if OLSKAppToolbarDispatchApropos }",
    		ctx
    	});

    	return block;
    }

    // (56:1) {#if OLSKAppToolbarDispatchTongue }
    function create_if_block_6$2(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedLanguage + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKAppToolbarLanguageButtonImage svelte-p1utxj");
    			add_location(div, file$b, 57, 3, 1822);
    			attr_dev(button, "class", "OLSKAppToolbarLanguageButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton svelte-p1utxj");
    			attr_dev(button, "title", button_title_value = main_1('OLSKAppToolbarLanguageButtonText'));
    			add_location(button, file$b, 56, 2, 1612);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKAppToolbarDispatchTongue*/ ctx[7])) /*OLSKAppToolbarDispatchTongue*/ ctx[7].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_6$2.name,
    		type: "if",
    		source: "(56:1) {#if OLSKAppToolbarDispatchTongue }",
    		ctx
    	});

    	return block;
    }

    // (62:1) {#if OLSKAppToolbarGuideURL}
    function create_if_block_5$2(ctx) {
    	let a;
    	let t_value = main_1('OLSKAppToolbarGuideLinkText') + "";
    	let t;

    	const block = {
    		c: function create() {
    			a = element("a");
    			t = text(t_value);
    			attr_dev(a, "class", "OLSKAppToolbarGuideLink svelte-p1utxj");
    			attr_dev(a, "href", /*OLSKAppToolbarGuideURL*/ ctx[0]);
    			attr_dev(a, "target", "_blank");
    			attr_dev(a, "rel", "noreferrer");
    			add_location(a, file$b, 62, 2, 1969);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, a, anchor);
    			append_dev(a, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*OLSKAppToolbarGuideURL*/ 1) {
    				attr_dev(a, "href", /*OLSKAppToolbarGuideURL*/ ctx[0]);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(a);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_5$2.name,
    		type: "if",
    		source: "(62:1) {#if OLSKAppToolbarGuideURL}",
    		ctx
    	});

    	return block;
    }

    // (71:2) {#if OLSKAppToolbarDispatchFund && !OLSKAppToolbarFundShowProgress }
    function create_if_block_3$3(ctx) {
    	let button;
    	let t1;
    	let if_block_anchor;
    	let mounted;
    	let dispose;
    	let if_block = /*OLSKAppToolbarFundLimitText*/ ctx[2] !== '' && create_if_block_4$2(ctx);

    	const block = {
    		c: function create() {
    			button = element("button");
    			button.textContent = `${main_1('OLSKAppToolbarFundButtonText')}`;
    			t1 = space();
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    			attr_dev(button, "class", "OLSKAppToolbarFundButton OLSKDecorPress svelte-p1utxj");
    			add_location(button, file$b, 71, 3, 2299);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			insert_dev(target, t1, anchor);
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKAppToolbarDispatchFund*/ ctx[8])) /*OLSKAppToolbarDispatchFund*/ ctx[8].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (/*OLSKAppToolbarFundLimitText*/ ctx[2] !== '') {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block_4$2(ctx);
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			if (detaching) detach_dev(t1);
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3$3.name,
    		type: "if",
    		source: "(71:2) {#if OLSKAppToolbarDispatchFund && !OLSKAppToolbarFundShowProgress }",
    		ctx
    	});

    	return block;
    }

    // (74:3) {#if OLSKAppToolbarFundLimitText !== '' }
    function create_if_block_4$2(ctx) {
    	let button;
    	let t_value = /*OLSKAppToolbarFundLimitText*/ ctx[2].toString() + "";
    	let t;

    	const block = {
    		c: function create() {
    			button = element("button");
    			t = text(t_value);
    			attr_dev(button, "class", "OLSKAppToolbarFundLimit OLSKDecorButtonNoStyle svelte-p1utxj");
    			button.disabled = true;
    			add_location(button, file$b, 75, 4, 2570);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*OLSKAppToolbarFundLimitText*/ 4 && t_value !== (t_value = /*OLSKAppToolbarFundLimitText*/ ctx[2].toString() + "")) set_data_dev(t, t_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_4$2.name,
    		type: "if",
    		source: "(74:3) {#if OLSKAppToolbarFundLimitText !== '' }",
    		ctx
    	});

    	return block;
    }

    // (80:2) {#if OLSKAppToolbarFundShowProgress }
    function create_if_block_2$5(ctx) {
    	let div;

    	const block = {
    		c: function create() {
    			div = element("div");
    			div.textContent = "…";
    			attr_dev(div, "class", "OLSKAppToolbarFundProgress svelte-p1utxj");
    			add_location(div, file$b, 80, 3, 2755);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$5.name,
    		type: "if",
    		source: "(80:2) {#if OLSKAppToolbarFundShowProgress }",
    		ctx
    	});

    	return block;
    }

    // (87:1) {#if OLSKAppToolbarDispatchCloud }
    function create_if_block_1$5(ctx) {
    	let div0;

    	let t0_value = (!/*OLSKAppToolbarCloudConnected*/ ctx[3]
    	? ''
    	: /*OLSKAppToolbarCloudError*/ ctx[5]
    		? main_1('OLSKAppToolbarCloudStatusError')
    		: /*OLSKAppToolbarCloudOffline*/ ctx[4]
    			? main_1('OLSKAppToolbarCloudStatusOffline')
    			: main_1('OLSKAppToolbarCloudStatusOnline')) + "";

    	let t0;
    	let t1;
    	let button;
    	let div1;

    	let raw_value = (/*OLSKAppToolbarCloudError*/ ctx[5]
    	? OLSKUIAssets._OLSKSharedCloudError
    	: /*OLSKAppToolbarCloudOffline*/ ctx[4]
    		? OLSKUIAssets._OLSKSharedCloudOffline
    		: OLSKUIAssets._OLSKSharedCloud) + "";

    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div0 = element("div");
    			t0 = text(t0_value);
    			t1 = space();
    			button = element("button");
    			div1 = element("div");
    			attr_dev(div0, "class", "OLSKAppToolbarCloudStatus svelte-p1utxj");
    			add_location(div0, file$b, 87, 2, 2903);
    			attr_dev(div1, "class", "OLSKAppToolbarCloudButtonImage svelte-p1utxj");
    			add_location(div1, file$b, 90, 3, 3406);
    			attr_dev(button, "class", "OLSKAppToolbarCloudButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton svelte-p1utxj");
    			attr_dev(button, "title", button_title_value = main_1('OLSKAppToolbarCloudButtonText'));
    			add_location(button, file$b, 89, 2, 3203);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div0, anchor);
    			append_dev(div0, t0);
    			insert_dev(target, t1, anchor);
    			insert_dev(target, button, anchor);
    			append_dev(button, div1);
    			div1.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKAppToolbarDispatchCloud*/ ctx[9])) /*OLSKAppToolbarDispatchCloud*/ ctx[9].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty & /*OLSKAppToolbarCloudConnected, OLSKAppToolbarCloudError, OLSKAppToolbarCloudOffline*/ 56 && t0_value !== (t0_value = (!/*OLSKAppToolbarCloudConnected*/ ctx[3]
    			? ''
    			: /*OLSKAppToolbarCloudError*/ ctx[5]
    				? main_1('OLSKAppToolbarCloudStatusError')
    				: /*OLSKAppToolbarCloudOffline*/ ctx[4]
    					? main_1('OLSKAppToolbarCloudStatusOffline')
    					: main_1('OLSKAppToolbarCloudStatusOnline')) + "")) set_data_dev(t0, t0_value);

    			if (dirty & /*OLSKAppToolbarCloudError, OLSKAppToolbarCloudOffline*/ 48 && raw_value !== (raw_value = (/*OLSKAppToolbarCloudError*/ ctx[5]
    			? OLSKUIAssets._OLSKSharedCloudError
    			: /*OLSKAppToolbarCloudOffline*/ ctx[4]
    				? OLSKUIAssets._OLSKSharedCloudOffline
    				: OLSKUIAssets._OLSKSharedCloud) + "")) div1.innerHTML = raw_value;		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div0);
    			if (detaching) detach_dev(t1);
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$5.name,
    		type: "if",
    		source: "(87:1) {#if OLSKAppToolbarDispatchCloud }",
    		ctx
    	});

    	return block;
    }

    // (95:1) {#if OLSKAppToolbarDispatchLauncher }
    function create_if_block$8(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedLauncher + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKAppToolbarLauncherButtonImage svelte-p1utxj");
    			add_location(div, file$b, 96, 3, 3902);
    			attr_dev(button, "class", "OLSKAppToolbarLauncherButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton svelte-p1utxj");
    			attr_dev(button, "title", button_title_value = main_1('OLSKAppToolbarLauncherButtonText'));
    			add_location(button, file$b, 95, 2, 3690);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKAppToolbarDispatchLauncher*/ ctx[10])) /*OLSKAppToolbarDispatchLauncher*/ ctx[10].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$8.name,
    		type: "if",
    		source: "(95:1) {#if OLSKAppToolbarDispatchLauncher }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$b(ctx) {
    	let div4;
    	let div0;
    	let current_block_type_index;
    	let if_block0;
    	let t0;
    	let t1;
    	let t2;
    	let t3;
    	let div2;
    	let div1;
    	let t4;
    	let t5;
    	let div3;
    	let t6;
    	let current;
    	let mounted;
    	let dispose;
    	const if_block_creators = [create_if_block_7$2, create_else_block$2];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*OLSKAppToolbarDispatchApropos*/ ctx[6]) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    	let if_block1 = /*OLSKAppToolbarDispatchTongue*/ ctx[7] && create_if_block_6$2(ctx);
    	let if_block2 = /*OLSKAppToolbarGuideURL*/ ctx[0] && create_if_block_5$2(ctx);
    	const default_slot_template = /*#slots*/ ctx[13].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[12], null);
    	let if_block3 = /*OLSKAppToolbarDispatchFund*/ ctx[8] && !/*OLSKAppToolbarFundShowProgress*/ ctx[1] && create_if_block_3$3(ctx);
    	let if_block4 = /*OLSKAppToolbarFundShowProgress*/ ctx[1] && create_if_block_2$5(ctx);
    	let if_block5 = /*OLSKAppToolbarDispatchCloud*/ ctx[9] && create_if_block_1$5(ctx);
    	let if_block6 = /*OLSKAppToolbarDispatchLauncher*/ ctx[10] && create_if_block$8(ctx);

    	const block = {
    		c: function create() {
    			div4 = element("div");
    			div0 = element("div");
    			if_block0.c();
    			t0 = space();
    			if (if_block1) if_block1.c();
    			t1 = space();
    			if (if_block2) if_block2.c();
    			t2 = space();
    			if (default_slot) default_slot.c();
    			t3 = space();
    			div2 = element("div");
    			div1 = element("div");
    			if (if_block3) if_block3.c();
    			t4 = space();
    			if (if_block4) if_block4.c();
    			t5 = space();
    			div3 = element("div");
    			if (if_block5) if_block5.c();
    			t6 = space();
    			if (if_block6) if_block6.c();
    			attr_dev(div0, "class", "OLSKToolbarElementGroup svelte-p1utxj");
    			add_location(div0, file$b, 46, 0, 1141);
    			attr_dev(div1, "class", "OLSKAppToolbarFund svelte-p1utxj");
    			add_location(div1, file$b, 69, 1, 2192);
    			attr_dev(div2, "class", "OLSKToolbarElementGroup svelte-p1utxj");
    			add_location(div2, file$b, 68, 0, 2153);
    			attr_dev(div3, "class", "OLSKToolbarElementGroup svelte-p1utxj");
    			add_location(div3, file$b, 85, 0, 2827);
    			attr_dev(div4, "class", "OLSKAppToolbar OLSKToolbar OLSKToolbarJustify OLSKCommonEdgeTop svelte-p1utxj");
    			add_location(div4, file$b, 44, 0, 1062);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div4, anchor);
    			append_dev(div4, div0);
    			if_blocks[current_block_type_index].m(div0, null);
    			append_dev(div0, t0);
    			if (if_block1) if_block1.m(div0, null);
    			append_dev(div0, t1);
    			if (if_block2) if_block2.m(div0, null);
    			append_dev(div0, t2);

    			if (default_slot) {
    				default_slot.m(div0, null);
    			}

    			append_dev(div4, t3);
    			append_dev(div4, div2);
    			append_dev(div2, div1);
    			if (if_block3) if_block3.m(div1, null);
    			append_dev(div1, t4);
    			if (if_block4) if_block4.m(div1, null);
    			append_dev(div4, t5);
    			append_dev(div4, div3);
    			if (if_block5) if_block5.m(div3, null);
    			append_dev(div3, t6);
    			if (if_block6) if_block6.m(div3, null);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(window, "keydown", /*mod*/ ctx[11].InterfaceWindowDidKeydown, false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block0 = if_blocks[current_block_type_index];

    				if (!if_block0) {
    					if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block0.c();
    				} else {
    					if_block0.p(ctx, dirty);
    				}

    				transition_in(if_block0, 1);
    				if_block0.m(div0, t0);
    			}

    			if (/*OLSKAppToolbarDispatchTongue*/ ctx[7]) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block_6$2(ctx);
    					if_block1.c();
    					if_block1.m(div0, t1);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}

    			if (/*OLSKAppToolbarGuideURL*/ ctx[0]) {
    				if (if_block2) {
    					if_block2.p(ctx, dirty);
    				} else {
    					if_block2 = create_if_block_5$2(ctx);
    					if_block2.c();
    					if_block2.m(div0, t2);
    				}
    			} else if (if_block2) {
    				if_block2.d(1);
    				if_block2 = null;
    			}

    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 4096)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[12],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[12])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[12], dirty, null),
    						null
    					);
    				}
    			}

    			if (/*OLSKAppToolbarDispatchFund*/ ctx[8] && !/*OLSKAppToolbarFundShowProgress*/ ctx[1]) {
    				if (if_block3) {
    					if_block3.p(ctx, dirty);
    				} else {
    					if_block3 = create_if_block_3$3(ctx);
    					if_block3.c();
    					if_block3.m(div1, t4);
    				}
    			} else if (if_block3) {
    				if_block3.d(1);
    				if_block3 = null;
    			}

    			if (/*OLSKAppToolbarFundShowProgress*/ ctx[1]) {
    				if (if_block4) ; else {
    					if_block4 = create_if_block_2$5(ctx);
    					if_block4.c();
    					if_block4.m(div1, null);
    				}
    			} else if (if_block4) {
    				if_block4.d(1);
    				if_block4 = null;
    			}

    			if (/*OLSKAppToolbarDispatchCloud*/ ctx[9]) {
    				if (if_block5) {
    					if_block5.p(ctx, dirty);
    				} else {
    					if_block5 = create_if_block_1$5(ctx);
    					if_block5.c();
    					if_block5.m(div3, t6);
    				}
    			} else if (if_block5) {
    				if_block5.d(1);
    				if_block5 = null;
    			}

    			if (/*OLSKAppToolbarDispatchLauncher*/ ctx[10]) {
    				if (if_block6) {
    					if_block6.p(ctx, dirty);
    				} else {
    					if_block6 = create_if_block$8(ctx);
    					if_block6.c();
    					if_block6.m(div3, null);
    				}
    			} else if (if_block6) {
    				if_block6.d(1);
    				if_block6 = null;
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block0);
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block0);
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div4);
    			if_blocks[current_block_type_index].d();
    			if (if_block1) if_block1.d();
    			if (if_block2) if_block2.d();
    			if (default_slot) default_slot.d(detaching);
    			if (if_block3) if_block3.d();
    			if (if_block4) if_block4.d();
    			if (if_block5) if_block5.d();
    			if (if_block6) if_block6.d();
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$b.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$b($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, ['default']);
    	let { OLSKAppToolbarGuideURL = '' } = $$props;
    	let { OLSKAppToolbarFundShowProgress = false } = $$props;
    	let { OLSKAppToolbarFundLimitText = '' } = $$props;
    	let { OLSKAppToolbarCloudConnected = false } = $$props;
    	let { OLSKAppToolbarCloudOffline = false } = $$props;
    	let { OLSKAppToolbarCloudError = false } = $$props;
    	let { OLSKAppToolbarDispatchApropos = null } = $$props;
    	let { OLSKAppToolbarDispatchTongue = null } = $$props;
    	let { OLSKAppToolbarDispatchFund = null } = $$props;
    	let { OLSKAppToolbarDispatchCloud = null } = $$props;
    	let { OLSKAppToolbarDispatchLauncher = null } = $$props;

    	const mod = {
    		// INTERFACE
    		InterfaceWindowDidKeydown(event) {
    			const handlerFunctions = {
    				Space() {
    					if (!event.altKey) {
    						return;
    					}

    					OLSKAppToolbarDispatchLauncher();
    					return event.preventDefault();
    				}
    			};

    			handlerFunctions[event.code] && handlerFunctions[event.code]();
    		}
    	};

    	const writable_props = [
    		'OLSKAppToolbarGuideURL',
    		'OLSKAppToolbarFundShowProgress',
    		'OLSKAppToolbarFundLimitText',
    		'OLSKAppToolbarCloudConnected',
    		'OLSKAppToolbarCloudOffline',
    		'OLSKAppToolbarCloudError',
    		'OLSKAppToolbarDispatchApropos',
    		'OLSKAppToolbarDispatchTongue',
    		'OLSKAppToolbarDispatchFund',
    		'OLSKAppToolbarDispatchCloud',
    		'OLSKAppToolbarDispatchLauncher'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('OLSKAppToolbarGuideURL' in $$props) $$invalidate(0, OLSKAppToolbarGuideURL = $$props.OLSKAppToolbarGuideURL);
    		if ('OLSKAppToolbarFundShowProgress' in $$props) $$invalidate(1, OLSKAppToolbarFundShowProgress = $$props.OLSKAppToolbarFundShowProgress);
    		if ('OLSKAppToolbarFundLimitText' in $$props) $$invalidate(2, OLSKAppToolbarFundLimitText = $$props.OLSKAppToolbarFundLimitText);
    		if ('OLSKAppToolbarCloudConnected' in $$props) $$invalidate(3, OLSKAppToolbarCloudConnected = $$props.OLSKAppToolbarCloudConnected);
    		if ('OLSKAppToolbarCloudOffline' in $$props) $$invalidate(4, OLSKAppToolbarCloudOffline = $$props.OLSKAppToolbarCloudOffline);
    		if ('OLSKAppToolbarCloudError' in $$props) $$invalidate(5, OLSKAppToolbarCloudError = $$props.OLSKAppToolbarCloudError);
    		if ('OLSKAppToolbarDispatchApropos' in $$props) $$invalidate(6, OLSKAppToolbarDispatchApropos = $$props.OLSKAppToolbarDispatchApropos);
    		if ('OLSKAppToolbarDispatchTongue' in $$props) $$invalidate(7, OLSKAppToolbarDispatchTongue = $$props.OLSKAppToolbarDispatchTongue);
    		if ('OLSKAppToolbarDispatchFund' in $$props) $$invalidate(8, OLSKAppToolbarDispatchFund = $$props.OLSKAppToolbarDispatchFund);
    		if ('OLSKAppToolbarDispatchCloud' in $$props) $$invalidate(9, OLSKAppToolbarDispatchCloud = $$props.OLSKAppToolbarDispatchCloud);
    		if ('OLSKAppToolbarDispatchLauncher' in $$props) $$invalidate(10, OLSKAppToolbarDispatchLauncher = $$props.OLSKAppToolbarDispatchLauncher);
    		if ('$$scope' in $$props) $$invalidate(12, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		OLSKAppToolbarGuideURL,
    		OLSKAppToolbarFundShowProgress,
    		OLSKAppToolbarFundLimitText,
    		OLSKAppToolbarCloudConnected,
    		OLSKAppToolbarCloudOffline,
    		OLSKAppToolbarCloudError,
    		OLSKAppToolbarDispatchApropos,
    		OLSKAppToolbarDispatchTongue,
    		OLSKAppToolbarDispatchFund,
    		OLSKAppToolbarDispatchCloud,
    		OLSKAppToolbarDispatchLauncher,
    		OLSKLocalized: main_1,
    		mod,
    		OLSKReloadButton: Main$9,
    		OLSKUIAssets
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKAppToolbarGuideURL' in $$props) $$invalidate(0, OLSKAppToolbarGuideURL = $$props.OLSKAppToolbarGuideURL);
    		if ('OLSKAppToolbarFundShowProgress' in $$props) $$invalidate(1, OLSKAppToolbarFundShowProgress = $$props.OLSKAppToolbarFundShowProgress);
    		if ('OLSKAppToolbarFundLimitText' in $$props) $$invalidate(2, OLSKAppToolbarFundLimitText = $$props.OLSKAppToolbarFundLimitText);
    		if ('OLSKAppToolbarCloudConnected' in $$props) $$invalidate(3, OLSKAppToolbarCloudConnected = $$props.OLSKAppToolbarCloudConnected);
    		if ('OLSKAppToolbarCloudOffline' in $$props) $$invalidate(4, OLSKAppToolbarCloudOffline = $$props.OLSKAppToolbarCloudOffline);
    		if ('OLSKAppToolbarCloudError' in $$props) $$invalidate(5, OLSKAppToolbarCloudError = $$props.OLSKAppToolbarCloudError);
    		if ('OLSKAppToolbarDispatchApropos' in $$props) $$invalidate(6, OLSKAppToolbarDispatchApropos = $$props.OLSKAppToolbarDispatchApropos);
    		if ('OLSKAppToolbarDispatchTongue' in $$props) $$invalidate(7, OLSKAppToolbarDispatchTongue = $$props.OLSKAppToolbarDispatchTongue);
    		if ('OLSKAppToolbarDispatchFund' in $$props) $$invalidate(8, OLSKAppToolbarDispatchFund = $$props.OLSKAppToolbarDispatchFund);
    		if ('OLSKAppToolbarDispatchCloud' in $$props) $$invalidate(9, OLSKAppToolbarDispatchCloud = $$props.OLSKAppToolbarDispatchCloud);
    		if ('OLSKAppToolbarDispatchLauncher' in $$props) $$invalidate(10, OLSKAppToolbarDispatchLauncher = $$props.OLSKAppToolbarDispatchLauncher);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		OLSKAppToolbarGuideURL,
    		OLSKAppToolbarFundShowProgress,
    		OLSKAppToolbarFundLimitText,
    		OLSKAppToolbarCloudConnected,
    		OLSKAppToolbarCloudOffline,
    		OLSKAppToolbarCloudError,
    		OLSKAppToolbarDispatchApropos,
    		OLSKAppToolbarDispatchTongue,
    		OLSKAppToolbarDispatchFund,
    		OLSKAppToolbarDispatchCloud,
    		OLSKAppToolbarDispatchLauncher,
    		mod,
    		$$scope,
    		slots
    	];
    }

    class Main$a extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$b, create_fragment$b, safe_not_equal, {
    			OLSKAppToolbarGuideURL: 0,
    			OLSKAppToolbarFundShowProgress: 1,
    			OLSKAppToolbarFundLimitText: 2,
    			OLSKAppToolbarCloudConnected: 3,
    			OLSKAppToolbarCloudOffline: 4,
    			OLSKAppToolbarCloudError: 5,
    			OLSKAppToolbarDispatchApropos: 6,
    			OLSKAppToolbarDispatchTongue: 7,
    			OLSKAppToolbarDispatchFund: 8,
    			OLSKAppToolbarDispatchCloud: 9,
    			OLSKAppToolbarDispatchLauncher: 10
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$b.name
    		});
    	}

    	get OLSKAppToolbarGuideURL() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarGuideURL(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarFundShowProgress() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarFundShowProgress(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarFundLimitText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarFundLimitText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarCloudConnected() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarCloudConnected(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarCloudOffline() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarCloudOffline(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarCloudError() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarCloudError(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarDispatchApropos() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarDispatchApropos(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarDispatchTongue() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarDispatchTongue(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarDispatchFund() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarDispatchFund(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarDispatchCloud() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarDispatchCloud(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAppToolbarDispatchLauncher() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAppToolbarDispatchLauncher(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKServiceWorker/main.svelte generated by Svelte v3.54.0 */

    const { console: console_1 } = globals;
    const file$c = "node_modules/OLSKServiceWorker/main.svelte";

    // (104:0) {#if mod._ValueUpdateAlertIsVisible }
    function create_if_block$9(ctx) {
    	let div;
    	let span;
    	let t1;
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div = element("div");
    			span = element("span");
    			span.textContent = `${main_1('OLSKServiceWorkerUpdateAlertLabelText')}`;
    			t1 = space();
    			button = element("button");
    			button.textContent = `${main_1('OLSKServiceWorkerUpdateAlertReloadButtonText')}`;
    			attr_dev(span, "class", "OLSKServiceWorkerUpdateAlertLabel svelte-o3rgu5");
    			add_location(span, file$c, 105, 1, 2509);
    			attr_dev(button, "class", "OLSKServiceWorkerUpdateAlertReloadButton OLSKDecorPress OLSKDecorPressCall svelte-o3rgu5");
    			add_location(button, file$c, 106, 1, 2624);
    			attr_dev(div, "class", "OLSKServiceWorkerUpdateAlert svelte-o3rgu5");
    			add_location(div, file$c, 104, 0, 2407);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, span);
    			append_dev(div, t1);
    			append_dev(div, button);

    			if (!mounted) {
    				dispose = [
    					listen_dev(
    						button,
    						"click",
    						function () {
    							if (is_function(/*mod*/ ctx[0].InterfaceReloadButtonDidClick)) /*mod*/ ctx[0].InterfaceReloadButtonDidClick.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					),
    					listen_dev(div, "click", /*click_handler*/ ctx[5], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$9.name,
    		type: "if",
    		source: "(104:0) {#if mod._ValueUpdateAlertIsVisible }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$c(ctx) {
    	let if_block_anchor;
    	let if_block = /*mod*/ ctx[0]._ValueUpdateAlertIsVisible && create_if_block$9(ctx);

    	const block = {
    		c: function create() {
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*mod*/ ctx[0]._ValueUpdateAlertIsVisible) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$9(ctx);
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$c.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$c($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKServiceWorkerRegistrationRoute } = $$props;
    	let { DebugFakeUpdateAlertVisible = false } = $$props;
    	let { DebugEnableLogging = true } = $$props;
    	let { DebugAllowLocalhost = false } = $$props;

    	const mod = {
    		// VALUE
    		_ValueRegistration: undefined,
    		_ValueNextWorker: undefined,
    		_ValueUpdateAlertIsVisible: DebugFakeUpdateAlertVisible,
    		// INTERFACE
    		InterfaceReloadButtonDidClick() {
    			mod.ControlSkipWaiting();
    		},
    		// CONTROL
    		ControlSkipWaiting() {
    			mod._ValueNextWorker.postMessage('OLSKServiceWorker_SkipWaiting');
    		},
    		// MESSAGE
    		MessageUpdateFound(event) {
    			DebugEnableLogging && console.log('updatefound', event);
    			$$invalidate(0, mod._ValueNextWorker = mod._ValueRegistration.installing, mod);
    			mod._ValueNextWorker.addEventListener('statechange', mod.MessageNextWorkerStateChange);
    		},
    		MessageNextWorkerStateChange(event) {
    			DebugEnableLogging && console.log('statechange', mod._ValueNextWorker.state, event, navigator.serviceWorker.controller);

    			if (mod._ValueNextWorker.state !== 'installed') {
    				return;
    			}

    			if (!navigator.serviceWorker.controller) {
    				return;
    			}

    			$$invalidate(0, mod._ValueUpdateAlertIsVisible = true, mod);
    		},
    		MessageControllerChange(event) {
    			DebugEnableLogging && console.log('controllerchange', event);
    			window.location.reload();
    		},
    		// SETUP
    		async SetupEverything() {
    			if (!navigator.serviceWorker) {
    				return DebugEnableLogging && console.info('Service worker not available');
    			}

    			if (!OLSKServiceWorkerRegistrationRoute) {
    				return DebugEnableLogging && console.info('Missing registration route');
    			}

    			if (document.location.hostname === 'localhost' && !DebugAllowLocalhost) {
    				return DebugEnableLogging && console.info('OLSKServiceWorker: Skipping on localhost');
    			}
    			await mod.SetupRegistration();
    			mod.SetupControllerChange();
    		},
    		async SetupRegistration() {
    			$$invalidate(0, mod._ValueRegistration = await navigator.serviceWorker.register(OLSKServiceWorkerRegistrationRoute), mod);
    			DebugEnableLogging && console.info('Service Worker Registered');
    			mod._ValueRegistration.addEventListener('updatefound', mod.MessageUpdateFound);
    		},
    		SetupControllerChange() {
    			navigator.serviceWorker.addEventListener('controllerchange', mod.MessageControllerChange);
    		},
    		// LIFECYCLE
    		LifecycleModuleDidMount() {
    			mod.SetupEverything();
    		}
    	};

    	mod.LifecycleModuleDidMount();

    	$$self.$$.on_mount.push(function () {
    		if (OLSKServiceWorkerRegistrationRoute === undefined && !('OLSKServiceWorkerRegistrationRoute' in $$props || $$self.$$.bound[$$self.$$.props['OLSKServiceWorkerRegistrationRoute']])) {
    			console_1.warn("<Main> was created without expected prop 'OLSKServiceWorkerRegistrationRoute'");
    		}
    	});

    	const writable_props = [
    		'OLSKServiceWorkerRegistrationRoute',
    		'DebugFakeUpdateAlertVisible',
    		'DebugEnableLogging',
    		'DebugAllowLocalhost'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console_1.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	const click_handler = () => $$invalidate(0, mod._ValueUpdateAlertIsVisible = false, mod);

    	$$self.$$set = $$props => {
    		if ('OLSKServiceWorkerRegistrationRoute' in $$props) $$invalidate(1, OLSKServiceWorkerRegistrationRoute = $$props.OLSKServiceWorkerRegistrationRoute);
    		if ('DebugFakeUpdateAlertVisible' in $$props) $$invalidate(2, DebugFakeUpdateAlertVisible = $$props.DebugFakeUpdateAlertVisible);
    		if ('DebugEnableLogging' in $$props) $$invalidate(3, DebugEnableLogging = $$props.DebugEnableLogging);
    		if ('DebugAllowLocalhost' in $$props) $$invalidate(4, DebugAllowLocalhost = $$props.DebugAllowLocalhost);
    	};

    	$$self.$capture_state = () => ({
    		OLSKServiceWorkerRegistrationRoute,
    		DebugFakeUpdateAlertVisible,
    		DebugEnableLogging,
    		DebugAllowLocalhost,
    		OLSKLocalized: main_1,
    		mod
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKServiceWorkerRegistrationRoute' in $$props) $$invalidate(1, OLSKServiceWorkerRegistrationRoute = $$props.OLSKServiceWorkerRegistrationRoute);
    		if ('DebugFakeUpdateAlertVisible' in $$props) $$invalidate(2, DebugFakeUpdateAlertVisible = $$props.DebugFakeUpdateAlertVisible);
    		if ('DebugEnableLogging' in $$props) $$invalidate(3, DebugEnableLogging = $$props.DebugEnableLogging);
    		if ('DebugAllowLocalhost' in $$props) $$invalidate(4, DebugAllowLocalhost = $$props.DebugAllowLocalhost);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		mod,
    		OLSKServiceWorkerRegistrationRoute,
    		DebugFakeUpdateAlertVisible,
    		DebugEnableLogging,
    		DebugAllowLocalhost,
    		click_handler
    	];
    }

    class Main$b extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$c, create_fragment$c, safe_not_equal, {
    			OLSKServiceWorkerRegistrationRoute: 1,
    			DebugFakeUpdateAlertVisible: 2,
    			DebugEnableLogging: 3,
    			DebugAllowLocalhost: 4
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$c.name
    		});
    	}

    	get OLSKServiceWorkerRegistrationRoute() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKServiceWorkerRegistrationRoute(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get DebugFakeUpdateAlertVisible() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set DebugFakeUpdateAlertVisible(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get DebugEnableLogging() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set DebugEnableLogging(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get DebugAllowLocalhost() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set DebugAllowLocalhost(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var uiLogic = createCommonjsModule(function (module, exports) {
    const mod = {

    	OLSKInstallDismissPreferenceKey () {
    		return 'OLSK_INSTALL_DID_DISMISS';
    	},

    	OLSKInstallSetup (params) {
    		if (typeof params !== 'object' || params === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if (typeof params.ParamMod !== 'object' || params.ParamMod === null) {
    			throw new Error('OLSKErrorInputNotValid');
    		}

    		if ((params.window || window).innerWidth > 760) {
    			return;
    		}

    		if (!(params.window || window).navigator) {
    			return;
    		}

    		if ((params.window || window).navigator.standalone) {
    			return;
    		}

    		if ((params.window || window).localStorage.getItem(mod.OLSKInstallDismissPreferenceKey())) {
    			return;
    		}

    		params.ParamMod._ValueOLSKInstallAlertVisible = true;
    	},
    	
    };

    Object.assign(exports, mod);
    });

    /* node_modules/OLSKInstall/main.svelte generated by Svelte v3.54.0 */
    const file$d = "node_modules/OLSKInstall/main.svelte";

    // (46:0) {#if mod._ValueOLSKInstallAlertVisible }
    function create_if_block$a(ctx) {
    	let div3;
    	let div1;
    	let button;
    	let div0;
    	let raw0_value = OLSKUIAssets._OLSKSharedDismiss + "";
    	let button_title_value;
    	let t0;
    	let div2;
    	let strong;
    	let t2;
    	let span;
    	let raw1_value = main_1$2(main_1('OLSKInstallAlertBlurbHTMLFormat'), OLSKUIAssets._OLSKSharediOSShare, OLSKUIAssets._OLSKSharediOSA2HS) + "";
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div3 = element("div");
    			div1 = element("div");
    			button = element("button");
    			div0 = element("div");
    			t0 = space();
    			div2 = element("div");
    			strong = element("strong");
    			strong.textContent = `${main_1('OLSKInstallAlertHeadingText')}`;
    			t2 = space();
    			span = element("span");
    			attr_dev(div0, "class", "OLSKInstallAlertDismissButtonImage svelte-1fnd8qa");
    			add_location(div0, file$d, 50, 2, 1067);
    			attr_dev(button, "class", "OLSKInstallAlertDismissButton OLSKDecorButtonNoStyle OLSKDecorTappable svelte-1fnd8qa");
    			attr_dev(button, "title", button_title_value = main_1('OLSKInstallAlertDismissButtonText'));
    			add_location(button, file$d, 49, 1, 868);
    			attr_dev(div1, "class", "OLSKInstallAlertDismiss svelte-1fnd8qa");
    			add_location(div1, file$d, 48, 0, 829);
    			attr_dev(strong, "class", "OLSKInstallAlertHeading");
    			add_location(strong, file$d, 55, 1, 1217);
    			attr_dev(span, "class", "OLSKInstallAlertBlurb svelte-1fnd8qa");
    			add_location(span, file$d, 56, 1, 1316);
    			attr_dev(div2, "class", "OLSKInstallAlertMain");
    			add_location(div2, file$d, 54, 0, 1181);
    			attr_dev(div3, "class", "OLSKInstallAlert svelte-1fnd8qa");
    			add_location(div3, file$d, 46, 0, 797);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div3, anchor);
    			append_dev(div3, div1);
    			append_dev(div1, button);
    			append_dev(button, div0);
    			div0.innerHTML = raw0_value;
    			append_dev(div3, t0);
    			append_dev(div3, div2);
    			append_dev(div2, strong);
    			append_dev(div2, t2);
    			append_dev(div2, span);
    			span.innerHTML = raw1_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*mod*/ ctx[0].InterfaceDismissButtonDidClick)) /*mod*/ ctx[0].InterfaceDismissButtonDidClick.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div3);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$a.name,
    		type: "if",
    		source: "(46:0) {#if mod._ValueOLSKInstallAlertVisible }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$d(ctx) {
    	let div;
    	let if_block = /*mod*/ ctx[0]._ValueOLSKInstallAlertVisible && create_if_block$a(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "class", "OLSKInstall");
    			add_location(div, file$d, 43, 0, 729);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*mod*/ ctx[0]._ValueOLSKInstallAlertVisible) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block$a(ctx);
    					if_block.c();
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$d.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$d($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { DebugFakeAlertVisible = false } = $$props;

    	const mod = {
    		// VALUE
    		_ValueOLSKInstallAlertVisible: DebugFakeAlertVisible,
    		// INTERFACE
    		InterfaceDismissButtonDidClick() {
    			mod.ControlDismiss();
    		},
    		// CONTROL
    		ControlDismiss() {
    			window.localStorage.setItem(uiLogic.OLSKInstallDismissPreferenceKey(), true);
    			$$invalidate(0, mod._ValueOLSKInstallAlertVisible = false, mod);
    		},
    		// LIFECYCLE
    		LifecycleModuleDidLoad() {
    			uiLogic.OLSKInstallSetup({ ParamMod: mod });
    		}
    	};

    	mod.LifecycleModuleDidLoad();
    	const writable_props = ['DebugFakeAlertVisible'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('DebugFakeAlertVisible' in $$props) $$invalidate(1, DebugFakeAlertVisible = $$props.DebugFakeAlertVisible);
    	};

    	$$self.$capture_state = () => ({
    		DebugFakeAlertVisible,
    		OLSKLocalized: main_1,
    		OLSKFormatted: main_1$2,
    		OLSKInstallLogic: uiLogic,
    		mod,
    		OLSKUIAssets
    	});

    	$$self.$inject_state = $$props => {
    		if ('DebugFakeAlertVisible' in $$props) $$invalidate(1, DebugFakeAlertVisible = $$props.DebugFakeAlertVisible);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [mod, DebugFakeAlertVisible];
    }

    class Main$c extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$d, create_fragment$d, safe_not_equal, { DebugFakeAlertVisible: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$d.name
    		});
    	}

    	get DebugFakeAlertVisible() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set DebugFakeAlertVisible(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKCloud/submodules/OLSKCloudForm/main.svelte generated by Svelte v3.54.0 */
    const file$e = "node_modules/OLSKCloud/submodules/OLSKCloudForm/main.svelte";

    function create_fragment$e(ctx) {
    	let form;
    	let input;
    	let t0;
    	let button;
    	let t1_value = main_1('OLSKCloudFormConnectButtonText') + "";
    	let t1;
    	let button_disabled_value;
    	let t2;
    	let a;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			form = element("form");
    			input = element("input");
    			t0 = space();
    			button = element("button");
    			t1 = text(t1_value);
    			t2 = space();
    			a = element("a");
    			a.textContent = `${main_1('OLSKCloudFormRegisterLinkText')}`;
    			attr_dev(input, "class", "OLSKCloudFormAddressField OLSKDecorInput svelte-1907px6");
    			attr_dev(input, "type", "email");
    			input.autofocus = true;
    			input.required = true;
    			attr_dev(input, "placeholder", "example@5apps.com");
    			add_location(input, file$e, 24, 0, 376);
    			attr_dev(button, "class", "OLSKCloudFormConnectButton svelte-1907px6");
    			button.disabled = button_disabled_value = /*mod*/ ctx[0]._ValueAddress.length ? null : true;
    			add_location(button, file$e, 26, 0, 533);
    			attr_dev(a, "class", "OLSKCloudFormRegisterLink svelte-1907px6");
    			attr_dev(a, "href", "https://5apps.com/users/sign_up?site=storage");
    			attr_dev(a, "target", "_blank");
    			add_location(a, file$e, 28, 0, 730);
    			attr_dev(form, "class", "OLSKCloudForm OLSKDecor svelte-1907px6");
    			add_location(form, file$e, 22, 0, 294);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, form, anchor);
    			append_dev(form, input);
    			set_input_value(input, /*mod*/ ctx[0]._ValueAddress);
    			append_dev(form, t0);
    			append_dev(form, button);
    			append_dev(button, t1);
    			append_dev(form, t2);
    			append_dev(form, a);
    			input.focus();

    			if (!mounted) {
    				dispose = [
    					listen_dev(input, "input", /*input_input_handler*/ ctx[2]),
    					listen_dev(
    						button,
    						"click",
    						function () {
    							if (is_function(/*mod*/ ctx[0].InterfaceFormDidSubmit)) /*mod*/ ctx[0].InterfaceFormDidSubmit.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					),
    					listen_dev(
    						form,
    						"submit",
    						function () {
    							if (is_function(/*mod*/ ctx[0].InterfaceFormDidSubmit)) /*mod*/ ctx[0].InterfaceFormDidSubmit.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, [dirty]) {
    			ctx = new_ctx;

    			if (dirty & /*mod*/ 1 && input.value !== /*mod*/ ctx[0]._ValueAddress) {
    				set_input_value(input, /*mod*/ ctx[0]._ValueAddress);
    			}

    			if (dirty & /*mod*/ 1 && button_disabled_value !== (button_disabled_value = /*mod*/ ctx[0]._ValueAddress.length ? null : true)) {
    				prop_dev(button, "disabled", button_disabled_value);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(form);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$e.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$e($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKCloudFormDispatchSubmit } = $$props;

    	const mod = {
    		// VALUE
    		_ValueAddress: '',
    		// INTERFACE
    		InterfaceFormDidSubmit(event) {
    			event.preventDefault();
    			OLSKCloudFormDispatchSubmit(mod._ValueAddress);
    		}
    	};

    	$$self.$$.on_mount.push(function () {
    		if (OLSKCloudFormDispatchSubmit === undefined && !('OLSKCloudFormDispatchSubmit' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudFormDispatchSubmit']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudFormDispatchSubmit'");
    		}
    	});

    	const writable_props = ['OLSKCloudFormDispatchSubmit'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function input_input_handler() {
    		mod._ValueAddress = this.value;
    		$$invalidate(0, mod);
    	}

    	$$self.$$set = $$props => {
    		if ('OLSKCloudFormDispatchSubmit' in $$props) $$invalidate(1, OLSKCloudFormDispatchSubmit = $$props.OLSKCloudFormDispatchSubmit);
    	};

    	$$self.$capture_state = () => ({
    		OLSKCloudFormDispatchSubmit,
    		OLSKLocalized: main_1,
    		mod
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKCloudFormDispatchSubmit' in $$props) $$invalidate(1, OLSKCloudFormDispatchSubmit = $$props.OLSKCloudFormDispatchSubmit);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [mod, OLSKCloudFormDispatchSubmit, input_input_handler];
    }

    class Main$d extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$e, create_fragment$e, safe_not_equal, { OLSKCloudFormDispatchSubmit: 1 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$e.name
    		});
    	}

    	get OLSKCloudFormDispatchSubmit() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudFormDispatchSubmit(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKCloud/submodules/OLSKCloudStatus/main.svelte generated by Svelte v3.54.0 */
    const file$f = "node_modules/OLSKCloud/submodules/OLSKCloudStatus/main.svelte";

    // (17:0) {#if !OLSKCloudStatusIsSyncing }
    function create_if_block_1$6(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedSyncStart + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKCloudStatusSyncStartButtonImage");
    			add_location(div, file$f, 18, 2, 690);
    			attr_dev(button, "class", "OLSKCloudStatusSyncStartButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('OLSKCloudStatusSyncStartButtonText'));
    			add_location(button, file$f, 17, 1, 473);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKCloudStatusDispatchSyncStart*/ ctx[2])) /*OLSKCloudStatusDispatchSyncStart*/ ctx[2].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$6.name,
    		type: "if",
    		source: "(17:0) {#if !OLSKCloudStatusIsSyncing }",
    		ctx
    	});

    	return block;
    }

    // (23:0) {#if OLSKCloudStatusIsSyncing }
    function create_if_block$b(ctx) {
    	let button;
    	let div;
    	let raw_value = OLSKUIAssets._OLSKSharedSyncStop + "";
    	let button_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			div = element("div");
    			attr_dev(div, "class", "OLSKCloudStatusSyncStopButtonImage");
    			add_location(div, file$f, 24, 2, 1053);
    			attr_dev(button, "class", "OLSKCloudStatusSyncStopButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('OLSKCloudStatusSyncStopButtonText'));
    			add_location(button, file$f, 23, 1, 839);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);
    			append_dev(button, div);
    			div.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKCloudStatusDispatchSyncStop*/ ctx[3])) /*OLSKCloudStatusDispatchSyncStop*/ ctx[3].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$b.name,
    		type: "if",
    		source: "(23:0) {#if OLSKCloudStatusIsSyncing }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$f(ctx) {
    	let div1;
    	let strong;
    	let t0;
    	let t1;
    	let t2;
    	let t3;
    	let button;
    	let div0;
    	let raw_value = OLSKUIAssets._OLSKSharedStorageDisconnect + "";
    	let button_title_value;
    	let mounted;
    	let dispose;
    	let if_block0 = !/*OLSKCloudStatusIsSyncing*/ ctx[1] && create_if_block_1$6(ctx);
    	let if_block1 = /*OLSKCloudStatusIsSyncing*/ ctx[1] && create_if_block$b(ctx);

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			strong = element("strong");
    			t0 = text(/*OLSKCloudStatusIdentityText*/ ctx[0]);
    			t1 = space();
    			if (if_block0) if_block0.c();
    			t2 = space();
    			if (if_block1) if_block1.c();
    			t3 = space();
    			button = element("button");
    			div0 = element("div");
    			attr_dev(strong, "class", "OLSKCloudStatusIdentity");
    			add_location(strong, file$f, 14, 0, 357);
    			attr_dev(div0, "class", "OLSKCloudStatusDisconnectButtonImage");
    			add_location(div0, file$f, 29, 1, 1467);
    			attr_dev(button, "class", "OLSKCloudStatusDisconnectButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button, "title", button_title_value = main_1('OLSKCloudStatusDisconnectButtonText'));
    			add_location(button, file$f, 28, 0, 1167);
    			attr_dev(div1, "class", "OLSKCloudStatus svelte-10ewvcb");
    			add_location(div1, file$f, 12, 0, 326);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, strong);
    			append_dev(strong, t0);
    			append_dev(div1, t1);
    			if (if_block0) if_block0.m(div1, null);
    			append_dev(div1, t2);
    			if (if_block1) if_block1.m(div1, null);
    			append_dev(div1, t3);
    			append_dev(div1, button);
    			append_dev(button, div0);
    			div0.innerHTML = raw_value;

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*click_handler*/ ctx[5], false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*OLSKCloudStatusIdentityText*/ 1) set_data_dev(t0, /*OLSKCloudStatusIdentityText*/ ctx[0]);

    			if (!/*OLSKCloudStatusIsSyncing*/ ctx[1]) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);
    				} else {
    					if_block0 = create_if_block_1$6(ctx);
    					if_block0.c();
    					if_block0.m(div1, t2);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (/*OLSKCloudStatusIsSyncing*/ ctx[1]) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block$b(ctx);
    					if_block1.c();
    					if_block1.m(div1, t3);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$f.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$f($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKCloudStatusIdentityText } = $$props;
    	let { OLSKCloudStatusIsSyncing } = $$props;
    	let { OLSKCloudStatusDispatchSyncStart } = $$props;
    	let { OLSKCloudStatusDispatchSyncStop } = $$props;
    	let { OLSKCloudStatusDispatchDisconnect } = $$props;

    	$$self.$$.on_mount.push(function () {
    		if (OLSKCloudStatusIdentityText === undefined && !('OLSKCloudStatusIdentityText' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudStatusIdentityText']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudStatusIdentityText'");
    		}

    		if (OLSKCloudStatusIsSyncing === undefined && !('OLSKCloudStatusIsSyncing' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudStatusIsSyncing']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudStatusIsSyncing'");
    		}

    		if (OLSKCloudStatusDispatchSyncStart === undefined && !('OLSKCloudStatusDispatchSyncStart' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudStatusDispatchSyncStart']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudStatusDispatchSyncStart'");
    		}

    		if (OLSKCloudStatusDispatchSyncStop === undefined && !('OLSKCloudStatusDispatchSyncStop' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudStatusDispatchSyncStop']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudStatusDispatchSyncStop'");
    		}

    		if (OLSKCloudStatusDispatchDisconnect === undefined && !('OLSKCloudStatusDispatchDisconnect' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudStatusDispatchDisconnect']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudStatusDispatchDisconnect'");
    		}
    	});

    	const writable_props = [
    		'OLSKCloudStatusIdentityText',
    		'OLSKCloudStatusIsSyncing',
    		'OLSKCloudStatusDispatchSyncStart',
    		'OLSKCloudStatusDispatchSyncStop',
    		'OLSKCloudStatusDispatchDisconnect'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	const click_handler = () => window.confirm(main_1('OLSKCloudStatusDisconnectConfirmText')) && OLSKCloudStatusDispatchDisconnect();

    	$$self.$$set = $$props => {
    		if ('OLSKCloudStatusIdentityText' in $$props) $$invalidate(0, OLSKCloudStatusIdentityText = $$props.OLSKCloudStatusIdentityText);
    		if ('OLSKCloudStatusIsSyncing' in $$props) $$invalidate(1, OLSKCloudStatusIsSyncing = $$props.OLSKCloudStatusIsSyncing);
    		if ('OLSKCloudStatusDispatchSyncStart' in $$props) $$invalidate(2, OLSKCloudStatusDispatchSyncStart = $$props.OLSKCloudStatusDispatchSyncStart);
    		if ('OLSKCloudStatusDispatchSyncStop' in $$props) $$invalidate(3, OLSKCloudStatusDispatchSyncStop = $$props.OLSKCloudStatusDispatchSyncStop);
    		if ('OLSKCloudStatusDispatchDisconnect' in $$props) $$invalidate(4, OLSKCloudStatusDispatchDisconnect = $$props.OLSKCloudStatusDispatchDisconnect);
    	};

    	$$self.$capture_state = () => ({
    		OLSKCloudStatusIdentityText,
    		OLSKCloudStatusIsSyncing,
    		OLSKCloudStatusDispatchSyncStart,
    		OLSKCloudStatusDispatchSyncStop,
    		OLSKCloudStatusDispatchDisconnect,
    		OLSKLocalized: main_1,
    		OLSKUIAssets
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKCloudStatusIdentityText' in $$props) $$invalidate(0, OLSKCloudStatusIdentityText = $$props.OLSKCloudStatusIdentityText);
    		if ('OLSKCloudStatusIsSyncing' in $$props) $$invalidate(1, OLSKCloudStatusIsSyncing = $$props.OLSKCloudStatusIsSyncing);
    		if ('OLSKCloudStatusDispatchSyncStart' in $$props) $$invalidate(2, OLSKCloudStatusDispatchSyncStart = $$props.OLSKCloudStatusDispatchSyncStart);
    		if ('OLSKCloudStatusDispatchSyncStop' in $$props) $$invalidate(3, OLSKCloudStatusDispatchSyncStop = $$props.OLSKCloudStatusDispatchSyncStop);
    		if ('OLSKCloudStatusDispatchDisconnect' in $$props) $$invalidate(4, OLSKCloudStatusDispatchDisconnect = $$props.OLSKCloudStatusDispatchDisconnect);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		OLSKCloudStatusIdentityText,
    		OLSKCloudStatusIsSyncing,
    		OLSKCloudStatusDispatchSyncStart,
    		OLSKCloudStatusDispatchSyncStop,
    		OLSKCloudStatusDispatchDisconnect,
    		click_handler
    	];
    }

    class Main$e extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$f, create_fragment$f, safe_not_equal, {
    			OLSKCloudStatusIdentityText: 0,
    			OLSKCloudStatusIsSyncing: 1,
    			OLSKCloudStatusDispatchSyncStart: 2,
    			OLSKCloudStatusDispatchSyncStop: 3,
    			OLSKCloudStatusDispatchDisconnect: 4
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$f.name
    		});
    	}

    	get OLSKCloudStatusIdentityText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudStatusIdentityText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCloudStatusIsSyncing() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudStatusIsSyncing(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCloudStatusDispatchSyncStart() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudStatusDispatchSyncStart(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCloudStatusDispatchSyncStop() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudStatusDispatchSyncStop(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCloudStatusDispatchDisconnect() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudStatusDispatchDisconnect(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKCloud/main.svelte generated by Svelte v3.54.0 */
    const file$g = "node_modules/OLSKCloud/main.svelte";

    // (13:0) {#if $$props.OLSKCloudErrorText }
    function create_if_block_2$6(ctx) {
    	let p;
    	let t0;
    	let t1;
    	let show_if = /*OLSKCloudErrorText*/ ctx[0].match('Unauthorized');
    	let if_block_anchor;
    	let if_block = show_if && create_if_block_3$4(ctx);

    	const block = {
    		c: function create() {
    			p = element("p");
    			t0 = text(/*OLSKCloudErrorText*/ ctx[0]);
    			t1 = space();
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    			attr_dev(p, "class", "OLSKCloudError svelte-kyilmw");
    			add_location(p, file$g, 13, 1, 344);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, p, anchor);
    			append_dev(p, t0);
    			insert_dev(target, t1, anchor);
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*OLSKCloudErrorText*/ 1) set_data_dev(t0, /*OLSKCloudErrorText*/ ctx[0]);
    			if (dirty & /*OLSKCloudErrorText*/ 1) show_if = /*OLSKCloudErrorText*/ ctx[0].match('Unauthorized');

    			if (show_if) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block_3$4(ctx);
    					if_block.c();
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(p);
    			if (detaching) detach_dev(t1);
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$6.name,
    		type: "if",
    		source: "(13:0) {#if $$props.OLSKCloudErrorText }",
    		ctx
    	});

    	return block;
    }

    // (16:1) {#if OLSKCloudErrorText.match('Unauthorized') }
    function create_if_block_3$4(ctx) {
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			button.textContent = `${main_1('OLSKCloudRenewButtonText')}`;
    			attr_dev(button, "class", "OLSKCloudRenewButton");
    			add_location(button, file$g, 16, 2, 449);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*OLSKCloudDispatchRenew*/ ctx[1])) /*OLSKCloudDispatchRenew*/ ctx[1].apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3$4.name,
    		type: "if",
    		source: "(16:1) {#if OLSKCloudErrorText.match('Unauthorized') }",
    		ctx
    	});

    	return block;
    }

    // (21:0) {#if !$$props.OLSKCloudStatusIdentityText }
    function create_if_block_1$7(ctx) {
    	let olskcloudform;
    	let current;

    	olskcloudform = new Main$d({
    			props: {
    				OLSKCloudFormDispatchSubmit: /*$$props*/ ctx[2].OLSKCloudFormDispatchSubmit
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(olskcloudform.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskcloudform, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskcloudform_changes = {};
    			if (dirty & /*$$props*/ 4) olskcloudform_changes.OLSKCloudFormDispatchSubmit = /*$$props*/ ctx[2].OLSKCloudFormDispatchSubmit;
    			olskcloudform.$set(olskcloudform_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskcloudform.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskcloudform.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olskcloudform, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$7.name,
    		type: "if",
    		source: "(21:0) {#if !$$props.OLSKCloudStatusIdentityText }",
    		ctx
    	});

    	return block;
    }

    // (27:0) {#if $$props.OLSKCloudStatusIdentityText }
    function create_if_block$c(ctx) {
    	let olskcloudstatus;
    	let current;

    	olskcloudstatus = new Main$e({
    			props: {
    				OLSKCloudStatusIdentityText: /*$$props*/ ctx[2].OLSKCloudStatusIdentityText,
    				OLSKCloudStatusIsSyncing: /*$$props*/ ctx[2].OLSKCloudStatusIsSyncing,
    				OLSKCloudStatusDispatchSyncStart: /*$$props*/ ctx[2].OLSKCloudStatusDispatchSyncStart,
    				OLSKCloudStatusDispatchSyncStop: /*$$props*/ ctx[2].OLSKCloudStatusDispatchSyncStop,
    				OLSKCloudStatusDispatchDisconnect: /*$$props*/ ctx[2].OLSKCloudStatusDispatchDisconnect
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(olskcloudstatus.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskcloudstatus, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskcloudstatus_changes = {};
    			if (dirty & /*$$props*/ 4) olskcloudstatus_changes.OLSKCloudStatusIdentityText = /*$$props*/ ctx[2].OLSKCloudStatusIdentityText;
    			if (dirty & /*$$props*/ 4) olskcloudstatus_changes.OLSKCloudStatusIsSyncing = /*$$props*/ ctx[2].OLSKCloudStatusIsSyncing;
    			if (dirty & /*$$props*/ 4) olskcloudstatus_changes.OLSKCloudStatusDispatchSyncStart = /*$$props*/ ctx[2].OLSKCloudStatusDispatchSyncStart;
    			if (dirty & /*$$props*/ 4) olskcloudstatus_changes.OLSKCloudStatusDispatchSyncStop = /*$$props*/ ctx[2].OLSKCloudStatusDispatchSyncStop;
    			if (dirty & /*$$props*/ 4) olskcloudstatus_changes.OLSKCloudStatusDispatchDisconnect = /*$$props*/ ctx[2].OLSKCloudStatusDispatchDisconnect;
    			olskcloudstatus.$set(olskcloudstatus_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskcloudstatus.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskcloudstatus.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olskcloudstatus, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$c.name,
    		type: "if",
    		source: "(27:0) {#if $$props.OLSKCloudStatusIdentityText }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$g(ctx) {
    	let div;
    	let t0;
    	let t1;
    	let current;
    	let if_block0 = /*$$props*/ ctx[2].OLSKCloudErrorText && create_if_block_2$6(ctx);
    	let if_block1 = !/*$$props*/ ctx[2].OLSKCloudStatusIdentityText && create_if_block_1$7(ctx);
    	let if_block2 = /*$$props*/ ctx[2].OLSKCloudStatusIdentityText && create_if_block$c(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block0) if_block0.c();
    			t0 = space();
    			if (if_block1) if_block1.c();
    			t1 = space();
    			if (if_block2) if_block2.c();
    			attr_dev(div, "class", "OLSKCloud svelte-kyilmw");
    			add_location(div, file$g, 10, 0, 284);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block0) if_block0.m(div, null);
    			append_dev(div, t0);
    			if (if_block1) if_block1.m(div, null);
    			append_dev(div, t1);
    			if (if_block2) if_block2.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*$$props*/ ctx[2].OLSKCloudErrorText) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);
    				} else {
    					if_block0 = create_if_block_2$6(ctx);
    					if_block0.c();
    					if_block0.m(div, t0);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (!/*$$props*/ ctx[2].OLSKCloudStatusIdentityText) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);

    					if (dirty & /*$$props*/ 4) {
    						transition_in(if_block1, 1);
    					}
    				} else {
    					if_block1 = create_if_block_1$7(ctx);
    					if_block1.c();
    					transition_in(if_block1, 1);
    					if_block1.m(div, t1);
    				}
    			} else if (if_block1) {
    				group_outros();

    				transition_out(if_block1, 1, 1, () => {
    					if_block1 = null;
    				});

    				check_outros();
    			}

    			if (/*$$props*/ ctx[2].OLSKCloudStatusIdentityText) {
    				if (if_block2) {
    					if_block2.p(ctx, dirty);

    					if (dirty & /*$$props*/ 4) {
    						transition_in(if_block2, 1);
    					}
    				} else {
    					if_block2 = create_if_block$c(ctx);
    					if_block2.c();
    					transition_in(if_block2, 1);
    					if_block2.m(div, null);
    				}
    			} else if (if_block2) {
    				group_outros();

    				transition_out(if_block2, 1, 1, () => {
    					if_block2 = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block1);
    			transition_in(if_block2);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block1);
    			transition_out(if_block2);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			if (if_block2) if_block2.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$g.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$g($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKCloudErrorText = null } = $$props;
    	let { OLSKCloudDispatchRenew } = $$props;

    	$$self.$$.on_mount.push(function () {
    		if (OLSKCloudDispatchRenew === undefined && !('OLSKCloudDispatchRenew' in $$props || $$self.$$.bound[$$self.$$.props['OLSKCloudDispatchRenew']])) {
    			console.warn("<Main> was created without expected prop 'OLSKCloudDispatchRenew'");
    		}
    	});

    	$$self.$$set = $$new_props => {
    		$$invalidate(2, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
    		if ('OLSKCloudErrorText' in $$new_props) $$invalidate(0, OLSKCloudErrorText = $$new_props.OLSKCloudErrorText);
    		if ('OLSKCloudDispatchRenew' in $$new_props) $$invalidate(1, OLSKCloudDispatchRenew = $$new_props.OLSKCloudDispatchRenew);
    	};

    	$$self.$capture_state = () => ({
    		OLSKCloudErrorText,
    		OLSKCloudDispatchRenew,
    		OLSKLocalized: main_1,
    		OLSKCloudForm: Main$d,
    		OLSKCloudStatus: Main$e
    	});

    	$$self.$inject_state = $$new_props => {
    		$$invalidate(2, $$props = assign(assign({}, $$props), $$new_props));
    		if ('OLSKCloudErrorText' in $$props) $$invalidate(0, OLSKCloudErrorText = $$new_props.OLSKCloudErrorText);
    		if ('OLSKCloudDispatchRenew' in $$props) $$invalidate(1, OLSKCloudDispatchRenew = $$new_props.OLSKCloudDispatchRenew);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$props = exclude_internal_props($$props);
    	return [OLSKCloudErrorText, OLSKCloudDispatchRenew, $$props];
    }

    class Main$f extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$g, create_fragment$g, safe_not_equal, {
    			OLSKCloudErrorText: 0,
    			OLSKCloudDispatchRenew: 1
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$g.name
    		});
    	}

    	get OLSKCloudErrorText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudErrorText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKCloudDispatchRenew() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKCloudDispatchRenew(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    function e$1(e,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n);}}function t(e){return function(e){if(Array.isArray(e))return o(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return o(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var o=0,n=new Array(t);o<t;o++)n[o]=e[o];return n}var n,i$1,a,r,s,l=(n=["a[href]","area[href]",'input:not([disabled]):not([type="hidden"]):not([aria-hidden])',"select:not([disabled]):not([aria-hidden])","textarea:not([disabled]):not([aria-hidden])","button:not([disabled]):not([aria-hidden])","iframe","object","embed","[contenteditable]",'[tabindex]:not([tabindex^="-"])'],i$1=function(){function o(e){var n=e.targetModal,i=e.triggers,a=void 0===i?[]:i,r=e.onShow,s=void 0===r?function(){}:r,l=e.onClose,c=void 0===l?function(){}:l,d=e.openTrigger,u=void 0===d?"data-micromodal-trigger":d,f=e.closeTrigger,h=void 0===f?"data-micromodal-close":f,v=e.openClass,g=void 0===v?"is-open":v,m=e.disableScroll,b=void 0!==m&&m,y=e.disableFocus,p=void 0!==y&&y,w=e.awaitCloseAnimation,E=void 0!==w&&w,k=e.awaitOpenAnimation,M=void 0!==k&&k,A=e.debugMode,C=void 0!==A&&A;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o),this.modal=document.getElementById(n),this.config={debugMode:C,disableScroll:b,openTrigger:u,closeTrigger:h,openClass:g,onShow:s,onClose:c,awaitCloseAnimation:E,awaitOpenAnimation:M,disableFocus:p},a.length>0&&this.registerTriggers.apply(this,t(a)),this.onClick=this.onClick.bind(this),this.onKeydown=this.onKeydown.bind(this);}var i,a;return i=o,(a=[{key:"registerTriggers",value:function(){for(var e=this,t=arguments.length,o=new Array(t),n=0;n<t;n++)o[n]=arguments[n];o.filter(Boolean).forEach((function(t){t.addEventListener("click",(function(t){return e.showModal(t)}));}));}},{key:"showModal",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;if(this.activeElement=document.activeElement,this.modal.setAttribute("aria-hidden","false"),this.modal.classList.add(this.config.openClass),this.scrollBehaviour("disable"),this.addEventListeners(),this.config.awaitOpenAnimation){var o=function t(){e.modal.removeEventListener("animationend",t,!1),e.setFocusToFirstNode();};this.modal.addEventListener("animationend",o,!1);}else this.setFocusToFirstNode();this.config.onShow(this.modal,this.activeElement,t);}},{key:"closeModal",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=this.modal;if(this.modal.setAttribute("aria-hidden","true"),this.removeEventListeners(),this.scrollBehaviour("enable"),this.activeElement&&this.activeElement.focus&&this.activeElement.focus(),this.config.onClose(this.modal,this.activeElement,e),this.config.awaitCloseAnimation){var o=this.config.openClass;this.modal.addEventListener("animationend",(function e(){t.classList.remove(o),t.removeEventListener("animationend",e,!1);}),!1);}else t.classList.remove(this.config.openClass);}},{key:"closeModalById",value:function(e){this.modal=document.getElementById(e),this.modal&&this.closeModal();}},{key:"scrollBehaviour",value:function(e){if(this.config.disableScroll){var t=document.querySelector("body");switch(e){case"enable":Object.assign(t.style,{overflow:""});break;case"disable":Object.assign(t.style,{overflow:"hidden"});}}}},{key:"addEventListeners",value:function(){this.modal.addEventListener("touchstart",this.onClick),this.modal.addEventListener("click",this.onClick),document.addEventListener("keydown",this.onKeydown);}},{key:"removeEventListeners",value:function(){this.modal.removeEventListener("touchstart",this.onClick),this.modal.removeEventListener("click",this.onClick),document.removeEventListener("keydown",this.onKeydown);}},{key:"onClick",value:function(e){(e.target.hasAttribute(this.config.closeTrigger)||e.target.parentNode.hasAttribute(this.config.closeTrigger))&&(e.preventDefault(),e.stopPropagation(),this.closeModal(e));}},{key:"onKeydown",value:function(e){27===e.keyCode&&this.closeModal(e),9===e.keyCode&&this.retainFocus(e);}},{key:"getFocusableNodes",value:function(){var e=this.modal.querySelectorAll(n);return Array.apply(void 0,t(e))}},{key:"setFocusToFirstNode",value:function(){var e=this;if(!this.config.disableFocus){var t=this.getFocusableNodes();if(0!==t.length){var o=t.filter((function(t){return !t.hasAttribute(e.config.closeTrigger)}));o.length>0&&o[0].focus(),0===o.length&&t[0].focus();}}}},{key:"retainFocus",value:function(e){var t=this.getFocusableNodes();if(0!==t.length)if(t=t.filter((function(e){return null!==e.offsetParent})),this.modal.contains(document.activeElement)){var o=t.indexOf(document.activeElement);e.shiftKey&&0===o&&(t[t.length-1].focus(),e.preventDefault()),!e.shiftKey&&t.length>0&&o===t.length-1&&(t[0].focus(),e.preventDefault());}else t[0].focus();}}])&&e$1(i.prototype,a),o}(),a=null,r=function(e){if(!document.getElementById(e))return console.warn("MicroModal: ❗Seems like you have missed %c'".concat(e,"'"),"background-color: #f8f9fa;color: #50596c;font-weight: bold;","ID somewhere in your code. Refer example below to resolve it."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<div class="modal" id="'.concat(e,'"></div>')),!1},s=function(e,t){if(function(e){e.length<=0&&(console.warn("MicroModal: ❗Please specify at least one %c'micromodal-trigger'","background-color: #f8f9fa;color: #50596c;font-weight: bold;","data attribute."),console.warn("%cExample:","background-color: #f8f9fa;color: #50596c;font-weight: bold;",'<a href="#" data-micromodal-trigger="my-modal"></a>'));}(e),!t)return !0;for(var o in t)r(o);return !0},{init:function(e){var o=Object.assign({},{openTrigger:"data-micromodal-trigger"},e),n=t(document.querySelectorAll("[".concat(o.openTrigger,"]"))),r=function(e,t){var o=[];return e.forEach((function(e){var n=e.attributes[t].value;void 0===o[n]&&(o[n]=[]),o[n].push(e);})),o}(n,o.openTrigger);if(!0!==o.debugMode||!1!==s(n,r))for(var l in r){var c=r[l];o.targetModal=l,o.triggers=t(c),a=new i$1(o);}},show:function(e,t){var o=t||{};o.targetModal=e,!0===o.debugMode&&!1===r(e)||(a&&a.removeEventListeners(),(a=new i$1(o)).showModal());},close:function(e){e?a.closeModalById(e):a.closeModal();}});"undefined"!=typeof window&&(window.MicroModal=l);

    /* node_modules/OLSKStandardView/main.svelte generated by Svelte v3.54.0 */

    const file$h = "node_modules/OLSKStandardView/main.svelte";
    const get_OLSKStandardViewTail_slot_changes = dirty => ({});
    const get_OLSKStandardViewTail_slot_context = ctx => ({});
    const get_OLSKStandardViewHead_slot_changes = dirty => ({});
    const get_OLSKStandardViewHead_slot_context = ctx => ({});

    // (2:1) {#if $$slots.OLSKStandardViewHead}
    function create_if_block_2$7(ctx) {
    	let div;
    	let current;
    	const OLSKStandardViewHead_slot_template = /*#slots*/ ctx[2].OLSKStandardViewHead;
    	const OLSKStandardViewHead_slot = create_slot(OLSKStandardViewHead_slot_template, ctx, /*$$scope*/ ctx[1], get_OLSKStandardViewHead_slot_context);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (OLSKStandardViewHead_slot) OLSKStandardViewHead_slot.c();
    			attr_dev(div, "class", "OLSKStandardViewHead OLSKDecorFixedHeader svelte-hvaqwn");
    			add_location(div, file$h, 2, 2, 84);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (OLSKStandardViewHead_slot) {
    				OLSKStandardViewHead_slot.m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKStandardViewHead_slot) {
    				if (OLSKStandardViewHead_slot.p && (!current || dirty & /*$$scope*/ 2)) {
    					update_slot_base(
    						OLSKStandardViewHead_slot,
    						OLSKStandardViewHead_slot_template,
    						ctx,
    						/*$$scope*/ ctx[1],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[1])
    						: get_slot_changes(OLSKStandardViewHead_slot_template, /*$$scope*/ ctx[1], dirty, get_OLSKStandardViewHead_slot_changes),
    						get_OLSKStandardViewHead_slot_context
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKStandardViewHead_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKStandardViewHead_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (OLSKStandardViewHead_slot) OLSKStandardViewHead_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$7.name,
    		type: "if",
    		source: "(2:1) {#if $$slots.OLSKStandardViewHead}",
    		ctx
    	});

    	return block;
    }

    // (8:1) {#if $$slots.default }
    function create_if_block_1$8(ctx) {
    	let div;
    	let current;
    	const default_slot_template = /*#slots*/ ctx[2].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[1], null);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (default_slot) default_slot.c();
    			attr_dev(div, "class", "OLSKStandardViewBody OLSKDecorFixedSecondary svelte-hvaqwn");
    			add_location(div, file$h, 8, 2, 229);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (default_slot) {
    				default_slot.m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 2)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[1],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[1])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[1], dirty, null),
    						null
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$8.name,
    		type: "if",
    		source: "(8:1) {#if $$slots.default }",
    		ctx
    	});

    	return block;
    }

    // (14:1) {#if $$slots.OLSKStandardViewTail}
    function create_if_block$d(ctx) {
    	let div;
    	let current;
    	const OLSKStandardViewTail_slot_template = /*#slots*/ ctx[2].OLSKStandardViewTail;
    	const OLSKStandardViewTail_slot = create_slot(OLSKStandardViewTail_slot_template, ctx, /*$$scope*/ ctx[1], get_OLSKStandardViewTail_slot_context);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (OLSKStandardViewTail_slot) OLSKStandardViewTail_slot.c();
    			attr_dev(div, "class", "OLSKStandardViewTail");
    			add_location(div, file$h, 14, 2, 360);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (OLSKStandardViewTail_slot) {
    				OLSKStandardViewTail_slot.m(div, null);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKStandardViewTail_slot) {
    				if (OLSKStandardViewTail_slot.p && (!current || dirty & /*$$scope*/ 2)) {
    					update_slot_base(
    						OLSKStandardViewTail_slot,
    						OLSKStandardViewTail_slot_template,
    						ctx,
    						/*$$scope*/ ctx[1],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[1])
    						: get_slot_changes(OLSKStandardViewTail_slot_template, /*$$scope*/ ctx[1], dirty, get_OLSKStandardViewTail_slot_changes),
    						get_OLSKStandardViewTail_slot_context
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKStandardViewTail_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKStandardViewTail_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (OLSKStandardViewTail_slot) OLSKStandardViewTail_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$d.name,
    		type: "if",
    		source: "(14:1) {#if $$slots.OLSKStandardViewTail}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$h(ctx) {
    	let div;
    	let t0;
    	let t1;
    	let current;
    	let if_block0 = /*$$slots*/ ctx[0].OLSKStandardViewHead && create_if_block_2$7(ctx);
    	let if_block1 = /*$$slots*/ ctx[0].default && create_if_block_1$8(ctx);
    	let if_block2 = /*$$slots*/ ctx[0].OLSKStandardViewTail && create_if_block$d(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block0) if_block0.c();
    			t0 = space();
    			if (if_block1) if_block1.c();
    			t1 = space();
    			if (if_block2) if_block2.c();
    			attr_dev(div, "class", "OLSKStandardView OLSKDecorFixed svelte-hvaqwn");
    			add_location(div, file$h, 0, 0, 0);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block0) if_block0.m(div, null);
    			append_dev(div, t0);
    			if (if_block1) if_block1.m(div, null);
    			append_dev(div, t1);
    			if (if_block2) if_block2.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*$$slots*/ ctx[0].OLSKStandardViewHead) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 1) {
    						transition_in(if_block0, 1);
    					}
    				} else {
    					if_block0 = create_if_block_2$7(ctx);
    					if_block0.c();
    					transition_in(if_block0, 1);
    					if_block0.m(div, t0);
    				}
    			} else if (if_block0) {
    				group_outros();

    				transition_out(if_block0, 1, 1, () => {
    					if_block0 = null;
    				});

    				check_outros();
    			}

    			if (/*$$slots*/ ctx[0].default) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 1) {
    						transition_in(if_block1, 1);
    					}
    				} else {
    					if_block1 = create_if_block_1$8(ctx);
    					if_block1.c();
    					transition_in(if_block1, 1);
    					if_block1.m(div, t1);
    				}
    			} else if (if_block1) {
    				group_outros();

    				transition_out(if_block1, 1, 1, () => {
    					if_block1 = null;
    				});

    				check_outros();
    			}

    			if (/*$$slots*/ ctx[0].OLSKStandardViewTail) {
    				if (if_block2) {
    					if_block2.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 1) {
    						transition_in(if_block2, 1);
    					}
    				} else {
    					if_block2 = create_if_block$d(ctx);
    					if_block2.c();
    					transition_in(if_block2, 1);
    					if_block2.m(div, null);
    				}
    			} else if (if_block2) {
    				group_outros();

    				transition_out(if_block2, 1, 1, () => {
    					if_block2 = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block0);
    			transition_in(if_block1);
    			transition_in(if_block2);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block0);
    			transition_out(if_block1);
    			transition_out(if_block2);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    			if (if_block2) if_block2.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$h.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$h($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, ['OLSKStandardViewHead','default','OLSKStandardViewTail']);
    	const $$slots = compute_slots(slots);
    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('$$scope' in $$props) $$invalidate(1, $$scope = $$props.$$scope);
    	};

    	return [$$slots, $$scope, slots];
    }

    class Main$g extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$h, create_fragment$h, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$h.name
    		});
    	}
    }

    /* node_modules/OLSKModalView/main.svelte generated by Svelte v3.54.0 */
    const file$i = "node_modules/OLSKModalView/main.svelte";
    const get_OLSKStandardViewTail_slot_changes$1 = dirty => ({});
    const get_OLSKStandardViewTail_slot_context$1 = ctx => ({});

    // (84:0) {#if mod._ValueIsVisible }
    function create_if_block$e(ctx) {
    	let div2;
    	let div1;
    	let div0;
    	let olskstandardview;
    	let div0_aria_labelledby_value;
    	let div2_id_value;
    	let current;

    	olskstandardview = new Main$g({
    			props: {
    				$$slots: {
    					OLSKStandardViewTail: [create_OLSKStandardViewTail_slot],
    					OLSKStandardViewHead: [create_OLSKStandardViewHead_slot],
    					default: [create_default_slot$2]
    				},
    				$$scope: { ctx }
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div1 = element("div");
    			div0 = element("div");
    			create_component(olskstandardview.$$.fragment);
    			attr_dev(div0, "class", "OLSKModalViewContainer svelte-16rd7qp");
    			attr_dev(div0, "role", "dialog");
    			attr_dev(div0, "aria-modal", "true");
    			attr_dev(div0, "aria-labelledby", div0_aria_labelledby_value = /*mod*/ ctx[3]._DataRandomTitleID);
    			add_location(div0, file$i, 87, 2, 1723);
    			attr_dev(div1, "class", "OLSKModalViewOverlay svelte-16rd7qp");
    			attr_dev(div1, "tabindex", "-1");
    			attr_dev(div1, "data-micromodal-close", "");
    			add_location(div1, file$i, 86, 1, 1650);
    			attr_dev(div2, "class", "OLSKModalView svelte-16rd7qp");
    			attr_dev(div2, "id", div2_id_value = /*mod*/ ctx[3]._DataRandomID);
    			attr_dev(div2, "aria-hidden", "true");
    			toggle_class(div2, "OLSKModalViewCapped", /*OLSKModalViewIsCapped*/ ctx[2]);
    			add_location(div2, file$i, 85, 0, 1525);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div1);
    			append_dev(div1, div0);
    			mount_component(olskstandardview, div0, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskstandardview_changes = {};

    			if (dirty & /*$$scope, $$slots, mod, OLSKModalViewCloseText, OLSKModalViewTitleText*/ 283) {
    				olskstandardview_changes.$$scope = { dirty, ctx };
    			}

    			olskstandardview.$set(olskstandardview_changes);

    			if (!current || dirty & /*mod*/ 8 && div0_aria_labelledby_value !== (div0_aria_labelledby_value = /*mod*/ ctx[3]._DataRandomTitleID)) {
    				attr_dev(div0, "aria-labelledby", div0_aria_labelledby_value);
    			}

    			if (!current || dirty & /*mod*/ 8 && div2_id_value !== (div2_id_value = /*mod*/ ctx[3]._DataRandomID)) {
    				attr_dev(div2, "id", div2_id_value);
    			}

    			if (!current || dirty & /*OLSKModalViewIsCapped*/ 4) {
    				toggle_class(div2, "OLSKModalViewCapped", /*OLSKModalViewIsCapped*/ ctx[2]);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskstandardview.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskstandardview.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			destroy_component(olskstandardview);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$e.name,
    		type: "if",
    		source: "(84:0) {#if mod._ValueIsVisible }",
    		ctx
    	});

    	return block;
    }

    // (89:3) <OLSKStandardView>
    function create_default_slot$2(ctx) {
    	let current;
    	const default_slot_template = /*#slots*/ ctx[7].default;
    	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[8], null);

    	const block = {
    		c: function create() {
    			if (default_slot) default_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (default_slot) {
    				default_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (default_slot) {
    				if (default_slot.p && (!current || dirty & /*$$scope*/ 256)) {
    					update_slot_base(
    						default_slot,
    						default_slot_template,
    						ctx,
    						/*$$scope*/ ctx[8],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[8])
    						: get_slot_changes(default_slot_template, /*$$scope*/ ctx[8], dirty, null),
    						null
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(default_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(default_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (default_slot) default_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$2.name,
    		type: "slot",
    		source: "(89:3) <OLSKStandardView>",
    		ctx
    	});

    	return block;
    }

    // (90:4) 
    function create_OLSKStandardViewHead_slot(ctx) {
    	let div3;
    	let div0;
    	let t1;
    	let div1;
    	let span;
    	let t2;
    	let span_id_value;
    	let t3;
    	let div2;
    	let button;
    	let t4_value = (/*OLSKModalViewCloseText*/ ctx[1] || main_1('OLSKModalViewCloseButtonText')) + "";
    	let t4;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div3 = element("div");
    			div0 = element("div");
    			div0.textContent = " ";
    			t1 = space();
    			div1 = element("div");
    			span = element("span");
    			t2 = text(/*OLSKModalViewTitleText*/ ctx[0]);
    			t3 = space();
    			div2 = element("div");
    			button = element("button");
    			t4 = text(t4_value);
    			attr_dev(div0, "class", "OLSKToolbarElementGroup");
    			add_location(div0, file$i, 90, 5, 1978);
    			attr_dev(span, "class", "OLSKModalViewTitle svelte-16rd7qp");
    			attr_dev(span, "id", span_id_value = /*mod*/ ctx[3]._DataRandomTitleID);
    			add_location(span, file$i, 93, 6, 2078);
    			attr_dev(div1, "class", "OLSKToolbarElementGroup");
    			add_location(div1, file$i, 92, 5, 2034);
    			attr_dev(button, "class", "OLSKModalViewCloseButton OLSKDecorButtonNoStyle OLSKDecorTappable");
    			add_location(button, file$i, 97, 6, 2237);
    			attr_dev(div2, "class", "OLSKToolbarElementGroup");
    			add_location(div2, file$i, 96, 5, 2193);
    			attr_dev(div3, "class", "OLSKModalViewHead OLSKToolbar OLSKCommonEdgeBottom OLSKToolbarJustify svelte-16rd7qp");
    			attr_dev(div3, "slot", "OLSKStandardViewHead");
    			add_location(div3, file$i, 89, 4, 1861);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div3, anchor);
    			append_dev(div3, div0);
    			append_dev(div3, t1);
    			append_dev(div3, div1);
    			append_dev(div1, span);
    			append_dev(span, t2);
    			append_dev(div3, t3);
    			append_dev(div3, div2);
    			append_dev(div2, button);
    			append_dev(button, t4);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*mod*/ ctx[3].ControlClose)) /*mod*/ ctx[3].ControlClose.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    			if (dirty & /*OLSKModalViewTitleText*/ 1) set_data_dev(t2, /*OLSKModalViewTitleText*/ ctx[0]);

    			if (dirty & /*mod*/ 8 && span_id_value !== (span_id_value = /*mod*/ ctx[3]._DataRandomTitleID)) {
    				attr_dev(span, "id", span_id_value);
    			}

    			if (dirty & /*OLSKModalViewCloseText*/ 2 && t4_value !== (t4_value = (/*OLSKModalViewCloseText*/ ctx[1] || main_1('OLSKModalViewCloseButtonText')) + "")) set_data_dev(t4, t4_value);
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div3);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKStandardViewHead_slot.name,
    		type: "slot",
    		source: "(90:4) ",
    		ctx
    	});

    	return block;
    }

    // (104:110) {#if $$slots.OLSKStandardViewTail}
    function create_if_block_1$9(ctx) {
    	let current;
    	const OLSKStandardViewTail_slot_template = /*#slots*/ ctx[7].OLSKStandardViewTail;
    	const OLSKStandardViewTail_slot = create_slot(OLSKStandardViewTail_slot_template, ctx, /*$$scope*/ ctx[8], get_OLSKStandardViewTail_slot_context$1);

    	const block = {
    		c: function create() {
    			if (OLSKStandardViewTail_slot) OLSKStandardViewTail_slot.c();
    		},
    		m: function mount(target, anchor) {
    			if (OLSKStandardViewTail_slot) {
    				OLSKStandardViewTail_slot.m(target, anchor);
    			}

    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (OLSKStandardViewTail_slot) {
    				if (OLSKStandardViewTail_slot.p && (!current || dirty & /*$$scope*/ 256)) {
    					update_slot_base(
    						OLSKStandardViewTail_slot,
    						OLSKStandardViewTail_slot_template,
    						ctx,
    						/*$$scope*/ ctx[8],
    						!current
    						? get_all_dirty_from_scope(/*$$scope*/ ctx[8])
    						: get_slot_changes(OLSKStandardViewTail_slot_template, /*$$scope*/ ctx[8], dirty, get_OLSKStandardViewTail_slot_changes$1),
    						get_OLSKStandardViewTail_slot_context$1
    					);
    				}
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(OLSKStandardViewTail_slot, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(OLSKStandardViewTail_slot, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (OLSKStandardViewTail_slot) OLSKStandardViewTail_slot.d(detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$9.name,
    		type: "if",
    		source: "(104:110) {#if $$slots.OLSKStandardViewTail}",
    		ctx
    	});

    	return block;
    }

    // (104:4) 
    function create_OLSKStandardViewTail_slot(ctx) {
    	let div;
    	let current;
    	let if_block = /*$$slots*/ ctx[4].OLSKStandardViewTail && create_if_block_1$9(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "slot", "OLSKStandardViewTail");
    			toggle_class(div, "OLSKStandardViewTailHotfixHidden", !/*$$slots*/ ctx[4].OLSKStandardViewTail);
    			add_location(div, file$i, 103, 4, 2481);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*$$slots*/ ctx[4].OLSKStandardViewTail) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*$$slots*/ 16) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block_1$9(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}

    			if (!current || dirty & /*$$slots*/ 16) {
    				toggle_class(div, "OLSKStandardViewTailHotfixHidden", !/*$$slots*/ ctx[4].OLSKStandardViewTail);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKStandardViewTail_slot.name,
    		type: "slot",
    		source: "(104:4) ",
    		ctx
    	});

    	return block;
    }

    function create_fragment$i(ctx) {
    	let if_block_anchor;
    	let current;
    	let if_block = /*mod*/ ctx[3]._ValueIsVisible && create_if_block$e(ctx);

    	const block = {
    		c: function create() {
    			if (if_block) if_block.c();
    			if_block_anchor = empty();
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			if (if_block) if_block.m(target, anchor);
    			insert_dev(target, if_block_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*mod*/ ctx[3]._ValueIsVisible) {
    				if (if_block) {
    					if_block.p(ctx, dirty);

    					if (dirty & /*mod*/ 8) {
    						transition_in(if_block, 1);
    					}
    				} else {
    					if_block = create_if_block$e(ctx);
    					if_block.c();
    					transition_in(if_block, 1);
    					if_block.m(if_block_anchor.parentNode, if_block_anchor);
    				}
    			} else if (if_block) {
    				group_outros();

    				transition_out(if_block, 1, 1, () => {
    					if_block = null;
    				});

    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (if_block) if_block.d(detaching);
    			if (detaching) detach_dev(if_block_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$i.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$i($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, ['OLSKStandardViewTail','default']);
    	const $$slots = compute_slots(slots);
    	let { OLSKModalViewTitleText } = $$props;
    	let { OLSKModalViewCloseText = '' } = $$props;
    	let { OLSKModalViewIsCapped = false } = $$props;
    	let { OLSKModalViewDidClose = null } = $$props;

    	const modPublic = {
    		_OLSKModalViewIsVisible() {
    			return mod._ValueIsVisible;
    		},
    		OLSKModalViewShow() {
    			mod.ControlShow();
    		},
    		OLSKModalViewClose() {
    			mod.ControlClose();
    		}
    	};

    	const mod = {
    		// VALUE
    		_ValueIsVisible: false,
    		_ValueUpdateCallback: null,
    		// DATA
    		_DataRandomID: 'OLSKModalView_' + Math.random().toString().slice(2),
    		_DataRandomTitleID: 'OLSKModalViewTitle_' + Math.random().toString().slice(2),
    		// CONTROL
    		ControlShow() {
    			$$invalidate(
    				3,
    				mod._ValueUpdateCallback = function () {
    					l.show(mod._DataRandomID, {
    						openClass: 'OLSKModalViewOpen',
    						awaitOpenAnimation: true,
    						awaitCloseAnimation: true,
    						onClose() {
    							setTimeout(
    								function () {
    									$$invalidate(3, mod._ValueIsVisible = false, mod);
    								},
    								600
    							);

    							OLSKModalViewDidClose && OLSKModalViewDidClose();
    						}
    					});
    				},
    				mod
    			);

    			$$invalidate(3, mod._ValueIsVisible = true, mod);
    		},
    		ControlClose() {
    			l.close(mod._DataRandomID);
    		},
    		// LIFECYCLE
    		LifecycleModuleDidUpdate() {
    			if (!mod._ValueUpdateCallback) {
    				return;
    			}

    			mod._ValueUpdateCallback();
    			delete mod._ValueUpdateCallback;
    		}
    	};

    	afterUpdate(mod.LifecycleModuleDidUpdate);

    	$$self.$$.on_mount.push(function () {
    		if (OLSKModalViewTitleText === undefined && !('OLSKModalViewTitleText' in $$props || $$self.$$.bound[$$self.$$.props['OLSKModalViewTitleText']])) {
    			console.warn("<Main> was created without expected prop 'OLSKModalViewTitleText'");
    		}
    	});

    	const writable_props = [
    		'OLSKModalViewTitleText',
    		'OLSKModalViewCloseText',
    		'OLSKModalViewIsCapped',
    		'OLSKModalViewDidClose'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('OLSKModalViewTitleText' in $$props) $$invalidate(0, OLSKModalViewTitleText = $$props.OLSKModalViewTitleText);
    		if ('OLSKModalViewCloseText' in $$props) $$invalidate(1, OLSKModalViewCloseText = $$props.OLSKModalViewCloseText);
    		if ('OLSKModalViewIsCapped' in $$props) $$invalidate(2, OLSKModalViewIsCapped = $$props.OLSKModalViewIsCapped);
    		if ('OLSKModalViewDidClose' in $$props) $$invalidate(5, OLSKModalViewDidClose = $$props.OLSKModalViewDidClose);
    		if ('$$scope' in $$props) $$invalidate(8, $$scope = $$props.$$scope);
    	};

    	$$self.$capture_state = () => ({
    		OLSKModalViewTitleText,
    		OLSKModalViewCloseText,
    		OLSKModalViewIsCapped,
    		OLSKModalViewDidClose,
    		modPublic,
    		OLSKLocalized: main_1,
    		MicroModal: l,
    		mod,
    		afterUpdate,
    		OLSKStandardView: Main$g
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKModalViewTitleText' in $$props) $$invalidate(0, OLSKModalViewTitleText = $$props.OLSKModalViewTitleText);
    		if ('OLSKModalViewCloseText' in $$props) $$invalidate(1, OLSKModalViewCloseText = $$props.OLSKModalViewCloseText);
    		if ('OLSKModalViewIsCapped' in $$props) $$invalidate(2, OLSKModalViewIsCapped = $$props.OLSKModalViewIsCapped);
    		if ('OLSKModalViewDidClose' in $$props) $$invalidate(5, OLSKModalViewDidClose = $$props.OLSKModalViewDidClose);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		OLSKModalViewTitleText,
    		OLSKModalViewCloseText,
    		OLSKModalViewIsCapped,
    		mod,
    		$$slots,
    		OLSKModalViewDidClose,
    		modPublic,
    		slots,
    		$$scope
    	];
    }

    class Main$h extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$i, create_fragment$i, safe_not_equal, {
    			OLSKModalViewTitleText: 0,
    			OLSKModalViewCloseText: 1,
    			OLSKModalViewIsCapped: 2,
    			OLSKModalViewDidClose: 5,
    			modPublic: 6
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$i.name
    		});
    	}

    	get OLSKModalViewTitleText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKModalViewTitleText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKModalViewCloseText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKModalViewCloseText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKModalViewIsCapped() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKModalViewIsCapped(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKModalViewDidClose() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKModalViewDidClose(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get modPublic() {
    		return this.$$.ctx[6];
    	}

    	set modPublic(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKWebView/main.svelte generated by Svelte v3.54.0 */

    const { Object: Object_1$1 } = globals;
    const file$j = "node_modules/OLSKWebView/main.svelte";

    // (28:0) <OLSKModalView bind:this={ mod._OLSKModalView } OLSKModalViewTitleText={ OLSKModalViewTitleText }>
    function create_default_slot$3(ctx) {
    	let div;
    	let iframe;
    	let iframe_data_src_value;
    	let iframe_src_value;

    	const block = {
    		c: function create() {
    			div = element("div");
    			iframe = element("iframe");
    			attr_dev(iframe, "class", "OLSKWebViewFrame svelte-1dgazwi");

    			attr_dev(iframe, "data-src", iframe_data_src_value = /*DEBUG_OLSKWebViewDataSource*/ ctx[2]
    			? /*OLSKWebViewURL*/ ctx[1]
    			: '');

    			if (!src_url_equal(iframe.src, iframe_src_value = /*DEBUG_OLSKWebViewDataSource*/ ctx[2]
    			? ''
    			: /*OLSKWebViewURL*/ ctx[1])) attr_dev(iframe, "src", iframe_src_value);

    			attr_dev(iframe, "title", /*OLSKModalViewTitleText*/ ctx[0]);
    			attr_dev(iframe, "frameborder", "0");
    			add_location(iframe, file$j, 29, 2, 607);
    			attr_dev(div, "class", "OLSKWebView");
    			add_location(div, file$j, 28, 1, 579);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, iframe);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*DEBUG_OLSKWebViewDataSource, OLSKWebViewURL*/ 6 && iframe_data_src_value !== (iframe_data_src_value = /*DEBUG_OLSKWebViewDataSource*/ ctx[2]
    			? /*OLSKWebViewURL*/ ctx[1]
    			: '')) {
    				attr_dev(iframe, "data-src", iframe_data_src_value);
    			}

    			if (dirty & /*DEBUG_OLSKWebViewDataSource, OLSKWebViewURL*/ 6 && !src_url_equal(iframe.src, iframe_src_value = /*DEBUG_OLSKWebViewDataSource*/ ctx[2]
    			? ''
    			: /*OLSKWebViewURL*/ ctx[1])) {
    				attr_dev(iframe, "src", iframe_src_value);
    			}

    			if (dirty & /*OLSKModalViewTitleText*/ 1) {
    				attr_dev(iframe, "title", /*OLSKModalViewTitleText*/ ctx[0]);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$3.name,
    		type: "slot",
    		source: "(28:0) <OLSKModalView bind:this={ mod._OLSKModalView } OLSKModalViewTitleText={ OLSKModalViewTitleText }>",
    		ctx
    	});

    	return block;
    }

    // (33:1) 
    function create_OLSKStandardViewTail_slot$1(ctx) {
    	let div1;
    	let div0;
    	let a;
    	let t_value = main_1('OLSKWebViewWindowButtonText') + "";
    	let t;

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			div0 = element("div");
    			a = element("a");
    			t = text(t_value);
    			attr_dev(a, "class", "OLSKWebViewWindowButton svelte-1dgazwi");
    			attr_dev(a, "href", /*OLSKWebViewURL*/ ctx[1]);
    			attr_dev(a, "target", "_blank");
    			add_location(a, file$j, 34, 3, 961);
    			attr_dev(div0, "class", "OLSKToolbarElementGroup");
    			add_location(div0, file$j, 33, 2, 920);
    			attr_dev(div1, "class", "OLSKWebViewTail OLSKToolbar OLSKCommonEdgeTop svelte-1dgazwi");
    			attr_dev(div1, "slot", "OLSKStandardViewTail");
    			add_location(div1, file$j, 32, 1, 830);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, div0);
    			append_dev(div0, a);
    			append_dev(a, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*OLSKWebViewURL*/ 2) {
    				attr_dev(a, "href", /*OLSKWebViewURL*/ ctx[1]);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKStandardViewTail_slot$1.name,
    		type: "slot",
    		source: "(33:1) ",
    		ctx
    	});

    	return block;
    }

    function create_fragment$j(ctx) {
    	let olskmodalview;
    	let current;

    	let olskmodalview_props = {
    		OLSKModalViewTitleText: /*OLSKModalViewTitleText*/ ctx[0],
    		$$slots: {
    			OLSKStandardViewTail: [create_OLSKStandardViewTail_slot$1],
    			default: [create_default_slot$3]
    		},
    		$$scope: { ctx }
    	};

    	olskmodalview = new Main$h({
    			props: olskmodalview_props,
    			$$inline: true
    		});

    	/*olskmodalview_binding*/ ctx[5](olskmodalview);

    	const block = {
    		c: function create() {
    			create_component(olskmodalview.$$.fragment);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskmodalview, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			const olskmodalview_changes = {};
    			if (dirty & /*OLSKModalViewTitleText*/ 1) olskmodalview_changes.OLSKModalViewTitleText = /*OLSKModalViewTitleText*/ ctx[0];

    			if (dirty & /*$$scope, OLSKWebViewURL, DEBUG_OLSKWebViewDataSource, OLSKModalViewTitleText*/ 71) {
    				olskmodalview_changes.$$scope = { dirty, ctx };
    			}

    			olskmodalview.$set(olskmodalview_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskmodalview.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskmodalview.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			/*olskmodalview_binding*/ ctx[5](null);
    			destroy_component(olskmodalview, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$j.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$j($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKModalViewTitleText } = $$props;
    	let { OLSKWebViewURL } = $$props;
    	let { DEBUG_OLSKWebViewDataSource = false } = $$props;
    	const modPublic = {};

    	const mod = {
    		_OLSKModalView: null,
    		// LIFECYCLE
    		LifecycleModuleDidMount() {
    			Object.assign(modPublic, mod._OLSKModalView.modPublic);
    		}
    	};

    	onMount(mod.LifecycleModuleDidMount);

    	$$self.$$.on_mount.push(function () {
    		if (OLSKModalViewTitleText === undefined && !('OLSKModalViewTitleText' in $$props || $$self.$$.bound[$$self.$$.props['OLSKModalViewTitleText']])) {
    			console.warn("<Main> was created without expected prop 'OLSKModalViewTitleText'");
    		}

    		if (OLSKWebViewURL === undefined && !('OLSKWebViewURL' in $$props || $$self.$$.bound[$$self.$$.props['OLSKWebViewURL']])) {
    			console.warn("<Main> was created without expected prop 'OLSKWebViewURL'");
    		}
    	});

    	const writable_props = ['OLSKModalViewTitleText', 'OLSKWebViewURL', 'DEBUG_OLSKWebViewDataSource'];

    	Object_1$1.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function olskmodalview_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._OLSKModalView = $$value;
    			$$invalidate(3, mod);
    		});
    	}

    	$$self.$$set = $$props => {
    		if ('OLSKModalViewTitleText' in $$props) $$invalidate(0, OLSKModalViewTitleText = $$props.OLSKModalViewTitleText);
    		if ('OLSKWebViewURL' in $$props) $$invalidate(1, OLSKWebViewURL = $$props.OLSKWebViewURL);
    		if ('DEBUG_OLSKWebViewDataSource' in $$props) $$invalidate(2, DEBUG_OLSKWebViewDataSource = $$props.DEBUG_OLSKWebViewDataSource);
    	};

    	$$self.$capture_state = () => ({
    		OLSKModalViewTitleText,
    		OLSKWebViewURL,
    		DEBUG_OLSKWebViewDataSource,
    		modPublic,
    		OLSKLocalized: main_1,
    		mod,
    		onMount,
    		OLSKModalView: Main$h
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKModalViewTitleText' in $$props) $$invalidate(0, OLSKModalViewTitleText = $$props.OLSKModalViewTitleText);
    		if ('OLSKWebViewURL' in $$props) $$invalidate(1, OLSKWebViewURL = $$props.OLSKWebViewURL);
    		if ('DEBUG_OLSKWebViewDataSource' in $$props) $$invalidate(2, DEBUG_OLSKWebViewDataSource = $$props.DEBUG_OLSKWebViewDataSource);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		OLSKModalViewTitleText,
    		OLSKWebViewURL,
    		DEBUG_OLSKWebViewDataSource,
    		mod,
    		modPublic,
    		olskmodalview_binding
    	];
    }

    class Main$i extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$j, create_fragment$j, safe_not_equal, {
    			OLSKModalViewTitleText: 0,
    			OLSKWebViewURL: 1,
    			DEBUG_OLSKWebViewDataSource: 2,
    			modPublic: 4
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$j.name
    		});
    	}

    	get OLSKModalViewTitleText() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKModalViewTitleText(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKWebViewURL() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKWebViewURL(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get DEBUG_OLSKWebViewDataSource() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set DEBUG_OLSKWebViewDataSource(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get modPublic() {
    		return this.$$.ctx[4];
    	}

    	set modPublic(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules/OLSKApropos/main.svelte generated by Svelte v3.54.0 */
    const file$k = "node_modules/OLSKApropos/main.svelte";

    // (25:0) {#if OLSKAproposFeedbackValue }
    function create_if_block_1$a(ctx) {
    	let a;
    	let t_value = main_1('OLSKAproposFeedbackButtonText') + "";
    	let t;

    	const block = {
    		c: function create() {
    			a = element("a");
    			t = text(t_value);
    			attr_dev(a, "class", "OLSKAproposFeedbackButton svelte-1koztnt");
    			attr_dev(a, "href", /*OLSKAproposFeedbackValue*/ ctx[0]);
    			add_location(a, file$k, 25, 1, 462);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, a, anchor);
    			append_dev(a, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*OLSKAproposFeedbackValue*/ 1) {
    				attr_dev(a, "href", /*OLSKAproposFeedbackValue*/ ctx[0]);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(a);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$a.name,
    		type: "if",
    		source: "(25:0) {#if OLSKAproposFeedbackValue }",
    		ctx
    	});

    	return block;
    }

    // (29:0) {#if OLSKAproposShareData }
    function create_if_block$f(ctx) {
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			button.textContent = `${main_1('OLSKAproposShareButtonText')}`;
    			attr_dev(button, "class", "OLSKAproposShareButton OLSKDecorButtonNoStyle OLSKDecorTappable svelte-1koztnt");
    			add_location(button, file$k, 29, 1, 624);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);

    			if (!mounted) {
    				dispose = listen_dev(button, "click", /*mod*/ ctx[2].InterfaceShareButtonDidClick, false, false, false);
    				mounted = true;
    			}
    		},
    		p: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$f.name,
    		type: "if",
    		source: "(29:0) {#if OLSKAproposShareData }",
    		ctx
    	});

    	return block;
    }

    function create_fragment$k(ctx) {
    	let div;
    	let t;
    	let if_block0 = /*OLSKAproposFeedbackValue*/ ctx[0] && create_if_block_1$a(ctx);
    	let if_block1 = /*OLSKAproposShareData*/ ctx[1] && create_if_block$f(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block0) if_block0.c();
    			t = space();
    			if (if_block1) if_block1.c();
    			attr_dev(div, "class", "OLSKApropos svelte-1koztnt");
    			add_location(div, file$k, 22, 0, 402);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block0) if_block0.m(div, null);
    			append_dev(div, t);
    			if (if_block1) if_block1.m(div, null);
    		},
    		p: function update(ctx, [dirty]) {
    			if (/*OLSKAproposFeedbackValue*/ ctx[0]) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);
    				} else {
    					if_block0 = create_if_block_1$a(ctx);
    					if_block0.c();
    					if_block0.m(div, t);
    				}
    			} else if (if_block0) {
    				if_block0.d(1);
    				if_block0 = null;
    			}

    			if (/*OLSKAproposShareData*/ ctx[1]) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block$f(ctx);
    					if_block1.c();
    					if_block1.m(div, null);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block0) if_block0.d();
    			if (if_block1) if_block1.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$k.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$k($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);
    	let { OLSKAproposFeedbackValue = null } = $$props;
    	let { OLSKAproposShareData = null } = $$props;

    	const mod = {
    		// INTERFACE
    		InterfaceShareButtonDidClick() {
    			if (main_1$1()) {
    				return window.alert(JSON.stringify(OLSKAproposShareData));
    			}

    			navigator.share(OLSKAproposShareData);
    		}
    	};

    	const writable_props = ['OLSKAproposFeedbackValue', 'OLSKAproposShareData'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('OLSKAproposFeedbackValue' in $$props) $$invalidate(0, OLSKAproposFeedbackValue = $$props.OLSKAproposFeedbackValue);
    		if ('OLSKAproposShareData' in $$props) $$invalidate(1, OLSKAproposShareData = $$props.OLSKAproposShareData);
    	};

    	$$self.$capture_state = () => ({
    		OLSKAproposFeedbackValue,
    		OLSKAproposShareData,
    		OLSKLocalized: main_1,
    		OLSK_SPEC_UI: main_1$1,
    		mod
    	});

    	$$self.$inject_state = $$props => {
    		if ('OLSKAproposFeedbackValue' in $$props) $$invalidate(0, OLSKAproposFeedbackValue = $$props.OLSKAproposFeedbackValue);
    		if ('OLSKAproposShareData' in $$props) $$invalidate(1, OLSKAproposShareData = $$props.OLSKAproposShareData);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [OLSKAproposFeedbackValue, OLSKAproposShareData, mod];
    }

    class Main$j extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$k, create_fragment$k, safe_not_equal, {
    			OLSKAproposFeedbackValue: 0,
    			OLSKAproposShareData: 1
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$k.name
    		});
    	}

    	get OLSKAproposFeedbackValue() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAproposFeedbackValue(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get OLSKAproposShareData() {
    		throw new Error("<Main>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set OLSKAproposShareData(value) {
    		throw new Error("<Main>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* os-app/open-play/main.svelte generated by Svelte v3.54.0 */

    const { Object: Object_1$2, window: window_1$1 } = globals;
    const file$l = "os-app/open-play/main.svelte";

    // (906:1) {#if mod._ValueFormIsVisible }
    function create_if_block_5$3(ctx) {
    	let div;
    	let p0;
    	let textarea;
    	let textarea_placeholder_value;
    	let t0;
    	let hr0;
    	let t1;
    	let p1;
    	let olsktaxonomy;
    	let t2;
    	let hr1;
    	let t3;
    	let p2;
    	let button;
    	let current;
    	let mounted;
    	let dispose;

    	olsktaxonomy = new Main$6({
    			props: {
    				OLSKTaxonomyItems: [],
    				OLSKTaxonomySuggestionItems: /*mod*/ ctx[0]._OLSKTaxonomySuggestionItems,
    				OLSKTaxonomyDispatchUpdate: /*mod*/ ctx[0].InterfaceFormDispatchTags
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div = element("div");
    			p0 = element("p");
    			textarea = element("textarea");
    			t0 = space();
    			hr0 = element("hr");
    			t1 = space();
    			p1 = element("p");
    			create_component(olsktaxonomy.$$.fragment);
    			t2 = space();
    			hr1 = element("hr");
    			t3 = space();
    			p2 = element("p");
    			button = element("button");
    			button.textContent = `${main_1('JBXPlayFormSubmitButtonText')}`;
    			attr_dev(textarea, "class", "JBXPlayFormField");
    			attr_dev(textarea, "placeholder", textarea_placeholder_value = main_1('JBXPlayFormFieldText'));
    			textarea.autofocus = true;
    			add_location(textarea, file$l, 908, 4, 27727);
    			attr_dev(p0, "class", "svelte-72udan");
    			add_location(p0, file$l, 907, 3, 27719);
    			attr_dev(hr0, "role", "presentation");
    			add_location(hr0, file$l, 911, 3, 27887);
    			attr_dev(p1, "class", "svelte-72udan");
    			add_location(p1, file$l, 913, 3, 27921);
    			attr_dev(hr1, "role", "presentation");
    			add_location(hr1, file$l, 921, 3, 28132);
    			attr_dev(button, "class", "JBXPlayFormSubmitButton");
    			add_location(button, file$l, 924, 4, 28174);
    			attr_dev(p2, "class", "svelte-72udan");
    			add_location(p2, file$l, 923, 3, 28166);
    			attr_dev(div, "class", "JBXPlayForm OLSKDecor OLSKDecorBigForm OLSKCommonEdgeBottom svelte-72udan");
    			add_location(div, file$l, 906, 2, 27642);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, p0);
    			append_dev(p0, textarea);
    			set_input_value(textarea, /*mod*/ ctx[0]._ValueFormData);
    			append_dev(div, t0);
    			append_dev(div, hr0);
    			append_dev(div, t1);
    			append_dev(div, p1);
    			mount_component(olsktaxonomy, p1, null);
    			append_dev(div, t2);
    			append_dev(div, hr1);
    			append_dev(div, t3);
    			append_dev(div, p2);
    			append_dev(p2, button);
    			current = true;
    			textarea.focus();

    			if (!mounted) {
    				dispose = [
    					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[2]),
    					listen_dev(
    						button,
    						"click",
    						function () {
    							if (is_function(/*mod*/ ctx[0].InterfaceFormSubmitButtonDidClick)) /*mod*/ ctx[0].InterfaceFormSubmitButtonDidClick.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;

    			if (dirty & /*mod*/ 1) {
    				set_input_value(textarea, /*mod*/ ctx[0]._ValueFormData);
    			}

    			const olsktaxonomy_changes = {};
    			if (dirty & /*mod*/ 1) olsktaxonomy_changes.OLSKTaxonomySuggestionItems = /*mod*/ ctx[0]._OLSKTaxonomySuggestionItems;
    			if (dirty & /*mod*/ 1) olsktaxonomy_changes.OLSKTaxonomyDispatchUpdate = /*mod*/ ctx[0].InterfaceFormDispatchTags;
    			olsktaxonomy.$set(olsktaxonomy_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olsktaxonomy.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olsktaxonomy.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_component(olsktaxonomy);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_5$3.name,
    		type: "if",
    		source: "(906:1) {#if mod._ValueFormIsVisible }",
    		ctx
    	});

    	return block;
    }

    // (930:1) {#if mod._ValueInboxIsVisible }
    function create_if_block_4$3(ctx) {
    	let div;
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div = element("div");
    			button = element("button");
    			button.textContent = `${main_1('JBXPlayClearInboxButtonText')}`;
    			attr_dev(button, "class", "JBXPlayClearInboxButton OLSKDecorPress");
    			add_location(button, file$l, 931, 3, 28418);
    			attr_dev(div, "class", "JBXPlayClearInbox svelte-72udan");
    			add_location(div, file$l, 930, 2, 28383);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			append_dev(div, button);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*mod*/ ctx[0].InterfaceClearInboxButtonDidClick)) /*mod*/ ctx[0].InterfaceClearInboxButtonDidClick.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_4$3.name,
    		type: "if",
    		source: "(930:1) {#if mod._ValueInboxIsVisible }",
    		ctx
    	});

    	return block;
    }

    // (866:0) <OLSKCatalog  bind:this={ mod._OLSKCatalog }   OLSKCollectionItemAccessibilitySummaryFunction={ JBXPlayLogic.JBXPlayAccessibilitySummary }  OLSKCollectionItemClass={ 'OLSKCommonEdgeBottom' }   _OLSKCatalogArchiveField={ 'JBXDocumentArchiveDate' }    OLSKCatalogSortFunction={ JBXPlayLogic.JBXPlaySortFunction }  OLSKCatalogIsMatch={ JBXPlayLogic.JBXPlayIsMatch }   _OLSKCatalogDispatchKey={ mod._OLSKCatalogDispatchKey }   OLSKCollectionChunkFunction={ mod.OLSKCollectionChunkFunction }  OLSKCollectionChunkKeySortFunction={ mod.OLSKCollectionChunkKeySortFunction }   OLSKCollectionDispatchClick={ mod.OLSKCollectionDispatchClick }  OLSKCollectionDispatchArrow={ mod.OLSKCollectionDispatchArrow }  OLSKCatalogDispatchDetailActivate={ mod.OLSKCatalogDispatchDetailActivate }  OLSKCatalogDispatchArchivedHide={ mod.OLSKCatalogDispatchArchivedHide }  OLSKCatalogDispatchArchivedShow={ mod.OLSKCatalogDispatchArchivedShow }  OLSKCatalogDispatchQuantity={ mod.OLSKCatalogDispatchQuantity }  OLSKCatalogDispatchStash={ mod.OLSKCatalogDispatchStash }   let:OLSKCollectionItem  >
    function create_default_slot_2(ctx) {
    	let t;
    	let if_block1_anchor;
    	let current;
    	let if_block0 = /*mod*/ ctx[0]._ValueFormIsVisible && create_if_block_5$3(ctx);
    	let if_block1 = /*mod*/ ctx[0]._ValueInboxIsVisible && create_if_block_4$3(ctx);

    	const block = {
    		c: function create() {
    			if (if_block0) if_block0.c();
    			t = space();
    			if (if_block1) if_block1.c();
    			if_block1_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			if (if_block0) if_block0.m(target, anchor);
    			insert_dev(target, t, anchor);
    			if (if_block1) if_block1.m(target, anchor);
    			insert_dev(target, if_block1_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			if (/*mod*/ ctx[0]._ValueFormIsVisible) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);

    					if (dirty & /*mod*/ 1) {
    						transition_in(if_block0, 1);
    					}
    				} else {
    					if_block0 = create_if_block_5$3(ctx);
    					if_block0.c();
    					transition_in(if_block0, 1);
    					if_block0.m(t.parentNode, t);
    				}
    			} else if (if_block0) {
    				group_outros();

    				transition_out(if_block0, 1, 1, () => {
    					if_block0 = null;
    				});

    				check_outros();
    			}

    			if (/*mod*/ ctx[0]._ValueInboxIsVisible) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block_4$3(ctx);
    					if_block1.c();
    					if_block1.m(if_block1_anchor.parentNode, if_block1_anchor);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block0);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block0);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (if_block0) if_block0.d(detaching);
    			if (detaching) detach_dev(t);
    			if (if_block1) if_block1.d(detaching);
    			if (detaching) detach_dev(if_block1_anchor);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_2.name,
    		type: "slot",
    		source: "(866:0) <OLSKCatalog  bind:this={ mod._OLSKCatalog }   OLSKCollectionItemAccessibilitySummaryFunction={ JBXPlayLogic.JBXPlayAccessibilitySummary }  OLSKCollectionItemClass={ 'OLSKCommonEdgeBottom' }   _OLSKCatalogArchiveField={ 'JBXDocumentArchiveDate' }    OLSKCatalogSortFunction={ JBXPlayLogic.JBXPlaySortFunction }  OLSKCatalogIsMatch={ JBXPlayLogic.JBXPlayIsMatch }   _OLSKCatalogDispatchKey={ mod._OLSKCatalogDispatchKey }   OLSKCollectionChunkFunction={ mod.OLSKCollectionChunkFunction }  OLSKCollectionChunkKeySortFunction={ mod.OLSKCollectionChunkKeySortFunction }   OLSKCollectionDispatchClick={ mod.OLSKCollectionDispatchClick }  OLSKCollectionDispatchArrow={ mod.OLSKCollectionDispatchArrow }  OLSKCatalogDispatchDetailActivate={ mod.OLSKCatalogDispatchDetailActivate }  OLSKCatalogDispatchArchivedHide={ mod.OLSKCatalogDispatchArchivedHide }  OLSKCatalogDispatchArchivedShow={ mod.OLSKCatalogDispatchArchivedShow }  OLSKCatalogDispatchQuantity={ mod.OLSKCatalogDispatchQuantity }  OLSKCatalogDispatchStash={ mod.OLSKCatalogDispatchStash }   let:OLSKCollectionItem  >",
    		ctx
    	});

    	return block;
    }

    // (895:1) 
    function create_OLSKNarrowToolbarTail_slot$1(ctx) {
    	let div2;
    	let button0;
    	let div0;
    	let raw0_value = OLSKUIAssets._OLSKSharedStash + "";
    	let button0_title_value;
    	let t;
    	let button1;
    	let div1;
    	let raw1_value = OLSKUIAssets._OLSKSharedCreate + "";
    	let button1_title_value;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			button0 = element("button");
    			div0 = element("div");
    			t = space();
    			button1 = element("button");
    			div1 = element("div");
    			attr_dev(div0, "class", "JBXPlayStashButtonImage");
    			add_location(div0, file$l, 896, 3, 27159);
    			attr_dev(button0, "class", "JBXPlayStashButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button0, "title", button0_title_value = main_1('JBXPlayStashButtonText'));
    			add_location(button0, file$l, 895, 2, 26965);
    			attr_dev(div1, "class", "JBXPlayToggleFormButtonImage");
    			add_location(div1, file$l, 899, 3, 27471);
    			attr_dev(button1, "class", "JBXPlayToggleFormButton OLSKDecorButtonNoStyle OLSKDecorTappable OLSKToolbarButton");
    			attr_dev(button1, "title", button1_title_value = main_1('JBXPlayToggleFormButtonText'));
    			attr_dev(button1, "accesskey", "n");
    			add_location(button1, file$l, 898, 2, 27255);
    			attr_dev(div2, "class", "OLSKToolbarElementGroup");
    			attr_dev(div2, "slot", "OLSKNarrowToolbarTail");
    			add_location(div2, file$l, 894, 1, 26896);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, button0);
    			append_dev(button0, div0);
    			div0.innerHTML = raw0_value;
    			append_dev(div2, t);
    			append_dev(div2, button1);
    			append_dev(button1, div1);
    			div1.innerHTML = raw1_value;

    			if (!mounted) {
    				dispose = [
    					listen_dev(
    						button0,
    						"click",
    						function () {
    							if (is_function(/*mod*/ ctx[0].InterfaceStashButtonDidClick)) /*mod*/ ctx[0].InterfaceStashButtonDidClick.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					),
    					listen_dev(
    						button1,
    						"click",
    						function () {
    							if (is_function(/*mod*/ ctx[0].InterfaceAddButtonDidClick)) /*mod*/ ctx[0].InterfaceAddButtonDidClick.apply(this, arguments);
    						},
    						false,
    						false,
    						false
    					)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKNarrowToolbarTail_slot$1.name,
    		type: "slot",
    		source: "(895:1) ",
    		ctx
    	});

    	return block;
    }

    // (938:1) 
    function create_OLSKCollectionItem_slot$2(ctx) {
    	let div;
    	let jbxplaylistitem;
    	let current;

    	jbxplaylistitem = new Main$5({
    			props: {
    				JBXPlayListItemObject: /*OLSKCollectionItem*/ ctx[8]
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div = element("div");
    			create_component(jbxplaylistitem.$$.fragment);
    			attr_dev(div, "slot", "OLSKCollectionItem");
    			add_location(div, file$l, 937, 1, 28628);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			mount_component(jbxplaylistitem, div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const jbxplaylistitem_changes = {};
    			if (dirty & /*OLSKCollectionItem*/ 256) jbxplaylistitem_changes.JBXPlayListItemObject = /*OLSKCollectionItem*/ ctx[8];
    			jbxplaylistitem.$set(jbxplaylistitem_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(jbxplaylistitem.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(jbxplaylistitem.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_component(jbxplaylistitem);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKCollectionItem_slot$2.name,
    		type: "slot",
    		source: "(938:1) ",
    		ctx
    	});

    	return block;
    }

    // (944:61) {#if mod._ValueRevealArchiveIsVisible }
    function create_if_block_3$5(ctx) {
    	let button;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			button = element("button");
    			button.textContent = `${main_1('JBXPlayRevealArchiveButtonText')}`;
    			attr_dev(button, "class", "JBXPlayRevealArchiveButton OLSKDecorPress");
    			add_location(button, file$l, 944, 2, 28867);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, button, anchor);

    			if (!mounted) {
    				dispose = listen_dev(
    					button,
    					"click",
    					function () {
    						if (is_function(/*mod*/ ctx[0]._OLSKCatalog.modPublic.OLSKCatalogRevealArchive)) /*mod*/ ctx[0]._OLSKCatalog.modPublic.OLSKCatalogRevealArchive.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(button);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_3$5.name,
    		type: "if",
    		source: "(944:61) {#if mod._ValueRevealArchiveIsVisible }",
    		ctx
    	});

    	return block;
    }

    // (944:1) 
    function create_OLSKNarrowBodyTail_slot$1(ctx) {
    	let div;
    	let if_block = /*mod*/ ctx[0]._ValueRevealArchiveIsVisible && create_if_block_3$5(ctx);

    	const block = {
    		c: function create() {
    			div = element("div");
    			if (if_block) if_block.c();
    			attr_dev(div, "class", "JBXPlayRevealArchive svelte-72udan");
    			attr_dev(div, "slot", "OLSKNarrowBodyTail");
    			add_location(div, file$l, 943, 1, 28765);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			if (if_block) if_block.m(div, null);
    		},
    		p: function update(ctx, dirty) {
    			if (/*mod*/ ctx[0]._ValueRevealArchiveIsVisible) {
    				if (if_block) {
    					if_block.p(ctx, dirty);
    				} else {
    					if_block = create_if_block_3$5(ctx);
    					if_block.c();
    					if_block.m(div, null);
    				}
    			} else if (if_block) {
    				if_block.d(1);
    				if_block = null;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			if (if_block) if_block.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKNarrowBodyTail_slot$1.name,
    		type: "slot",
    		source: "(944:1) ",
    		ctx
    	});

    	return block;
    }

    // (950:1) 
    function create_OLSKCatalogDetailContent_slot(ctx) {
    	let div;
    	let jbxplaydetail;
    	let current;

    	let jbxplaydetail_props = {
    		JBXPlayDetailItem: /*OLSKCatalogItemSelected*/ ctx[9],
    		OLSKTaxonomySuggestionItems: /*mod*/ ctx[0].OLSKTaxonomySuggestionItems,
    		JBXPlayDetailDispatchBack: /*mod*/ ctx[0].JBXPlayDetailDispatchBack,
    		JBXPlayDetailDispatchArchive: /*mod*/ ctx[0].JBXPlayDetailDispatchArchive,
    		JBXPlayDetailDispatchUnarchive: /*mod*/ ctx[0].JBXPlayDetailDispatchUnarchive,
    		JBXPlayDetailDispatchFetch: /*mod*/ ctx[0].JBXPlayDetailDispatchFetch,
    		JBXPlayDetailDispatchUpdate: /*mod*/ ctx[0].JBXPlayDetailDispatchUpdate,
    		JBXPlayDetailDispatchDiscard: /*mod*/ ctx[0].JBXPlayDetailDispatchDiscard,
    		JBXPlayDetailDispatchQueue: /*mod*/ ctx[0].JBXPlayDetailDispatchQueue
    	};

    	jbxplaydetail = new Main$7({
    			props: jbxplaydetail_props,
    			$$inline: true
    		});

    	/*jbxplaydetail_binding*/ ctx[1](jbxplaydetail);

    	const block = {
    		c: function create() {
    			div = element("div");
    			create_component(jbxplaydetail.$$.fragment);
    			attr_dev(div, "class", "JBXPlayDetailContainer");
    			attr_dev(div, "slot", "OLSKCatalogDetailContent");
    			add_location(div, file$l, 949, 1, 29085);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			mount_component(jbxplaydetail, div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const jbxplaydetail_changes = {};
    			if (dirty & /*OLSKCatalogItemSelected*/ 512) jbxplaydetail_changes.JBXPlayDetailItem = /*OLSKCatalogItemSelected*/ ctx[9];
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.OLSKTaxonomySuggestionItems = /*mod*/ ctx[0].OLSKTaxonomySuggestionItems;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchBack = /*mod*/ ctx[0].JBXPlayDetailDispatchBack;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchArchive = /*mod*/ ctx[0].JBXPlayDetailDispatchArchive;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchUnarchive = /*mod*/ ctx[0].JBXPlayDetailDispatchUnarchive;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchFetch = /*mod*/ ctx[0].JBXPlayDetailDispatchFetch;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchUpdate = /*mod*/ ctx[0].JBXPlayDetailDispatchUpdate;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchDiscard = /*mod*/ ctx[0].JBXPlayDetailDispatchDiscard;
    			if (dirty & /*mod*/ 1) jbxplaydetail_changes.JBXPlayDetailDispatchQueue = /*mod*/ ctx[0].JBXPlayDetailDispatchQueue;
    			jbxplaydetail.$set(jbxplaydetail_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(jbxplaydetail.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(jbxplaydetail.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			/*jbxplaydetail_binding*/ ctx[1](null);
    			destroy_component(jbxplaydetail);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_OLSKCatalogDetailContent_slot.name,
    		type: "slot",
    		source: "(950:1) ",
    		ctx
    	});

    	return block;
    }

    // (971:1) {#if !mod._ValueCloudToolbarHidden }
    function create_if_block_2$8(ctx) {
    	let div2;
    	let div0;
    	let t;
    	let div1;
    	let olskcloud;
    	let current;

    	olskcloud = new Main$f({
    			props: {
    				OLSKCloudErrorText: /*mod*/ ctx[0]._ValueCloudErrorText,
    				OLSKCloudDispatchRenew: /*mod*/ ctx[0].OLSKCloudDispatchRenew,
    				OLSKCloudFormDispatchSubmit: /*mod*/ ctx[0].OLSKCloudFormDispatchSubmit,
    				OLSKCloudStatusIdentityText: /*mod*/ ctx[0]._ValueCloudIdentity,
    				OLSKCloudStatusIsSyncing: /*mod*/ ctx[0]._ValueIsSyncing,
    				OLSKCloudStatusDispatchSyncStart: /*mod*/ ctx[0].OLSKCloudStatusDispatchSyncStart,
    				OLSKCloudStatusDispatchSyncStop: /*mod*/ ctx[0].OLSKCloudStatusDispatchSyncStop,
    				OLSKCloudStatusDispatchDisconnect: /*mod*/ ctx[0].OLSKCloudStatusDispatchDisconnect
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div2 = element("div");
    			div0 = element("div");
    			t = space();
    			div1 = element("div");
    			create_component(olskcloud.$$.fragment);
    			attr_dev(div0, "class", "OLSKToolbarElementGroup");
    			add_location(div0, file$l, 972, 3, 30048);
    			attr_dev(div1, "class", "OLSKToolbarElementGroup");
    			add_location(div1, file$l, 975, 3, 30100);
    			attr_dev(div2, "class", "JBXPlayCloudToolbar OLSKToolbar OLSKToolbarJustify OLSKCommonEdgeTop");
    			add_location(div2, file$l, 971, 2, 29962);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div2, anchor);
    			append_dev(div2, div0);
    			append_dev(div2, t);
    			append_dev(div2, div1);
    			mount_component(olskcloud, div1, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskcloud_changes = {};
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudErrorText = /*mod*/ ctx[0]._ValueCloudErrorText;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudDispatchRenew = /*mod*/ ctx[0].OLSKCloudDispatchRenew;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudFormDispatchSubmit = /*mod*/ ctx[0].OLSKCloudFormDispatchSubmit;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudStatusIdentityText = /*mod*/ ctx[0]._ValueCloudIdentity;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudStatusIsSyncing = /*mod*/ ctx[0]._ValueIsSyncing;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudStatusDispatchSyncStart = /*mod*/ ctx[0].OLSKCloudStatusDispatchSyncStart;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudStatusDispatchSyncStop = /*mod*/ ctx[0].OLSKCloudStatusDispatchSyncStop;
    			if (dirty & /*mod*/ 1) olskcloud_changes.OLSKCloudStatusDispatchDisconnect = /*mod*/ ctx[0].OLSKCloudStatusDispatchDisconnect;
    			olskcloud.$set(olskcloud_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskcloud.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskcloud.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div2);
    			destroy_component(olskcloud);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_2$8.name,
    		type: "if",
    		source: "(971:1) {#if !mod._ValueCloudToolbarHidden }",
    		ctx
    	});

    	return block;
    }

    // (1007:1) {#if !OLSK_SPEC_UI()}
    function create_if_block_1$b(ctx) {
    	let olskserviceworkerview;
    	let current;

    	olskserviceworkerview = new Main$b({
    			props: {
    				OLSKServiceWorkerRegistrationRoute: window.OLSKCanonical('JBXServiceWorkerRoute')
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(olskserviceworkerview.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskserviceworkerview, target, anchor);
    			current = true;
    		},
    		p: noop,
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskserviceworkerview.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskserviceworkerview.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olskserviceworkerview, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1$b.name,
    		type: "if",
    		source: "(1007:1) {#if !OLSK_SPEC_UI()}",
    		ctx
    	});

    	return block;
    }

    // (1014:0) {#if !!mod._ValueCloudIdentity }
    function create_if_block$g(ctx) {
    	let olskwebview;
    	let current;

    	let olskwebview_props = {
    		OLSKModalViewTitleText: main_1('OLSKFundWebViewTitleText'),
    		OLSKWebViewURL: /*mod*/ ctx[0]._ValueFundURL,
    		DEBUG_OLSKWebViewDataSource: main_1$1()
    	};

    	olskwebview = new Main$i({ props: olskwebview_props, $$inline: true });
    	/*olskwebview_binding*/ ctx[4](olskwebview);

    	const block = {
    		c: function create() {
    			create_component(olskwebview.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskwebview, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskwebview_changes = {};
    			if (dirty & /*mod*/ 1) olskwebview_changes.OLSKWebViewURL = /*mod*/ ctx[0]._ValueFundURL;
    			olskwebview.$set(olskwebview_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskwebview.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskwebview.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			/*olskwebview_binding*/ ctx[4](null);
    			destroy_component(olskwebview, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block$g.name,
    		type: "if",
    		source: "(1014:0) {#if !!mod._ValueCloudIdentity }",
    		ctx
    	});

    	return block;
    }

    // (1018:0) <OLSKModalView OLSKModalViewTitleText={ OLSKLocalized('OLSKAproposHeadingText') } bind:this={ mod._OLSKModalView } OLSKModalViewIsCapped={ true }>
    function create_default_slot_1(ctx) {
    	let olskapropos;
    	let current;

    	olskapropos = new Main$j({
    			props: {
    				OLSKAproposFeedbackValue: `javascript:window.location.href = window.atob('${window.btoa(OLSKString.OLSKStringFormatted(window.atob('bWFpbHRvOmErJUBAcmNyZWF0aXYuY29t'), 'RP_009' + (/*mod*/ ctx[0]._ValueFundClue
				? '+' + /*mod*/ ctx[0]._ValueFundClue
				: '')))}')`
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			create_component(olskapropos.$$.fragment);
    		},
    		m: function mount(target, anchor) {
    			mount_component(olskapropos, target, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const olskapropos_changes = {};

    			if (dirty & /*mod*/ 1) olskapropos_changes.OLSKAproposFeedbackValue = `javascript:window.location.href = window.atob('${window.btoa(OLSKString.OLSKStringFormatted(window.atob('bWFpbHRvOmErJUBAcmNyZWF0aXYuY29t'), 'RP_009' + (/*mod*/ ctx[0]._ValueFundClue
			? '+' + /*mod*/ ctx[0]._ValueFundClue
			: '')))}')`;

    			olskapropos.$set(olskapropos_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskapropos.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskapropos.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			destroy_component(olskapropos, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot_1.name,
    		type: "slot",
    		source: "(1018:0) <OLSKModalView OLSKModalViewTitleText={ OLSKLocalized('OLSKAproposHeadingText') } bind:this={ mod._OLSKModalView } OLSKModalViewIsCapped={ true }>",
    		ctx
    	});

    	return block;
    }

    // (1024:0) <OLSKModalView OLSKModalViewTitleText={ OLSKLocalized('JBXPlayShareModalTitleText') } bind:this={ mod._JBXPlayShareModal }>
    function create_default_slot$4(ctx) {
    	let div;
    	let jbxplayshare;
    	let current;

    	jbxplayshare = new Main$8({
    			props: {
    				JBXPlayShareItems: /*mod*/ ctx[0]._JBXPlayShareItems
    			},
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			div = element("div");
    			create_component(jbxplayshare.$$.fragment);
    			add_location(div, file$l, 1024, 1, 32535);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);
    			mount_component(jbxplayshare, div, null);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const jbxplayshare_changes = {};
    			if (dirty & /*mod*/ 1) jbxplayshare_changes.JBXPlayShareItems = /*mod*/ ctx[0]._JBXPlayShareItems;
    			jbxplayshare.$set(jbxplayshare_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(jbxplayshare.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(jbxplayshare.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			destroy_component(jbxplayshare);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_default_slot$4.name,
    		type: "slot",
    		source: "(1024:0) <OLSKModalView OLSKModalViewTitleText={ OLSKLocalized('JBXPlayShareModalTitleText') } bind:this={ mod._JBXPlayShareModal }>",
    		ctx
    	});

    	return block;
    }

    function create_fragment$l(ctx) {
    	let div1;
    	let div0;
    	let olskcatalog;
    	let t0;
    	let footer;
    	let t1;
    	let olskapptoolbar;
    	let t2;
    	let olskinstall;
    	let t3;
    	let show_if = !main_1$1();
    	let t4;
    	let t5;
    	let olskmodalview0;
    	let t6;
    	let olskmodalview1;
    	let current;
    	let mounted;
    	let dispose;

    	let olskcatalog_props = {
    		OLSKCollectionItemAccessibilitySummaryFunction: mod$2.JBXPlayAccessibilitySummary,
    		OLSKCollectionItemClass: 'OLSKCommonEdgeBottom',
    		_OLSKCatalogArchiveField: 'JBXDocumentArchiveDate',
    		OLSKCatalogSortFunction: mod$2.JBXPlaySortFunction,
    		OLSKCatalogIsMatch: mod$2.JBXPlayIsMatch,
    		_OLSKCatalogDispatchKey: /*mod*/ ctx[0]._OLSKCatalogDispatchKey,
    		OLSKCollectionChunkFunction: /*mod*/ ctx[0].OLSKCollectionChunkFunction,
    		OLSKCollectionChunkKeySortFunction: /*mod*/ ctx[0].OLSKCollectionChunkKeySortFunction,
    		OLSKCollectionDispatchClick: /*mod*/ ctx[0].OLSKCollectionDispatchClick,
    		OLSKCollectionDispatchArrow: /*mod*/ ctx[0].OLSKCollectionDispatchArrow,
    		OLSKCatalogDispatchDetailActivate: /*mod*/ ctx[0].OLSKCatalogDispatchDetailActivate,
    		OLSKCatalogDispatchArchivedHide: /*mod*/ ctx[0].OLSKCatalogDispatchArchivedHide,
    		OLSKCatalogDispatchArchivedShow: /*mod*/ ctx[0].OLSKCatalogDispatchArchivedShow,
    		OLSKCatalogDispatchQuantity: /*mod*/ ctx[0].OLSKCatalogDispatchQuantity,
    		OLSKCatalogDispatchStash: /*mod*/ ctx[0].OLSKCatalogDispatchStash,
    		$$slots: {
    			OLSKCatalogDetailContent: [
    				create_OLSKCatalogDetailContent_slot,
    				({ OLSKCatalogItemSelected, OLSKCollectionItem }) => ({
    					9: OLSKCatalogItemSelected,
    					8: OLSKCollectionItem
    				}),
    				({ OLSKCatalogItemSelected, OLSKCollectionItem }) => (OLSKCatalogItemSelected ? 512 : 0) | (OLSKCollectionItem ? 256 : 0)
    			],
    			OLSKNarrowBodyTail: [
    				create_OLSKNarrowBodyTail_slot$1,
    				({ OLSKCollectionItem }) => ({ 8: OLSKCollectionItem }),
    				({ OLSKCollectionItem }) => OLSKCollectionItem ? 256 : 0
    			],
    			OLSKCollectionItem: [
    				create_OLSKCollectionItem_slot$2,
    				({ OLSKCollectionItem }) => ({ 8: OLSKCollectionItem }),
    				({ OLSKCollectionItem }) => OLSKCollectionItem ? 256 : 0
    			],
    			OLSKNarrowToolbarTail: [
    				create_OLSKNarrowToolbarTail_slot$1,
    				({ OLSKCollectionItem }) => ({ 8: OLSKCollectionItem }),
    				({ OLSKCollectionItem }) => OLSKCollectionItem ? 256 : 0
    			],
    			default: [
    				create_default_slot_2,
    				({ OLSKCollectionItem }) => ({ 8: OLSKCollectionItem }),
    				({ OLSKCollectionItem }) => OLSKCollectionItem ? 256 : 0
    			]
    		},
    		$$scope: { ctx }
    	};

    	olskcatalog = new Main$4({ props: olskcatalog_props, $$inline: true });
    	/*olskcatalog_binding*/ ctx[3](olskcatalog);
    	let if_block0 = !/*mod*/ ctx[0]._ValueCloudToolbarHidden && create_if_block_2$8(ctx);

    	olskapptoolbar = new Main$a({
    			props: {
    				OLSKAppToolbarDispatchApropos: /*mod*/ ctx[0].OLSKAppToolbarDispatchApropos,
    				OLSKAppToolbarDispatchTongue: /*mod*/ ctx[0].OLSKAppToolbarDispatchTongue,
    				OLSKAppToolbarGuideURL: window.OLSKCanonical('JBXGuideRoute'),
    				OLSKAppToolbarFundShowProgress: /*mod*/ ctx[0]._ValueOLSKFundProgress,
    				OLSKAppToolbarFundLimitText: /*mod*/ ctx[0]._ValueDocumentRemainder,
    				OLSKAppToolbarCloudConnected: !!/*mod*/ ctx[0]._ValueCloudIdentity,
    				OLSKAppToolbarCloudOffline: /*mod*/ ctx[0]._ValueCloudIsOffline,
    				OLSKAppToolbarCloudError: !!/*mod*/ ctx[0]._ValueCloudErrorText,
    				OLSKAppToolbarDispatchFund: /*mod*/ ctx[0]._ValueOLSKFundGrant || main$i.OLSKFundResponseIsPresent()
    				? null
    				: /*mod*/ ctx[0].OLSKAppToolbarDispatchFund,
    				OLSKAppToolbarDispatchCloud: /*mod*/ ctx[0].OLSKAppToolbarDispatchCloud,
    				OLSKAppToolbarDispatchLauncher: /*mod*/ ctx[0].OLSKAppToolbarDispatchLauncher
    			},
    			$$inline: true
    		});

    	olskinstall = new Main$c({ $$inline: true });
    	let if_block1 = show_if && create_if_block_1$b(ctx);
    	let if_block2 = !!/*mod*/ ctx[0]._ValueCloudIdentity && create_if_block$g(ctx);

    	let olskmodalview0_props = {
    		OLSKModalViewTitleText: main_1('OLSKAproposHeadingText'),
    		OLSKModalViewIsCapped: true,
    		$$slots: { default: [create_default_slot_1] },
    		$$scope: { ctx }
    	};

    	olskmodalview0 = new Main$h({
    			props: olskmodalview0_props,
    			$$inline: true
    		});

    	/*olskmodalview0_binding*/ ctx[5](olskmodalview0);

    	let olskmodalview1_props = {
    		OLSKModalViewTitleText: main_1('JBXPlayShareModalTitleText'),
    		$$slots: { default: [create_default_slot$4] },
    		$$scope: { ctx }
    	};

    	olskmodalview1 = new Main$h({
    			props: olskmodalview1_props,
    			$$inline: true
    		});

    	/*olskmodalview1_binding*/ ctx[6](olskmodalview1);

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			div0 = element("div");
    			create_component(olskcatalog.$$.fragment);
    			t0 = space();
    			footer = element("footer");
    			if (if_block0) if_block0.c();
    			t1 = space();
    			create_component(olskapptoolbar.$$.fragment);
    			t2 = space();
    			create_component(olskinstall.$$.fragment);
    			t3 = space();
    			if (if_block1) if_block1.c();
    			t4 = space();
    			if (if_block2) if_block2.c();
    			t5 = space();
    			create_component(olskmodalview0.$$.fragment);
    			t6 = space();
    			create_component(olskmodalview1.$$.fragment);
    			attr_dev(div0, "class", "OLSKViewportContent");
    			add_location(div0, file$l, 863, 0, 25769);
    			attr_dev(footer, "class", "JBXPlayViewportFooter OLSKMobileViewFooter");
    			add_location(footer, file$l, 968, 0, 29861);
    			attr_dev(div1, "class", "JBXPlay OLSKViewport OLSKDecorFormBlend");
    			toggle_class(div1, "OLSKIsLoading", /*mod*/ ctx[0]._ValueIsLoading);
    			toggle_class(div1, "OLSKIsDemoing", /*mod*/ ctx[0]._IsRunningDemo);
    			add_location(div1, file$l, 861, 0, 25627);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, div0);
    			mount_component(olskcatalog, div0, null);
    			append_dev(div1, t0);
    			append_dev(div1, footer);
    			if (if_block0) if_block0.m(footer, null);
    			append_dev(footer, t1);
    			mount_component(olskapptoolbar, footer, null);
    			append_dev(footer, t2);
    			mount_component(olskinstall, footer, null);
    			append_dev(footer, t3);
    			if (if_block1) if_block1.m(footer, null);
    			insert_dev(target, t4, anchor);
    			if (if_block2) if_block2.m(target, anchor);
    			insert_dev(target, t5, anchor);
    			mount_component(olskmodalview0, target, anchor);
    			insert_dev(target, t6, anchor);
    			mount_component(olskmodalview1, target, anchor);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(
    					window_1$1,
    					"keydown",
    					function () {
    						if (is_function(/*mod*/ ctx[0].InterfaceWindowDidKeydown)) /*mod*/ ctx[0].InterfaceWindowDidKeydown.apply(this, arguments);
    					},
    					false,
    					false,
    					false
    				);

    				mounted = true;
    			}
    		},
    		p: function update(new_ctx, [dirty]) {
    			ctx = new_ctx;
    			const olskcatalog_changes = {};
    			if (dirty & /*mod*/ 1) olskcatalog_changes._OLSKCatalogDispatchKey = /*mod*/ ctx[0]._OLSKCatalogDispatchKey;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCollectionChunkFunction = /*mod*/ ctx[0].OLSKCollectionChunkFunction;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCollectionChunkKeySortFunction = /*mod*/ ctx[0].OLSKCollectionChunkKeySortFunction;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCollectionDispatchClick = /*mod*/ ctx[0].OLSKCollectionDispatchClick;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCollectionDispatchArrow = /*mod*/ ctx[0].OLSKCollectionDispatchArrow;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCatalogDispatchDetailActivate = /*mod*/ ctx[0].OLSKCatalogDispatchDetailActivate;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCatalogDispatchArchivedHide = /*mod*/ ctx[0].OLSKCatalogDispatchArchivedHide;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCatalogDispatchArchivedShow = /*mod*/ ctx[0].OLSKCatalogDispatchArchivedShow;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCatalogDispatchQuantity = /*mod*/ ctx[0].OLSKCatalogDispatchQuantity;
    			if (dirty & /*mod*/ 1) olskcatalog_changes.OLSKCatalogDispatchStash = /*mod*/ ctx[0].OLSKCatalogDispatchStash;

    			if (dirty & /*$$scope, OLSKCatalogItemSelected, mod, OLSKCollectionItem*/ 1793) {
    				olskcatalog_changes.$$scope = { dirty, ctx };
    			}

    			olskcatalog.$set(olskcatalog_changes);

    			if (!/*mod*/ ctx[0]._ValueCloudToolbarHidden) {
    				if (if_block0) {
    					if_block0.p(ctx, dirty);

    					if (dirty & /*mod*/ 1) {
    						transition_in(if_block0, 1);
    					}
    				} else {
    					if_block0 = create_if_block_2$8(ctx);
    					if_block0.c();
    					transition_in(if_block0, 1);
    					if_block0.m(footer, t1);
    				}
    			} else if (if_block0) {
    				group_outros();

    				transition_out(if_block0, 1, 1, () => {
    					if_block0 = null;
    				});

    				check_outros();
    			}

    			const olskapptoolbar_changes = {};
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarDispatchApropos = /*mod*/ ctx[0].OLSKAppToolbarDispatchApropos;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarDispatchTongue = /*mod*/ ctx[0].OLSKAppToolbarDispatchTongue;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarFundShowProgress = /*mod*/ ctx[0]._ValueOLSKFundProgress;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarFundLimitText = /*mod*/ ctx[0]._ValueDocumentRemainder;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarCloudConnected = !!/*mod*/ ctx[0]._ValueCloudIdentity;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarCloudOffline = /*mod*/ ctx[0]._ValueCloudIsOffline;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarCloudError = !!/*mod*/ ctx[0]._ValueCloudErrorText;

    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarDispatchFund = /*mod*/ ctx[0]._ValueOLSKFundGrant || main$i.OLSKFundResponseIsPresent()
    			? null
    			: /*mod*/ ctx[0].OLSKAppToolbarDispatchFund;

    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarDispatchCloud = /*mod*/ ctx[0].OLSKAppToolbarDispatchCloud;
    			if (dirty & /*mod*/ 1) olskapptoolbar_changes.OLSKAppToolbarDispatchLauncher = /*mod*/ ctx[0].OLSKAppToolbarDispatchLauncher;
    			olskapptoolbar.$set(olskapptoolbar_changes);
    			if (show_if) if_block1.p(ctx, dirty);

    			if (!current || dirty & /*mod*/ 1) {
    				toggle_class(div1, "OLSKIsLoading", /*mod*/ ctx[0]._ValueIsLoading);
    			}

    			if (!current || dirty & /*mod*/ 1) {
    				toggle_class(div1, "OLSKIsDemoing", /*mod*/ ctx[0]._IsRunningDemo);
    			}

    			if (!!/*mod*/ ctx[0]._ValueCloudIdentity) {
    				if (if_block2) {
    					if_block2.p(ctx, dirty);

    					if (dirty & /*mod*/ 1) {
    						transition_in(if_block2, 1);
    					}
    				} else {
    					if_block2 = create_if_block$g(ctx);
    					if_block2.c();
    					transition_in(if_block2, 1);
    					if_block2.m(t5.parentNode, t5);
    				}
    			} else if (if_block2) {
    				group_outros();

    				transition_out(if_block2, 1, 1, () => {
    					if_block2 = null;
    				});

    				check_outros();
    			}

    			const olskmodalview0_changes = {};

    			if (dirty & /*$$scope, mod*/ 1025) {
    				olskmodalview0_changes.$$scope = { dirty, ctx };
    			}

    			olskmodalview0.$set(olskmodalview0_changes);
    			const olskmodalview1_changes = {};

    			if (dirty & /*$$scope, mod*/ 1025) {
    				olskmodalview1_changes.$$scope = { dirty, ctx };
    			}

    			olskmodalview1.$set(olskmodalview1_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(olskcatalog.$$.fragment, local);
    			transition_in(if_block0);
    			transition_in(olskapptoolbar.$$.fragment, local);
    			transition_in(olskinstall.$$.fragment, local);
    			transition_in(if_block1);
    			transition_in(if_block2);
    			transition_in(olskmodalview0.$$.fragment, local);
    			transition_in(olskmodalview1.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(olskcatalog.$$.fragment, local);
    			transition_out(if_block0);
    			transition_out(olskapptoolbar.$$.fragment, local);
    			transition_out(olskinstall.$$.fragment, local);
    			transition_out(if_block1);
    			transition_out(if_block2);
    			transition_out(olskmodalview0.$$.fragment, local);
    			transition_out(olskmodalview1.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			/*olskcatalog_binding*/ ctx[3](null);
    			destroy_component(olskcatalog);
    			if (if_block0) if_block0.d();
    			destroy_component(olskapptoolbar);
    			destroy_component(olskinstall);
    			if (if_block1) if_block1.d();
    			if (detaching) detach_dev(t4);
    			if (if_block2) if_block2.d(detaching);
    			if (detaching) detach_dev(t5);
    			/*olskmodalview0_binding*/ ctx[5](null);
    			destroy_component(olskmodalview0, detaching);
    			if (detaching) detach_dev(t6);
    			/*olskmodalview1_binding*/ ctx[6](null);
    			destroy_component(olskmodalview1, detaching);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$l.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$l($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Main', slots, []);

    	const uSerial2 = function (inputData) {
    		return inputData.reduce(
    			async function (coll, e) {
    				return (await coll).concat(await new Promise(function (res, rej) {
    						try {
    							res(e());
    						} catch(error) {
    							rej(error);
    						}
    					}));
    			},
    			Promise.resolve([])
    		);
    	};

    	const mod = {
    		// VALUE
    		_ValueIsLoading: true,
    		_ValueFormIsVisible: false,
    		_ValueFormData: '',
    		_ValueFormDataTags: [],
    		_ValueInboxIsVisible: false,
    		_ValueRevealArchiveIsVisible: false,
    		async ValueSetting(param1, param2) {
    			await mod._ValueZDRWrap.App.JBXSetting.ZDRModelWriteObject({
    				JBXSettingKey: param1,
    				JBXSettingValue: param2
    			});

    			$$invalidate(0, mod._ValueSettingsAll[param1] = param2, mod);
    		},
    		_ValueCloudToolbarHidden: true,
    		_ValueSaveDocumentThrottleMap: {},
    		_IsRunningDemo: false,
    		OLSKTaxonomySuggestionItems: [],
    		// DATA
    		DataSetting(inputData) {
    			return mod._ValueSettingsAll[inputData];
    		},
    		DataNavigator() {
    			return navigator.serviceWorker
    			? navigator
    			: { serviceWorker: {} };
    		},
    		DataIsEligible(inputData = {}) {
    			return main$i.OLSKFundIsEligible(Object.assign(
    				{
    					ParamMinimumTier: 1,
    					ParamCurrentProject: 'RP_009',
    					ParamBundleProjects: ['FakeBundleProject'],
    					ParamGrantTier: main$i.OLSKFundTier('0:10 10,100 50,500 250', mod._ValueOLSKFundGrant),
    					ParamGrantProject: mod._ValueOLSKFundGrant
    					? mod._ValueOLSKFundGrant.OLSKPactGrantProject
    					: ''
    				},
    				inputData
    			));
    		},
    		DataPlayRecipes() {
    			const outputData = [];

    			if (main_1$1()) {
    				outputData.push(...[
    					{
    						LCHRecipeName: 'FakeZDRSchemaDispatchSyncCreateDocument',
    						LCHRecipeCallback: async function FakeZDRSchemaDispatchSyncCreateDocument() {
    							return mod.ZDRSchemaDispatchSyncCreateDocument(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentCreate(mod.DataStubDocumentObject({
    								JBXDocumentNotes: 'FakeZDRSchemaDispatchSyncCreateDocument'
    							})));
    						}
    					},
    					{
    						LCHRecipeName: 'FakeZDRSchemaDispatchSyncUpdateDocument',
    						LCHRecipeCallback: async function FakeZDRSchemaDispatchSyncUpdateDocument() {
    							return mod.ZDRSchemaDispatchSyncUpdateDocument(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentUpdate(Object.assign(
    								mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll().filter(function (e) {
    									return e.JBXDocumentNotes.match('FakeZDRSchemaDispatchSync');
    								}).pop(),
    								{
    									JBXDocumentNotes: 'FakeZDRSchemaDispatchSyncUpdateDocument'
    								}
    							)));
    						}
    					},
    					{
    						LCHRecipeName: 'FakeZDRSchemaDispatchSyncDeleteDocument',
    						LCHRecipeCallback: async function FakeZDRSchemaDispatchSyncDeleteDocument() {
    							return mod.ZDRSchemaDispatchSyncDeleteDocument(await mod._ValueZDRWrap.App.JBXDocument.ZDRModelDeleteObject(mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll().filter(function (e) {
    								return e.JBXDocumentNotes.match('FakeZDRSchemaDispatchSync');
    							}).pop()));
    						}
    					},
    					{
    						LCHRecipeName: 'FakeZDRSchemaDispatchSyncConflictDocument',
    						LCHRecipeCallback: async function FakeZDRSchemaDispatchSyncConflictDocument() {
    							const item = mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll().filter(function (e) {
    								return e.JBXDocumentNotes.match('FakeZDRSchemaDispatchSyncConflictDocument');
    							}).pop();

    							return mod.ZDRSchemaDispatchSyncConflictDocument({
    								origin: 'conflict',
    								oldValue: JSON.parse(JSON.stringify(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentUpdate(Object.assign(Object.assign({}, item), {
    									JBXDocumentNotes: item.JBXDocumentNotes + '-local'
    								})))),
    								newValue: JSON.parse(JSON.stringify(Object.assign(Object.assign({}, item), {
    									JBXDocumentNotes: item.JBXDocumentNotes + '-remote'
    								})))
    							});
    						}
    					},
    					{
    						LCHRecipeName: 'JBXPlayLauncherFakeCreateTaggedItem',
    						LCHRecipeCallback: async function JBXPlayLauncherFakeCreateTaggedItem() {
    							return mod.ZDRSchemaDispatchSyncCreateDocument(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentCreate(mod.DataStubDocumentObject({ JBXDocumentTags: [window.prompt()] })));
    						}
    					},
    					{
    						LCHRecipeName: 'FakeFundDocumentLimit',
    						LCHRecipeCallback: async function FakeFundDocumentLimit() {
    							await Promise.all(Array.from(Array(mod._ValueDocumentRemainder)).map(function (e) {
    								return mod._ValueZDRWrap.App.JBXDocument.JBXDocumentCreate({
    									JBXDocumentNotes: Math.random().toString()
    								});
    							}));

    							return mod.SetupCatalog();
    						}
    					}
    				]);
    			}

    			outputData.push(...main$j.ZDRRecipes({
    				ParamMod: mod,
    				ParamSpecUI: main_1$1()
    			}));

    			outputData.push(...main$d.OLSKTransportRecipes({
    				OLSKLocalized: main_1,
    				OLSKTransportDispatchImportJSON: mod.OLSKTransportDispatchImportJSON,
    				OLSKTransportDispatchExportInput: mod.OLSKTransportDispatchExportInput,
    				ParamSpecUI: main_1$1()
    			}));

    			if (mod._ValueZDRWrap.ZDRStorageProtocol === main$j.ZDRProtocolRemoteStorage()) {
    				outputData.push(...main$2.OLSKRemoteStorageRecipes({
    					ParamStorage: mod._ValueZDRWrap.ZDRStorageClient(),
    					OLSKLocalized: main_1,
    					ParamMod: mod,
    					ParamSpecUI: main_1$1()
    				}));
    			}

    			outputData.push(...main$i.OLSKFundRecipes({
    				OLSKLocalized: main_1,
    				ParamConnected: !!mod._ValueCloudIdentity,
    				ParamAuthorized: !!mod._ValueFundClue,
    				OLSKFundDispatchGrant: mod.OLSKFundDispatchGrant,
    				OLSKFundDispatchPersist: mod.OLSKFundDispatchPersist,
    				ParamMod: mod,
    				ParamSpecUI: main_1$1()
    			}));

    			outputData.push(...main_1$3.OLSKServiceWorkerRecipes(window, mod.DataNavigator(), main_1, main_1$1()));

    			if (mod._JBXPlayDetail) {
    				outputData.push(...mod._JBXPlayDetail.modPublic.JBXPlayDetailRecipes());
    			}

    			if (mod._ValueRevealArchiveIsVisible) {
    				outputData.push({
    					LCHRecipeSignature: 'JBXPlayLauncherItemRevealArchive',
    					LCHRecipeName: main_1('JBXPlayRevealArchiveButtonText'),
    					LCHRecipeCallback: function JBXPlayLauncherItemRevealArchive() {
    						mod._OLSKCatalog.modPublic.OLSKCatalogRevealArchive();
    					}
    				});
    			}

    			return outputData;
    		},
    		DataIsMobile() {
    			return window.innerWidth <= 760;
    		},
    		DataStubDocumentObject(inputData = {}) {
    			return Object.assign({ JBXDocumentNotes: '' }, inputData);
    		},
    		DataStubDocumentObjectValid(inputData = {}) {
    			return mod.DataStubDocumentObject(Object.assign(
    				{
    					JBXDocumentID: Math.random().toString(),
    					JBXDocumentCreationDate: new Date(),
    					JBXDocumentModificationDate: new Date()
    				},
    				inputData
    			));
    		},
    		// INTERFACE
    		InterfaceAddButtonDidClick() {
    			if (!mod._ValueFormIsVisible && mod._ValueDocumentRemainder < 1 && !mod.DataIsEligible()) {
    				return mod.OLSKFundDocumentGate();
    			}

    			$$invalidate(0, mod._ValueFormIsVisible = !mod._ValueFormIsVisible, mod);
    		},
    		InterfaceFormDispatchTags(inputData) {
    			$$invalidate(0, mod._ValueFormDataTags = inputData, mod);
    		},
    		InterfaceFormSubmitButtonDidClick(event) {
    			event.preventDefault();
    			mod.ControlFormSubmit();
    		},
    		InterfaceClearInboxButtonDidClick() {
    			mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll().filter(function (e) {
    				return e.$JBXDocumentIsInbox;
    			}).map(mod._OLSKCatalog.modPublic.OLSKCatalogRemove);

    			$$invalidate(0, mod._ValueInboxIsVisible = false, mod);
    			window.location.hash = '';
    		},
    		InterfaceWindowDidKeydown(event) {
    			if (window.Launchlet.LCHSingletonExists()) {
    				return;
    			}

    			const handlerFunctions = {
    				Enter() {
    					if (!mod._ValueFormIsVisible) {
    						return;
    					}

    					if (event.ctrlKey || event.metaKey) {
    						return mod.ControlFormSubmit();
    					}
    				}
    			};

    			handlerFunctions[event.key] && handlerFunctions[event.key]();
    		},
    		InterfaceStashButtonDidClick() {
    			mod._OLSKCatalog.modPublic.OLSKCatalogStashEnabled(true);
    		},
    		// CONTROL
    		ControlDocumentSave(inputData) {
    			OLSKThrottle.OLSKThrottleMappedTimeout(mod._ValueSaveDocumentThrottleMap, inputData.JBXDocumentID, {
    				OLSKThrottleDuration: 500,
    				OLSKThrottleCallback() {
    					mod._ValueZDRWrap.App.JBXDocument.JBXDocumentUpdate(inputData);
    				}
    			});

    			if (main_1$1()) {
    				OLSKThrottle.OLSKThrottleSkip(mod._ValueSaveDocumentThrottleMap[inputData.JBXDocumentID]);
    			}
    		},
    		ControlTextAdd(inputData, properties = {}) {
    			const disableDuplicateURLs = false;

    			const urls = mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll().map(function (e) {
    				return e.JBXDocumentURL;
    			}).filter(function (e) {
    				return !!e;
    			});

    			return Promise.all(mod$2.JBXPlayDocuments(inputData).reverse().map(function (e) {
    				return Object.assign(e, properties);
    			}).filter(function (e) {
    				return !disableDuplicateURLs ;
    			}).map(mod.ControlDocumentAdd));
    		},
    		async ControlDocumentAdd(inputData) {
    			mod._OLSKCatalog.modPublic._OLSKCatalogInsertAndSort(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentCreate(inputData));

    			if (main_1$1()) {
    				return;
    			}

    			if (inputData.JBXDocumentDidFetch) {
    				return;
    			}

    			mod.ControlDocumentFetch(inputData);
    		},
    		ControlInboxAdd(inputData) {
    			inputData.map(mod._OLSKCatalog.modPublic.OLSKCatalogInsert);
    		},
    		_ControlHotfixUpdateInPlace(inputData) {
    			mod.ControlDocumentActivate(inputData);
    			mod._JBXPlayDetail.modPublic._JBXPlayDetailTriggerUpdate();
    		},
    		ControlDocumentActivate(inputData) {
    			$$invalidate(
    				0,
    				mod.OLSKTaxonomySuggestionItems = mod._OLSKTaxonomySuggestionItems.filter(function (e) {
    					return !(inputData.JBXDocumentTags || []).includes(e);
    				}),
    				mod
    			);

    			mod._OLSKCatalog.modPublic.OLSKCatalogSelect(inputData);

    			if (!inputData) {
    				return;
    			}

    			mod._OLSKCatalog.modPublic.OLSKCatalogFocusDetail();

    			if (mod.DataIsMobile()) {
    				return;
    			}

    			mod._OLSKCatalog.modPublic.OLSKCatalogActivateDetail();
    		},
    		ControlDocumentArchive(inputData) {
    			inputData.JBXDocumentArchiveDate = new Date();
    			mod.ControlDocumentSave(inputData);
    			mod.ControlDocumentActivate(inputData); // #purge-svelte-force-update
    		},
    		ControlDocumentUnarchive(inputData) {
    			delete inputData.JBXDocumentArchiveDate;
    			mod.ControlDocumentSave(inputData);
    			mod.ControlDocumentActivate(inputData); // #purge-svelte-force-update
    		},
    		async ControlDocumentFetch(inputData) {
    			mod.ControlDocumentSave(await mod._ValueFetchQueue.OLSKQueueAdd(function () {
    				return mod$2.JBXPlayFetch(inputData);
    			}));

    			mod._OLSKCatalog.modPublic.OLSKCatalogUpdate(inputData);
    		},
    		ControlDocumentDiscard(inputData) {
    			mod._OLSKCatalog.modPublic.OLSKCatalogRemove(inputData);
    			mod._ValueZDRWrap.App.JBXDocument.ZDRModelDeleteObject(inputData);
    		},
    		ControlDocumentQueue(inputData) {
    			mod.ControlDocumentAdd(Object.keys(mod.DataStubDocumentObjectValid()).concat('$JBXDocumentIsInbox').reduce(
    				function (coll, item) {
    					if (!Object.keys(mod.DataStubDocumentObject()).includes(item)) {
    						delete coll[item];
    					}

    					return coll;
    				},
    				mod.DataStubDocumentObject(inputData)
    			));
    		},
    		ControlFormSubmit() {
    			mod.ControlTextAdd(mod._ValueFormData, mod._ValueFormDataTags.length
    			? { JBXDocumentTags: mod._ValueFormDataTags }
    			: {});

    			$$invalidate(0, mod._ValueFormIsVisible = false, mod);
    			$$invalidate(0, mod._ValueFormData = '', mod);
    			$$invalidate(0, mod._ValueFormDataTags = [], mod);
    		},
    		// MESSAGE
    		_OLSKCatalogDispatchKey(inputData) {
    			return inputData.JBXDocumentID;
    		},
    		OLSKCollectionChunkFunction(inputData) {
    			return mod$2.JBXPlayChunkFunction(inputData, main_1);
    		},
    		OLSKCollectionChunkKeySortFunction() {
    			return mod$2.JBXPlayChunkKeySortFunction(main_1)(...arguments);
    		},
    		OLSKCollectionDispatchClick(inputData) {
    			mod.ControlDocumentActivate(inputData);
    		},
    		OLSKCollectionDispatchArrow(inputData) {
    			mod._OLSKCatalog.modPublic.OLSKCatalogSelect(inputData);
    		},
    		OLSKCatalogDispatchDetailActivate() {
    			document.querySelector('.JBXPlayDetailToolbarBackButton').focus();
    		},
    		OLSKCatalogDispatchArchivedHide() {
    			$$invalidate(0, mod._ValueRevealArchiveIsVisible = true, mod);
    		},
    		OLSKCatalogDispatchArchivedShow() {
    			$$invalidate(0, mod._ValueRevealArchiveIsVisible = false, mod);
    		},
    		OLSKCatalogDispatchQuantity(inputData) {
    			$$invalidate(
    				0,
    				mod._OLSKTaxonomySuggestionItems = mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll().reduce(
    					function (coll, item) {
    						return coll.concat((item.JBXDocumentTags || []).filter(function (e) {
    							return !coll.includes(e);
    						}));
    					},
    					[]
    				),
    				mod
    			);

    			mod.ReactDocumentLimit();
    		},
    		OLSKCatalogDispatchStash(inputData) {
    			if (!inputData.length) {
    				return;
    			}

    			$$invalidate(0, mod._JBXPlayShareItems = inputData, mod);
    			mod._JBXPlayShareModal.modPublic.OLSKModalViewShow();
    		},
    		OLSKAppToolbarDispatchApropos() {
    			mod._OLSKModalView.modPublic.OLSKModalViewShow();
    		},
    		OLSKAppToolbarDispatchTongue() {
    			if (window.Launchlet.LCHSingletonExists()) {
    				return window.Launchlet.LCHSingletonDestroy();
    			}

    			// #hotfix launchlet show all items
    			let selected;

    			window.Launchlet.LCHSingletonCreate({
    				LCHOptionRecipes: main$b.OLSKLanguageSwitcherRecipes({
    					ParamLanguageCodes: window.OLSKPublicConstants('OLSKSharedPageLanguagesAvailable'),
    					ParamCurrentLanguage: window.OLSKPublicConstants('OLSKSharedPageCurrentLanguage'),
    					ParamSpecUI: main_1$1(),
    					ParamRouteConstant: window.OLSKPublicConstants('OLSKSharedActiveRouteConstant'),
    					OLSKCanonical: window.OLSKCanonical
    				}).map(function (e) {
    					const item = e.LCHRecipeCallback;

    					return Object.assign(e, {
    						LCHRecipeCallback() {
    							selected = item;
    						}
    					});
    				}),
    				LCHOptionCompletionHandler() {
    					selected && selected();
    				},
    				LCHOptionMode: Launchlet.LCHModePreview,
    				LCHOptionLanguage: window.OLSKPublicConstants('OLSKSharedPageCurrentLanguage')
    			});
    		},
    		OLSKAppToolbarDispatchCloud() {
    			$$invalidate(0, mod._ValueCloudToolbarHidden = !mod._ValueCloudToolbarHidden, mod);
    		},
    		OLSKAppToolbarDispatchLauncher() {
    			if (window.Launchlet.LCHSingletonExists()) {
    				return window.Launchlet.LCHSingletonDestroy();
    			}

    			window.Launchlet.LCHSingletonCreate({
    				LCHOptionRecipes: mod.DataPlayRecipes(),
    				LCHOptionLanguage: window.OLSKPublicConstants('OLSKSharedPageCurrentLanguage')
    			});
    		},
    		JBXPlayDetailDispatchBack() {
    			mod._OLSKCatalog.modPublic.OLSKCatalogFocusMaster();
    		},
    		JBXPlayDetailDispatchArchive() {
    			mod.ControlDocumentArchive(mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected());
    		},
    		JBXPlayDetailDispatchUnarchive() {
    			mod.ControlDocumentUnarchive(mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected());
    		},
    		JBXPlayDetailDispatchFetch() {
    			mod.ControlDocumentFetch(mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected());
    		},
    		JBXPlayDetailDispatchUpdate() {
    			mod.ControlDocumentSave(mod._OLSKCatalog.modPublic.OLSKCatalogUpdate(mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected()));
    		},
    		JBXPlayDetailDispatchDiscard() {
    			mod.ControlDocumentDiscard(mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected());
    		},
    		JBXPlayDetailDispatchQueue() {
    			mod.ControlDocumentQueue(mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected());
    		},
    		async OLSKTransportDispatchImportJSON(inputData) {
    			await mod._ValueZDRWrap.App.JBXTransport.JBXTransportImport(main$2.OLSKRemoteStoragePostJSONParse(inputData));
    			await mod.SetupCatalog();
    		},
    		async OLSKTransportDispatchExportInput() {
    			return mod._ValueZDRWrap.App.JBXTransport.JBXTransportExport({
    				JBXDocument: mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll(),
    				JBXSetting: await mod._ValueZDRWrap.App.JBXSetting.JBXSettingList()
    			});
    		},
    		OLSKHashDispatchInitialize(inputData) {
    			if (inputData[mod$2.JBXPlayCaptureAnchor()]) {
    				return mod.ControlTextAdd(inputData[mod$2.JBXPlayCaptureAnchor()], {
    					JBXDocumentName: inputData[mod$2.JBXPlayNameAnchor()] || undefined,
    					JBXDocumentImageURL: inputData[mod$2.JBXPlayImageAnchor()] || undefined
    				}).then(function () {
    					return !main_1$1() && new Promise(function () {
    							return setTimeout(
    								function () {
    									return window.close();
    								},
    								100
    							);
    						});
    				});
    			}

    			if (inputData[mod$2.JBXPlayInboxAnchor()]) {
    				$$invalidate(0, mod._ValueInboxIsVisible = true, mod);

    				return mod.ControlInboxAdd(JSON.parse(inputData[mod$2.JBXPlayInboxAnchor()]).reverse().map(function (e) {
    					return Object.assign(mod.DataStubDocumentObjectValid(main$2.OLSKRemoteStoragePostJSONParse(main$a.OLSKObjectRemap(e, mod$2.JBXPlayRemap(), true))), { $JBXDocumentIsInbox: true });
    				}));
    			}
    		},
    		OLSKHashDispatchChange(inputData) {
    			
    		},
    		ZDRSchemaDispatchSyncCreateDocument(inputData) {
    			mod._OLSKCatalog.modPublic.OLSKCatalogInsert(inputData);
    		},
    		ZDRSchemaDispatchSyncUpdateDocument(inputData) {
    			mod._OLSKCatalog.modPublic.OLSKCatalogUpdate(inputData);

    			if (!main_1$1() && mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected() && mod._OLSKCatalog.modPublic.OLSKCatalogDataItemSelected().JBXDocumentID === inputData.JBXDocumentID) {
    				mod._ControlHotfixUpdateInPlace(inputData);
    			}
    		},
    		ZDRSchemaDispatchSyncDeleteDocument(inputData) {
    			mod._OLSKCatalog.modPublic.OLSKCatalogRemove(inputData);
    		},
    		ZDRSchemaDispatchSyncConflictDocument(inputData) {
    			return setTimeout(
    				async function () {
    					mod._OLSKCatalog.modPublic.OLSKCatalogUpdate(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentUpdate(main$2.OLSKRemoteStoragePostJSONParse(main$2.OLSKRemoteStorageChangeDelegateConflictSelectRecent(inputData))));
    				},
    				main_1$1() ? 0 : 500
    			);
    		},
    		async OLSKCloudFormDispatchSubmit(inputData) {
    			const protocol = main$j.ZDRPreferenceProtocolConnect(inputData);

    			(main$j.ZDRPreferenceProtocolMigrate()
    			? await mod.DataStorageClient(protocol)
    			: mod._ValueZDRWrap).ZDRCloudConnect(inputData);
    		},
    		OLSKCloudDispatchRenew() {
    			mod._ValueZDRWrap.ZDRCloudReconnect(mod._ValueCloudIdentity);
    		},
    		OLSKCloudStatusDispatchDisconnect() {
    			mod._ValueZDRWrap.ZDRCloudDisconnect();
    			$$invalidate(0, mod._ValueCloudIdentity = null, mod);
    			main$j.ZDRPreferenceProtocolClear();
    			localStorage.clear();
    		},
    		ZDRParamDispatchError(error) {
    			$$invalidate(0, mod._ValueCloudErrorText = error.toString(), mod);
    		},
    		ZDRParamDispatchConnected(identity, token) {
    			$$invalidate(0, mod._ValueCloudIdentity = identity, mod);
    			$$invalidate(0, mod._ValueCloudToken = token, mod);
    		},
    		ZDRParamDispatchOnline() {
    			$$invalidate(0, mod._ValueCloudIsOffline = false, mod);
    		},
    		ZDRParamDispatchOffline() {
    			$$invalidate(0, mod._ValueCloudIsOffline = true, mod);
    		},
    		ZDRParamDispatchSyncDidStart() {
    			$$invalidate(0, mod._ValueIsSyncing = true, mod);
    		},
    		ZDRParamDispatchSyncDidStop() {
    			$$invalidate(0, mod._ValueIsSyncing = false, mod);
    		},
    		OLSKCloudStatusDispatchSyncStart() {
    			if (mod._ValueZDRWrap.ZDRStorageProtocol !== main$j.ZDRProtocolRemoteStorage()) {
    				return;
    			}

    			mod._ValueZDRWrap.ZDRStorageClient().startSync();
    			mod.ZDRParamDispatchSyncDidStart();
    		},
    		OLSKCloudStatusDispatchSyncStop() {
    			if (mod._ValueZDRWrap.ZDRStorageProtocol !== main$j.ZDRProtocolRemoteStorage()) {
    				return;
    			}

    			mod._ValueZDRWrap.ZDRStorageClient().stopSync();
    		},
    		OLSKFundSetupDispatchClue() {
    			return mod.DataSetting('JBXSettingFundClue') || null;
    		},
    		_OLSKFundSetupDispatchUpdate(inputData) {
    			$$invalidate(0, mod); // #purge-svelte-force-update
    		},
    		OLSKFundDispatchPersist(inputData) {
    			$$invalidate(0, mod._ValueFundClue = inputData, mod); // #hotfix-missing-persist

    			if (!inputData) {
    				return mod._ValueZDRWrap.App.JBXSetting.JBXSettingsDelete({ JBXSettingKey: 'JBXSettingFundClue' });
    			}

    			return mod.ValueSetting('JBXSettingFundClue', inputData).then(function () {
    				if (main_1$1()) {
    					return;
    				}

    				setTimeout(
    					function () {
    						window.location.reload();
    					},
    					mod._ValueZDRWrap.ZDRStorageProtocol === main$j.ZDRProtocolFission()
    					? 1000
    					: 0
    				); // #hotfix-fission-delay
    			});
    		},
    		// REACT
    		ReactDocumentLimit() {
    			mod.OLSKFundDocumentRemainder && mod.OLSKFundDocumentRemainder(mod$2.JBXPlayDocumentCount(mod._OLSKCatalog.modPublic._OLSKCatalogDataItemsAll()));
    		},
    		// SETUP
    		DataStorageClient(inputData) {
    			return main$j.ZDRWrap({
    				ZDRParamLibrary: (function () {
    					if (inputData === main$j.ZDRProtocolFission()) {
    						return webnative;
    					}

    					return RemoteStorage;
    				})(),
    				ZDRParamScopes: [
    					{
    						ZDRScopeKey: 'App',
    						ZDRScopeDirectory: 'joybox',
    						ZDRScopeCreatorDirectory: 'rCreativ',
    						ZDRScopeSchemas: [
    							Object.assign(JBXDocument, {
    								ZDRSchemaDispatchSyncCreate: mod.ZDRSchemaDispatchSyncCreateDocument,
    								ZDRSchemaDispatchSyncUpdate: mod.ZDRSchemaDispatchSyncUpdateDocument,
    								ZDRSchemaDispatchSyncDelete: mod.ZDRSchemaDispatchSyncDeleteDocument,
    								ZDRSchemaDispatchSyncConflict: mod.ZDRSchemaDispatchSyncConflictDocument
    							}),
    							JBXSetting,
    							JBXTransport
    						]
    					}
    				],
    				ZDRParamDispatchError: mod.ZDRParamDispatchError,
    				ZDRParamDispatchConnected: mod.ZDRParamDispatchConnected,
    				ZDRParamDispatchOnline: mod.ZDRParamDispatchOnline,
    				ZDRParamDispatchOffline: mod.ZDRParamDispatchOffline,
    				_ZDRParamDispatchJSONPreStringify: main$a.OLSKObjectSafeCopy,
    				_ZDRParamDispatchJSONPostParse: main$2.OLSKRemoteStoragePostJSONParse
    			});
    		},
    		async SetupStorageClient() {
    			$$invalidate(0, mod._ValueZDRWrap = await mod.DataStorageClient(main$j.ZDRPreferenceProtocol(main$j.ZDRProtocolRemoteStorage())), mod);
    		},
    		async SetupCatalog() {
    			if (main$j.ZDRPreferenceProtocolMigrate()) {
    				const client = await mod.DataStorageClient(main$j.ZDRPreferenceProtocolMigrate());

    				await Promise.all((await client.App.ZDRStoragePathsRecursive('/')).map(async function (e) {
    					await mod._ValueZDRWrap.App.ZDRStorageWriteObject(e, await client.App.ZDRStorageReadObject(e));
    					await client.App.ZDRStorageDeleteFile(e);
    				}));

    				main$j.ZDRPreferenceProtocolMigrateClear();
    				client.ZDRCloudDisconnect();
    			}

    			if (!(await mod._ValueZDRWrap.App.JBXDocument.JBXDocumentList()).map(mod._OLSKCatalog.modPublic.OLSKCatalogInsert).length) {
    				mod.OLSKCatalogDispatchQuantity(0);
    			}
    		},
    		async SetupValueSettingsAll() {
    			$$invalidate(
    				0,
    				mod._ValueSettingsAll = Object.fromEntries((await mod._ValueZDRWrap.App.JBXSetting.JBXSettingList()).map(function (e) {
    					return [e.JBXSettingKey, e.JBXSettingValue];
    				})),
    				mod
    			);
    		},
    		SetupValueFetchQueue() {
    			$$invalidate(0, mod._ValueFetchQueue = main$c.OLSKQueueAPI(), mod);
    		},
    		SetupHash() {
    			return main$e.OLSKHashSetup(mod);
    		},
    		async _SetupFund() {
    			main$i.OLSKFundSetup({
    				ParamMod: mod,
    				OLSKLocalized: main_1,
    				ParamFormURL: 'https://fund.rosano.ca',
    				ParamProject: 'RP_009',
    				ParamSpecUI: main_1$1(),
    				ParamDocumentLimit: parseInt('10')
    			});

    			mod.ReactDocumentLimit();
    			await main$i.OLSKFundSetupPostPay(mod);

    			if (!mod._ValueCloudIdentity) {
    				return;
    			}

    			if (!mod._ValueFundClue) {
    				return;
    			}

    			const item = {
    				OLSK_CRYPTO_PAIR_RECEIVER_PRIVATE: `{"coeff":"b5d3b9eeb334da14576c28b904b085afb4331a0423aea5c1fcc576fd367fd93368bdfb6840146d7363cd74bea968c7266ce1065e1268962e78eee0ca068b87a7","d":"6921c6e468255a4b5cf6c21619b0b7af33bbec997916c95cb38855444a2ba109f62ad0c38100562e89cba5d80bbe5aacb9795247a9897e64798eba02afde79f52d9969892e01d1efa59bae9fdf6b7e61d116ab5ec8c019e529fde92a6f6e86b7bcd9e0756c987293f0bafd39a06195f20216101a042a60918338c9736422582b","dmp1":"966578949d193d7b0a60a04793a10f280e1e091612f28bdd762d3a637b6afb5cc6c0d398add8c6aa7826582df5f5cb27b8abb3476b9289bddea18664a68f69c7","dmq1":"774d3166fa8cb6fa141afd367cf52fe40bd8727fb1e4800e05da3cb0177f15f5676a46cf76b8a1f93a99147ca8ffb97f55e36a7f3a9fa3e6f77d61063713a66b","e":"3","n":"9db2aa569c3807710b72232126891386cd99e2e635a22e0b0d4c7fe66f41718ef140392541808145ceb178c4119d88031635fb6b7e4e3d96b656170407cdb6f158f21d47287ba9972622f22ce8029c24e093ba6ed462b8b8f908105d0384e40ee087784c59bec8d375379ed65f02a7e598f7c4d0ff8ad5518603894d62a81c8b","p":"e19834deeba5dc388f90f06b5d7196bc152d0da11c6bd1cc3143d7953920790b2a213d6504c529ffb4398444f0f0b0bb95018ceb215bce9ccdf24996f9d71eab","q":"b2f3ca1a77d312771e287bd1bb6fc7d611c4abbf8ad6c01508c75b08233ea0f01b1f6a373214f2f5d7e59ebafd7f963f00d51fbed7ef75da733c1189529d79a1"}${''}`, // #purge
    				OLSK_CRYPTO_PAIR_SENDER_PUBLIC: '35xc7GRsmMMQuLrXIH3qTTT1LfDIb692KkoBkxCwV6pdBlw9zVYcfycIhbs6cHdIRTwx507r4a0ZC87/3RFwLFYQzGDF5+/k1N/sjHrePGHbtWKxSzy/Yl3hPs/65cggAl/rQs+jiPyfkPBfXZDYZPzpHE6DfQfGVu7eDHv/OIs=',
    				OLSK_FUND_API_URL: 'https://fund.rosano.ca/api/grant',
    				ParamBody: {
    					OLSKPactAuthType: mod._ValueZDRWrap.ZDRStorageProtocol === main$j.ZDRProtocolRemoteStorage()
    					? main$f.OLSKPactAuthTypeRemoteStorage()
    					: main$f.OLSKPactAuthTypeFission(),
    					OLSKPactAuthIdentity: mod._ValueCloudIdentity,
    					OLSKPactAuthProof: mod._ValueCloudToken,
    					OLSKPactAuthMetadata: {
    						OLSKPactAuthMetadataModuleName: 'joybox',
    						OLSKPactAuthMetadataFolderPath: JBXDocument.JBXDocumentDirectory() + '/'
    					},
    					OLSKPactPayIdentity: mod._ValueCloudIdentity,
    					OLSKPactPayClue: mod._ValueFundClue
    				},
    				OLSKLocalized: main_1,
    				OLSKFundDispatchProgress: mod.OLSKFundDispatchProgress,
    				OLSKFundDispatchFail: mod.OLSKFundDispatchFail,
    				OLSKFundDispatchGrant: mod.OLSKFundDispatchGrant
    			};

    			return main$i.OLSKFundSetupGrant(item);
    		},
    		SetupFund() {
    			mod._SetupFund();
    		},
    		SetupLoading() {
    			$$invalidate(0, mod._ValueIsLoading = false, mod);

    			if (mod.DataIsMobile()) {
    				return;
    			}

    			setTimeout(function () {
    				document.querySelector('.OLSKNarrowFilterField').focus();
    			});
    		},
    		// LIFECYCLE
    		LifecycleModuleWillMount() {
    			return uSerial2(Object.keys(mod).filter(function (e) {
    				return e.match(/^Setup/);
    			}).map(function (e) {
    				return mod[e];
    			}));
    		}
    	};

    	onMount(mod.LifecycleModuleWillMount);
    	const writable_props = [];

    	Object_1$2.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Main> was created with unknown prop '${key}'`);
    	});

    	function jbxplaydetail_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._JBXPlayDetail = $$value;
    			$$invalidate(0, mod);
    		});
    	}

    	function textarea_input_handler() {
    		mod._ValueFormData = this.value;
    		$$invalidate(0, mod);
    	}

    	function olskcatalog_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._OLSKCatalog = $$value;
    			$$invalidate(0, mod);
    		});
    	}

    	function olskwebview_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._OLSKWebView = $$value;
    			$$invalidate(0, mod);
    		});
    	}

    	function olskmodalview0_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._OLSKModalView = $$value;
    			$$invalidate(0, mod);
    		});
    	}

    	function olskmodalview1_binding($$value) {
    		binding_callbacks[$$value ? 'unshift' : 'push'](() => {
    			mod._JBXPlayShareModal = $$value;
    			$$invalidate(0, mod);
    		});
    	}

    	$$self.$capture_state = () => ({
    		OLSKLocalized: main_1,
    		OLSK_SPEC_UI: main_1$1,
    		uSerial2,
    		JBXDocument,
    		JBXSetting,
    		JBXTransport,
    		JBXPlayLogic: mod$2,
    		OLSKThrottle,
    		OLSKRemoteStorage: main$2,
    		OLSKObject: main$a,
    		OLSKServiceWorker: main_1$3,
    		RemoteStorage,
    		OLSKString,
    		OLSKLanguageSwitcher: main$b,
    		OLSKQueue: main$c,
    		OLSKTransport: main$d,
    		OLSKHash: main$e,
    		OLSKFund: main$i,
    		OLSKPact: main$f,
    		zerodatawrap: main$j,
    		mod,
    		onMount,
    		OLSKCatalog: Main$4,
    		JBXPlayListItem: Main$5,
    		JBXPlayDetail: Main$7,
    		JBXPlayShare: Main$8,
    		OLSKTaxonomy: Main$6,
    		OLSKAppToolbar: Main$a,
    		OLSKServiceWorkerView: Main$b,
    		OLSKInstall: Main$c,
    		OLSKCloud: Main$f,
    		OLSKWebView: Main$i,
    		OLSKModalView: Main$h,
    		OLSKApropos: Main$j,
    		OLSKUIAssets
    	});

    	return [
    		mod,
    		jbxplaydetail_binding,
    		textarea_input_handler,
    		olskcatalog_binding,
    		olskwebview_binding,
    		olskmodalview0_binding,
    		olskmodalview1_binding
    	];
    }

    class Main$k extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$l, create_fragment$l, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Main",
    			options,
    			id: create_fragment$l.name
    		});
    	}
    }

    const JBXPlay = new Main$k({
    	target: document.body,
    });

    return JBXPlay;

}());
//# sourceMappingURL=ui-behaviour.js.map
